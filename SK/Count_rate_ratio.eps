%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Count_rate_ratio.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Vadim Naumov
%%CreationDate: 1/28/2013
%%BoundingBox: 0 0 593 481
%%HiResBoundingBox: 0 0 592.2017 480.5997
%%CropBox: 0 0 592.2017 480.5997
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1200 GradRes=300 Text=0 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Count_rate_ratio</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2013-01-28T13:41:01+04:00</xap:CreateDate>
         <xap:ModifyDate>2013-01-28T13:41:01+04:00</xap:ModifyDate>
         <xap:MetadataDate>2013-01-28T13:41:01+04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>208</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7L5Y8zS6j+bPmCwjvriS&#xA;1tbRBNpr0MVtOggqAyySJU822Cqa8uRccOKqe+YPN+gfoma3S9QXd/HqVvYwsHRnl09JRc7FahYm&#xA;hYF6U6UrUVEuSsbsNK8lrZ2+rTWljLHdw29vxghS4iEyc2YqyIakl6MxA+yK55bl1mp4jETmKJ/i&#xA;I2+bs8GmOQ1EA7X0/SjUs/IjuiLplpykZUUfUgPiYhRuY/E5WNVqv9Un/pz+ttOhmBdDbzDGYPNH&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:664558CD2E69E211B1708A53753EE58E</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:674558CD2E69E211B1708A53753EE58E</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:654558CD2E69E211B1708A53753EE58E</stRef:instanceID>
            <stRef:documentID>uuid:932A4B3F2566E2119522E78E48490AC5</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>True</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Euclid-Italic</stFnt:fontName>
                  <stFnt:fontFamily>Euclid</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>February 1999; version 1.5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>euclidi.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>EuclidSymbol</stFnt:fontName>
                  <stFnt:fontFamily>Euclid Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 1.61 (August 2004)</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>eucsym.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Euclid-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Euclid</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>February 1999; version 1.5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>euclidb.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Euclid</stFnt:fontName>
                  <stFnt:fontFamily>Euclid</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>February 1999; version 1.5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>euclid.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -480.6 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 480.6 li
592.202 480.6 li
592.202 0 li
cp
clp
[1 0 0 1 0 0 ]ct
589.077 220.302 mo
37.53 220.302 li
37.53 2.124 li
589.077 2.124 li
589.077 220.302 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[553.35 0 0 553.35 36.6274 111.213 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 .290196 ]
/C1 [1 1 .763399 ]
/N 2.01005 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 .763399 ]
/C1 [1 .465559 .526797 ]
/N 4.97729 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .465559 .526797 ]
/C1 [.880307 .290196 .290196 ]
/N 4.97729 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.880307 .290196 .290196 ]
/C1 [.38762 .376486 .37927 ]
/N 1 
>>
]
/Bounds [.351648 .521978 .692308 ]
/Encode [0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[553.35 0 0 553.35 36.6274 111.213 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W)trr2orrr2orrr2orrr2orrr2orrVc]mr;6Bfq>'gZp%7hEmd06%jPf"PgtLE4e^W$occs\V
aN)9<_SEq"]XkV^[C!6DYH=n+WMcSgU7n3MS=5k4Q'@GoO,]*UM2-e<Jq8E"I!U'^F`_YDDf0B+BkM$g
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,urr2orrr2orrr2orrr2oqrVZTjqYBp[o^_M=l/ps\f?qaY
]!8-$Ndu:rG'8%PG'8%PG'8%PG'8%PG'.qMF`__HF)l8>Df0B+BkCma?X$W3:J4;P8kVfM92&#Q9he>V
:/4PZ:JXb_:f'tc;,L4h;GpFl;c?Xp<)lpu<E<.$='&I)=BJ[.=]nm2>$>*6>?b?;>[1Q??!^iD?=.&H
~>
<~8kM]J8kM]J8kVfM9MA,S9hnGZ:Janc;H$Ln<E<1'=^#$7?!^lG@:EbYAnPgmCi+*0EcZAHG^=^bIt<6*
L5:_GNf]EgQ^O>6T;&-YWN32+ZF.3R]t_G$_SX1,_SX1,_SX1,_SX1,_83t(^qd_!^:h1j\[SuQZ*(.+
UnF3COG\dIL5(G;L5(G;L5(G;L4t>8KnY25KS+l.JUi5uI!U$\F)c&3An#%I;G0VS8kVfM92&#Q9he>V
:/4P[:JXb_:f("d;,U:i;H$Lm<)cgr<E3%"<`W7&='&L+=BJ^/=^#!4>$G38>[1N=?!U`B?=$rF?XI2K
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
590.877 222.102 mo
36.63 222.102 li
36.63 221.202 li
37.53 221.202 li
36.63 221.202 li
36.63 222.102 li
35.73 222.102 li
35.73 .324 li
590.877 .324 li
590.877 222.102 li
37.53 220.302 mo
589.077 220.302 li
589.077 2.124 li
37.53 2.124 li
37.53 220.302 li
.290196 .290196 .290196 rgb
f
589.077 444.501 mo
37.53 444.501 li
37.53 225.423 li
589.077 225.423 li
589.077 444.501 li
level3{
gsave
clp
[553.35 0 0 553.35 36.6274 334.513 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[553.35 0 0 553.35 36.6274 334.513 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
590.877 444.501 mo
589.077 444.501 li
589.077 225.423 li
37.53 225.423 li
37.53 444.501 li
35.73 444.501 li
35.73 223.623 li
590.877 223.623 li
590.877 444.501 li
.290196 .290196 .290196 rgb
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
38.9019 9.7998 mo
35.9272 9.7998 li
41.8774 17.6748 mo
35.9272 17.6748 li
41.8774 214.024 mo
35.9272 214.024 li
41.8774 17.6748 mo
35.9272 17.6748 li
38.9019 25.5498 mo
35.9272 25.5498 li
38.9019 33.4248 mo
35.9272 33.4248 li
38.9019 41.2998 mo
35.9272 41.2998 li
38.9019 49.1748 mo
35.9272 49.1748 li
41.8774 56.875 mo
35.9272 56.875 li
38.9019 64.75 mo
35.9272 64.75 li
38.9019 72.625 mo
35.9272 72.625 li
38.9019 80.5 mo
35.9272 80.5 li
38.9019 88.375 mo
35.9272 88.375 li
41.8774 96.25 mo
35.9272 96.25 li
38.9019 104.125 mo
35.9272 104.125 li
38.9019 111.825 mo
35.9272 111.825 li
38.9019 119.7 mo
35.9272 119.7 li
38.9019 127.575 mo
35.9272 127.575 li
41.8774 135.45 mo
35.9272 135.45 li
38.9019 143.325 mo
35.9272 143.325 li
38.9019 151.2 mo
35.9272 151.2 li
38.9019 159.075 mo
35.9272 159.075 li
38.9019 166.95 mo
35.9272 166.95 li
41.8774 174.65 mo
35.9272 174.65 li
38.9019 182.525 mo
35.9272 182.525 li
38.9019 190.4 mo
35.9272 190.4 li
38.9019 198.274 mo
35.9272 198.274 li
38.9019 206.149 mo
35.9272 206.149 li
41.8774 214.024 mo
35.9272 214.024 li
0 0 0 rgb
@
%ADOBeginSubsetFont: Euclid Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Euclid def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 57 /nine put
def
/FontBBox {-40 -252 1026 898} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/.notdef <1C60D8A8C9B5EE31F4> |-
/period <1C60D8A8C9B854D0F4777D328417EA82068F344C48BCA1F161AD7F0
E5F62D79DBEEEB35B8A910A912A4AB4CA9EDA9D4BE5A8388DAF40ECCA50C47B8
1BE330CA3BED4A25870F5> |-
/zero <1C60D8A8C9B7A73DB6EC90BAC169A0E3792238491ED9BF3959CB85FDB
F53DDB4A738239EF7E5EB5E723086C65A976FEFE61B3D79BB5150CBBA50EFAC2
44B23BD3AE36AA7FDF5832319531F29066A3AE2BFF7D6028E22DACDD11BC1A91
AC554381BC726955D5BF306B56768CF9ACD8A6A2A1E5FD66FF7699CEFD54F1AC
53E25187E990DF1725151F6EAB4EC8EDC4A80ED5A05052CE869A7E418E8F7A94
DEBF81756017B9B5BB480DFAFEEC1B4DD3F29B224B666FBE992CED3BE3A256ED
AF18CB1379F18D7F5C61FF99462FB766EC528A5916D5DC7A92DE139A7C686A29
A84EF7D6FADB6EBA78EAF08335216ADE01A2AC7C03A9FFBC82B7D1473C727D65
5DFBD858E9AE46EF5F5E1F663ED4E5E42F91823D8C0AC7A4B48CB90CDC75671D
DE802024561EA86830BDF7C67E36037> |-
/one <1C60D8A8C9B7A73DA4217147C01B74641ED7307F7D83D0E936BF23653D
097C8457820104F05F123D7B325D5CF2B91834DD3EF06A8A9816387770936FAC
01C1452DB378C5F031556EC097EBBFC6467829A38952439CE57E96A98287A99C
C28F8345FF9A4887C8F25AF95DC6B780A11427C2B22F856912F681971CC552A5
4C25A8C83ACC3DB0470DEBA3835172CC74D0EC02479BE9205A9ABFB6> |-
/two <1C60D8A8C9B7A73DB682F81EA478F19F283935D6A3DA24FE5C201A04B3
4042C554464363E51769CEC3D1EA7CE117AE44CBDBFEB4E5F2D49F35D3BABEE7
BF21227CD02A4038BB735E6C67287E26C465F39465F81369069A3B9918D10392
FF7353DD32753D1E5A3B1B489AA772B911CF8557B3B675659A96E1C0176B7320
C2DCA7EEBC3E4ABABC44656EDFF847401B568F2316889DD55F82833D80EF3C4B
1E908AF7A042B1C642DF1F87FA0F14D7045E9B441F1CEEABF72D11638858DC5F
E1FB5DB378C883C03FB86EFE136BB0AC6AEB9BB71FC5A17176075AF13D382509
95C114FFE4756CDBC0D194FB0824FDA6F1D2FBC2CA2B3033DB316EE11970414C
F97CCFE058C162D9FC2C6F8D4E5FA4AB2852CE1D16E118DBF5E0FD0BA4B12C30
168FF56D14F275F261BD04128245FFE716CE71FB> |-
/three <1C60D8A8C9B7A73DB6F69CBFF99412D27D61142A94F56062854C4E4B
D6CFE1C9F093D20383958F1E3C32B3B55950FE1DC448E9D2A6F6F44B68DC87D8
E780960609504F5EC7C3A4C92BE934CDD0A0BD47A445359B46244F60A4A12FE8
A16777566C277CE4CB817010B1E503E3ED7674DAA3600D83DF941E99455C27E0
E100D56D20BAD069C5F9C0ECE26E4ABBE62F8E99521A1770A46C4CF22D0DCA33
9A5600C0DFBFA55A9DCC5A4E77CEC0FC7F51BEF0648545B16D519441953860A7
AD97690CBADC939CD44F6C0166A334CBDC10A80101820615836569EB5FD7448E
DB43D05503618256A09CC67B17C0D06F5A0B0E12C16A0676D1789E76D5FDB65B
E5FF4E3D00445029E518C96157D44D037970283C9116099F7C5FA9A757655D07
0E2A1A38A223177F168547D87630C367D6575A640EF17C28C6C01C5D8FE4CA16
56F2673F0303484C99F732B6416FED6C010118A1CDC120C554C40B56DD49415E
51FC9224EC0FB6C6444EEC97E7EB2A079EB9E694D3B710BC8EDEF2056E6BC90B
BF8BC32843A07ABC4DFA7E165135742187F0A3F448A80373A8D7DFC7F9488454
8FDF325F68BB12D0FAA562445C82DCC1B287E66706AF384579565E05E7D7298E
9C49312C653B> |-
/four <1C60D8A8C9B7A73DB6BC45BDB48C550A3AFDF03C5A2228EF36973384C
D743BB2CD60CF8B9B9E7E2F94D5063061AF3EBFC8460CA5A5F391B35D1F8358A
1BB810DE5F7894BB445F44358E89B704B505ABCDF22CA7A824240BC1E7063AFB
041736B72282D853DF2744616D78A6F8C9EA747786C36ED25253FE235FF4DDC5
B1A231D89A7A7> |-
/nine <1C60D8A8C9B7A73DB6F19834DF2B565A5BFDA39B606E8F29A195127E4
FE9F1D8BB15B7FA1DB42FD39FD62DB4B7287439323B4250D49DDEC14BC7B65B7
24C0D06172A0AFA58007E14C6703DA246FB73BF99619C7CE0C5E66AA4BC45607
630BFC2049C2E669EF9AE060B350345E9BF873EFDD4B9A3855AFEE1FB93081F0
42B41A5BA3A67378B98E3D5E2C67A883435F8C81459EC4AC9B445F38F5330943
D90A8BBA760B51BFAB24BA9C99FB370FCD9978EDC807CAE26F675CF046E2581F
F9521AA87CD8ADF0DD945F96A55CDBE26E2541F369CF3A192EF74914B076A854
478925F285C137895FF33CAB4566B80B00F1376F23916AB2982FF77517E0110D
D4DB3EC7FFC09F33FD77FFA52C829BE9153291D545DD657BAE0267EB6B540EB5
36D49BF18541FB88AD8A27A69C7D1881BC868B43BAA18FD2CC0AC561FDE2248B
204B0E8D30C718E1227FF263E56FDCE2CBC457725FD487E7B4FEFD5F94B35AFA
8827DB2D6797ECBBE0F37CD78AD93DC2F62695953DFBE754B8193C5A0> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BYNVST+Euclid /Euclid findfont ct_VMDictPut
/BYNVST+Euclid*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
4{/.notdef}rp /nine 198{/.notdef}rp]
BYNVST+Euclid nf
BYNVST+Euclid*1 [9.8 0 0 -9.8 0 0 ]msf
19.8706 217.175 mo
(0.9)
[4.8999 2.72461 0 ]xsh
26.9253 177.976 mo
(1)sh
19.8706 138.776 mo
(1.1)
[4.8999 2.72461 0 ]xsh
19.8706 99.4014 mo
(1.2)
[4.8999 2.72461 0 ]xsh
19.8706 60.2012 mo
(1.3)
[4.8999 2.72461 0 ]xsh
19.8706 20.999 mo
(1.4)
[4.8999 2.72461 0 ]xsh
569.677 4.8999 mo
569.677 1.9248 li
544.477 4.8999 mo
544.477 1.9248 li
508.952 4.8999 mo
508.952 1.9248 li
448.227 7.875 mo
448.227 1.9248 li
439.126 4.8999 mo
439.126 1.9248 li
428.802 4.8999 mo
428.802 1.9248 li
417.077 4.8999 mo
417.077 1.9248 li
403.602 4.8999 mo
403.602 1.9248 li
387.677 4.8999 mo
387.677 1.9248 li
368.077 4.8999 mo
368.077 1.9248 li
342.876 4.8999 mo
342.876 1.9248 li
307.352 4.8999 mo
307.352 1.9248 li
246.627 7.875 mo
246.627 1.9248 li
237.527 4.8999 mo
237.527 1.9248 li
227.202 4.8999 mo
227.202 1.9248 li
215.477 4.8999 mo
215.477 1.9248 li
202.002 4.8999 mo
202.002 1.9248 li
186.077 4.8999 mo
186.077 1.9248 li
166.477 4.8999 mo
166.477 1.9248 li
141.277 4.8999 mo
141.277 1.9248 li
105.752 4.8999 mo
105.752 1.9248 li
45.0269 7.875 mo
45.0269 1.9248 li
586.302 9.7998 mo
589.277 9.7998 li
583.327 17.6748 mo
589.277 17.6748 li
583.327 214.024 mo
589.277 214.024 li
583.327 17.6748 mo
589.277 17.6748 li
586.302 25.5498 mo
589.277 25.5498 li
586.302 33.4248 mo
589.277 33.4248 li
586.302 41.2998 mo
589.277 41.2998 li
586.302 49.1748 mo
589.277 49.1748 li
583.327 56.875 mo
589.277 56.875 li
586.302 64.75 mo
589.277 64.75 li
586.302 72.625 mo
589.277 72.625 li
586.302 80.5 mo
589.277 80.5 li
586.302 88.375 mo
589.277 88.375 li
583.327 96.25 mo
589.277 96.25 li
586.302 104.125 mo
589.277 104.125 li
586.302 111.825 mo
589.277 111.825 li
586.302 119.7 mo
589.277 119.7 li
586.302 127.575 mo
589.277 127.575 li
583.327 135.45 mo
589.277 135.45 li
586.302 143.325 mo
589.277 143.325 li
586.302 151.2 mo
589.277 151.2 li
586.302 159.075 mo
589.277 159.075 li
586.302 166.95 mo
589.277 166.95 li
583.327 174.65 mo
589.277 174.65 li
586.302 182.525 mo
589.277 182.525 li
586.302 190.4 mo
589.277 190.4 li
586.302 198.274 mo
589.277 198.274 li
586.302 206.149 mo
589.277 206.149 li
583.327 214.024 mo
589.277 214.024 li
589.277 218.925 mo
589.277 221.899 li
569.677 218.925 mo
569.677 221.899 li
544.477 218.925 mo
544.477 221.899 li
508.952 218.925 mo
508.952 221.899 li
448.227 215.95 mo
448.227 221.899 li
439.126 218.925 mo
439.126 221.899 li
428.802 218.925 mo
428.802 221.899 li
417.077 218.925 mo
417.077 221.899 li
403.602 218.925 mo
403.602 221.899 li
387.677 218.925 mo
387.677 221.899 li
368.077 218.925 mo
368.077 221.899 li
342.876 218.925 mo
342.876 221.899 li
307.352 218.925 mo
307.352 221.899 li
246.627 215.95 mo
246.627 221.899 li
237.527 218.925 mo
237.527 221.899 li
227.202 218.925 mo
227.202 221.899 li
215.477 218.925 mo
215.477 221.899 li
202.002 218.925 mo
202.002 221.899 li
186.077 218.925 mo
186.077 221.899 li
166.477 218.925 mo
166.477 221.899 li
141.277 218.925 mo
141.277 221.899 li
105.752 218.925 mo
105.752 221.899 li
45.0269 215.95 mo
45.0269 221.899 li
@
3 lw
[1 2 ] 0 dsh
35.9272 183.575 mo
37.8521 183.225 li
39.6021 182.7 li
41.5269 182.525 li
43.9771 182.175 li
45.3774 182 li
48.1772 182 li
52.5522 182.875 li
58.1519 183.925 li
63.0522 184.8 li
63.7524 184.975 li
69.3521 186.2 li
74.9517 187.425 li
79.3267 188.475 li
80.5522 188.825 li
85.6274 190.575 li
86.1519 190.575 li
87.7271 191.1 li
91.0522 191.625 li
91.7524 191.8 li
94.0269 192.5 li
97.3521 193.375 li
102.952 195.125 li
107.502 196.35 li
108.552 196.524 li
114.152 198.625 li
115.202 198.8 li
116.602 199.149 li
119.052 199.5 li
119.752 199.5 li
125.352 200.725 li
128.852 201.425 li
130.952 201.774 li
133.577 202.3 li
136.552 202.649 li
141.627 203.35 li
142.152 203.35 li
144.427 203.524 li
147.577 203.875 li
151.427 204.05 li
156.502 204.05 li
158.777 204.225 li
197.977 204.225 li
203.577 204.399 li
209.177 204.399 li
214.777 204.575 li
220.377 204.575 li
225.977 204.75 li
231.577 204.75 li
237.002 204.925 li
242.602 204.925 li
248.202 205.1 li
253.802 205.274 li
259.402 205.45 li
265.002 205.45 li
270.602 205.625 li
276.202 205.8 li
281.802 205.975 li
287.402 205.975 li
293.002 206.149 li
298.602 206.325 li
304.202 206.5 li
309.802 206.675 li
315.402 206.675 li
321.001 206.85 li
326.602 207.024 li
332.027 207.2 li
337.626 207.2 li
1 0 0 rgb
@
1.5 lw
[] 0 dsh
35.9272 174.65 mo
589.277 174.65 li
0 0 0 rgb
@
3 lw
336.402 140.7 mo
337.626 140.525 li
327.477 140.875 mo
332.027 140.875 li
321.001 141.225 mo
323.102 141.05 li
318.552 141.225 mo
321.001 141.225 li
309.802 141.575 mo
314.177 141.4 li
309.626 141.575 mo
309.802 141.575 li
304.202 141.75 mo
305.251 141.75 li
300.702 141.925 mo
304.202 141.75 li
293.002 142.1 mo
296.327 142.1 li
291.777 142.275 mo
293.002 142.1 li
282.852 142.45 mo
287.402 142.45 li
276.202 142.8 mo
278.477 142.625 li
273.927 142.8 mo
276.202 142.8 li
265.002 143.15 mo
269.552 142.975 li
259.402 143.325 mo
260.627 143.325 li
256.077 143.5 mo
259.402 143.325 li
248.202 143.675 mo
251.702 143.675 li
247.152 143.85 mo
248.202 143.675 li
242.602 144.025 mo
242.777 144.025 li
238.227 144.025 mo
242.602 144.025 li
231.577 144.2 mo
233.852 144.2 li
229.302 144.2 mo
231.577 144.2 li
220.377 144.55 mo
224.927 144.375 li
214.777 144.725 mo
216.002 144.55 li
211.452 144.725 mo
214.777 144.725 li
203.577 144.9 mo
207.077 144.9 li
202.527 144.9 mo
203.577 144.9 li
197.977 145.075 mo
198.152 145.075 li
193.602 145.075 mo
197.977 145.075 li
186.777 145.25 mo
189.227 145.25 li
184.677 145.25 mo
186.777 145.25 li
175.752 145.25 mo
180.302 145.25 li
169.977 145.425 mo
171.377 145.425 li
166.827 145.425 mo
169.977 145.425 li
158.777 145.6 mo
162.452 145.6 li
158.077 145.6 mo
158.777 145.6 li
153.177 145.95 mo
153.527 145.95 li
151.252 146.125 mo
153.177 145.95 li
149.152 146.3 mo
151.252 146.125 li
142.152 147.35 mo
144.602 147 li
141.102 147.525 mo
142.152 147.35 li
140.227 147.7 mo
141.102 147.525 li
131.477 149.625 mo
135.852 148.575 li
125.352 151.2 mo
127.277 150.675 li
122.902 151.9 mo
125.352 151.2 li
114.152 153.825 mo
118.527 152.95 li
108.552 155.925 mo
110.127 155.4 li
107.677 156.275 mo
108.552 155.925 li
105.752 156.8 mo
107.677 156.275 li
97.3521 159.25 mo
101.552 158.025 li
97.1772 159.25 mo
97.3521 159.25 li
91.7524 160.65 mo
92.9771 160.475 li
91.5767 160.65 mo
91.7524 160.65 li
88.6021 161.35 mo
91.5767 160.65 li
82.6519 162.75 mo
84.2271 162.4 li
80.5522 163.45 mo
82.6519 162.75 li
79.8521 163.625 mo
80.5522 163.45 li
74.9517 164.675 mo
75.4771 164.5 li
71.1021 165.375 mo
74.9517 164.675 li
63.7524 166.775 mo
66.7271 166.075 li
62.3521 166.95 mo
63.7524 166.775 li
53.6021 168.175 mo
57.9771 167.65 li
48.0024 169.05 mo
49.2271 169.05 li
47.1274 169.225 mo
48.0024 169.05 li
45.9019 169.225 mo
47.1274 169.225 li
44.6772 169.05 mo
45.9019 169.225 li
38.0269 168.35 mo
40.3022 168.7 li
35.9272 168 mo
38.0269 168.35 li
.164706 .372549 0 rgb
@
38.2017 163.45 mo
40.1274 163.975 li
35.9272 162.575 mo
38.2017 163.45 li
0 1 0 rgb
@
43.4517 164.36 mo
43.4517 163.78 42.9819 163.31 42.4019 163.31 cv
41.8228 163.31 41.3521 163.78 41.3521 164.36 cv
41.3521 164.939 41.8228 165.41 42.4019 165.41 cv
42.9819 165.41 43.4517 164.939 43.4517 164.36 cv
ef
48.3521 164.675 mo
48.8774 164.5 li
47.1274 164.85 mo
48.3521 164.675 li
46.0767 164.85 mo
47.1274 164.85 li
44.6772 164.675 mo
46.0767 164.85 li
44.5024 164.675 mo
44.6772 164.675 li
@
52.188 163.94 mo
52.188 163.36 51.7183 162.89 51.1382 162.89 cv
50.5581 162.89 50.0884 163.36 50.0884 163.94 cv
50.0884 164.52 50.5581 164.99 51.1382 164.99 cv
51.7183 164.99 52.188 164.52 52.188 163.94 cv
ef
53.2524 163.275 mo
57.6274 162.05 li
@
60.7563 161.504 mo
60.7563 160.924 60.2856 160.454 59.7065 160.454 cv
59.1265 160.454 58.6567 160.924 58.6567 161.504 cv
58.6567 162.083 59.1265 162.554 59.7065 162.554 cv
60.2856 162.554 60.7563 162.083 60.7563 161.504 cv
ef
63.7524 160.3 mo
66.0269 159.6 li
61.8267 160.825 mo
63.7524 160.3 li
@
69.3237 158.9 mo
69.3237 158.32 68.854 157.85 68.2739 157.85 cv
67.6948 157.85 67.2241 158.32 67.2241 158.9 cv
67.2241 159.479 67.6948 159.95 68.2739 159.95 cv
68.854 159.95 69.3237 159.479 69.3237 158.9 cv
ef
70.4019 158.2 mo
74.6021 156.625 li
@
77.5562 155.96 mo
77.5562 155.38 77.0854 154.91 76.5063 154.91 cv
75.9263 154.91 75.4565 155.38 75.4565 155.96 cv
75.4565 156.54 75.9263 157.01 76.5063 157.01 cv
77.0854 157.01 77.5562 156.54 77.5562 155.96 cv
ef
80.5522 154.175 mo
82.6519 153.125 li
79.8521 154.7 mo
80.5522 154.175 li
78.6274 155.05 mo
79.8521 154.7 li
@
85.7886 152.096 mo
85.7886 151.517 85.3179 151.046 84.7378 151.046 cv
84.1587 151.046 83.688 151.517 83.688 152.096 cv
83.688 152.675 84.1587 153.146 84.7378 153.146 cv
85.3179 153.146 85.7886 152.675 85.7886 152.096 cv
ef
86.6772 151.2 mo
90.8774 149.45 li
@
94.02 148.568 mo
94.02 147.988 93.5493 147.518 92.9702 147.518 cv
92.3901 147.518 91.9204 147.988 91.9204 148.568 cv
91.9204 149.147 92.3901 149.618 92.9702 149.618 cv
93.5493 149.618 94.02 149.147 94.02 148.568 cv
ef
97.3521 146.3 mo
98.7524 145.425 li
94.9019 147.525 mo
97.3521 146.3 li
@
101.917 144.368 mo
101.917 143.789 101.446 143.318 100.866 143.318 cv
100.287 143.318 99.8159 143.789 99.8159 144.368 cv
99.8159 144.947 100.287 145.418 100.866 145.418 cv
101.446 145.418 101.917 144.947 101.917 144.368 cv
ef
102.952 143.15 mo
106.627 141.225 li
102.777 143.325 mo
102.952 143.15 li
@
109.56 140 mo
109.56 139.42 109.089 138.95 108.51 138.95 cv
107.93 138.95 107.46 139.42 107.46 140 cv
107.46 140.58 107.93 141.05 108.51 141.05 cv
109.089 141.05 109.56 140.58 109.56 140 cv
ef
112.927 136.675 mo
113.977 135.975 li
110.302 138.6 mo
112.927 136.675 li
@
116.952 135.128 mo
116.952 134.548 116.482 134.078 115.902 134.078 cv
115.323 134.078 114.852 134.548 114.852 135.128 cv
114.852 135.708 115.323 136.178 115.902 136.178 cv
116.482 136.178 116.952 135.708 116.952 135.128 cv
ef
121.502 132.3 mo
121.852 132.125 li
119.752 133.35 mo
121.502 132.3 li
118.002 134.05 mo
119.752 133.35 li
@
124.848 130.928 mo
124.848 130.348 124.377 129.878 123.798 129.878 cv
123.218 129.878 122.748 130.348 122.748 130.928 cv
122.748 131.508 123.218 131.978 123.798 131.978 cv
124.377 131.978 124.848 131.508 124.848 130.928 cv
ef
125.702 129.85 mo
129.552 127.575 li
@
132.66 126.56 mo
132.66 125.98 132.19 125.51 131.61 125.51 cv
131.031 125.51 130.56 125.98 130.56 126.56 cv
130.56 127.14 131.031 127.61 131.61 127.61 cv
132.19 127.61 132.66 127.14 132.66 126.56 cv
ef
136.552 124.25 mo
137.602 123.725 li
133.577 125.65 mo
136.552 124.25 li
@
140.724 122.696 mo
140.724 122.116 140.253 121.646 139.674 121.646 cv
139.094 121.646 138.625 122.116 138.625 122.696 cv
138.625 123.275 139.094 123.746 139.674 123.746 cv
140.253 123.746 140.724 123.275 140.724 122.696 cv
ef
145.127 120.4 mo
145.827 120.225 li
142.152 121.45 mo
145.127 120.4 li
141.627 121.625 mo
142.152 121.45 li
@
148.957 119.504 mo
148.957 118.924 148.486 118.454 147.907 118.454 cv
147.327 118.454 146.856 118.924 146.856 119.504 cv
146.856 120.083 147.327 120.554 147.907 120.554 cv
148.486 120.554 148.957 120.083 148.957 119.504 cv
ef
153.177 117.95 mo
154.402 117.775 li
151.077 118.475 mo
153.177 117.95 li
150.027 118.825 mo
151.077 118.475 li
@
157.692 117.404 mo
157.692 116.824 157.221 116.354 156.642 116.354 cv
156.063 116.354 155.592 116.824 155.592 117.404 cv
155.592 117.983 156.063 118.454 156.642 118.454 cv
157.221 118.454 157.692 117.983 157.692 117.404 cv
ef
158.777 117.25 mo
163.327 116.725 li
@
166.512 116.564 mo
166.512 115.984 166.042 115.514 165.462 115.514 cv
164.882 115.514 164.412 115.984 164.412 116.564 cv
164.412 117.144 164.882 117.614 165.462 117.614 cv
166.042 117.614 166.512 117.144 166.512 116.564 cv
ef
169.977 116.375 mo
172.252 116.375 li
167.702 116.55 mo
169.977 116.375 li
@
175.417 116.228 mo
175.417 115.648 174.946 115.178 174.366 115.178 cv
173.787 115.178 173.316 115.648 173.316 116.228 cv
173.316 116.808 173.787 117.278 174.366 117.278 cv
174.946 117.278 175.417 116.808 175.417 116.228 cv
ef
176.627 116.2 mo
181.177 116.025 li
@
184.32 116.06 mo
184.32 115.48 183.85 115.01 183.27 115.01 cv
182.691 115.01 182.22 115.48 182.22 116.06 cv
182.22 116.64 182.691 117.11 183.27 117.11 cv
183.85 117.11 184.32 116.64 184.32 116.06 cv
ef
186.777 116.025 mo
190.102 115.85 li
185.552 116.025 mo
186.777 116.025 li
@
193.224 115.64 mo
193.224 115.061 192.753 114.59 192.174 114.59 cv
191.594 114.59 191.125 115.061 191.125 115.64 cv
191.125 116.219 191.594 116.69 192.174 116.69 cv
192.753 116.69 193.224 116.219 193.224 115.64 cv
ef
197.977 115.5 mo
199.027 115.5 li
194.477 115.675 mo
197.977 115.5 li
@
202.212 115.304 mo
202.212 114.724 201.742 114.254 201.162 114.254 cv
200.583 114.254 200.112 114.724 200.112 115.304 cv
200.112 115.883 200.583 116.354 201.162 116.354 cv
201.742 116.354 202.212 115.883 202.212 115.304 cv
ef
203.577 115.15 mo
207.777 114.975 li
203.402 115.15 mo
203.577 115.15 li
@
211.116 114.8 mo
211.116 114.22 210.646 113.75 210.066 113.75 cv
209.487 113.75 209.016 114.22 209.016 114.8 cv
209.016 115.379 209.487 115.85 210.066 115.85 cv
210.646 115.85 211.116 115.379 211.116 114.8 cv
ef
214.777 114.625 mo
216.702 114.45 li
212.327 114.8 mo
214.777 114.625 li
@
220.02 114.296 mo
220.02 113.716 219.549 113.246 218.97 113.246 cv
218.39 113.246 217.92 113.716 217.92 114.296 cv
217.92 114.875 218.39 115.346 218.97 115.346 cv
219.549 115.346 220.02 114.875 220.02 114.296 cv
ef
221.252 114.275 mo
225.627 113.925 li
@
228.924 113.708 mo
228.924 113.128 228.454 112.658 227.875 112.658 cv
227.294 112.658 226.824 113.128 226.824 113.708 cv
226.824 114.288 227.294 114.758 227.875 114.758 cv
228.454 114.758 228.924 114.288 228.924 113.708 cv
ef
231.577 113.575 mo
234.552 113.4 li
230.177 113.575 mo
231.577 113.575 li
@
237.912 113.204 mo
237.912 112.625 237.442 112.154 236.862 112.154 cv
236.283 112.154 235.812 112.625 235.812 113.204 cv
235.812 113.783 236.283 114.254 236.862 114.254 cv
237.442 114.254 237.912 113.783 237.912 113.204 cv
ef
242.602 113.05 mo
243.477 113.05 li
239.102 113.225 mo
242.602 113.05 li
@
246.816 112.7 mo
246.816 112.12 246.346 111.65 245.766 111.65 cv
245.186 111.65 244.716 112.12 244.716 112.7 cv
244.716 113.28 245.186 113.75 245.766 113.75 cv
246.346 113.75 246.816 113.28 246.816 112.7 cv
ef
248.202 112.35 mo
252.402 112.175 li
247.852 112.525 mo
248.202 112.35 li
@
255.72 112.028 mo
255.72 111.448 255.25 110.978 254.67 110.978 cv
254.09 110.978 253.621 111.448 253.621 112.028 cv
253.621 112.607 254.09 113.078 254.67 113.078 cv
255.25 113.078 255.72 112.607 255.72 112.028 cv
ef
259.402 111.475 mo
261.327 111.475 li
256.777 111.825 mo
259.402 111.475 li
@
264.457 111.272 mo
264.457 110.692 263.986 110.222 263.407 110.222 cv
262.827 110.222 262.356 110.692 262.356 111.272 cv
262.356 111.852 262.827 112.322 263.407 112.322 cv
263.986 112.322 264.457 111.852 264.457 111.272 cv
ef
265.702 111.125 mo
270.252 110.775 li
@
273.36 110.6 mo
273.36 110.02 272.89 109.55 272.31 109.55 cv
271.73 109.55 271.26 110.02 271.26 110.6 cv
271.26 111.18 271.73 111.65 272.31 111.65 cv
272.89 111.65 273.36 111.18 273.36 110.6 cv
ef
276.202 110.25 mo
279.002 110.075 li
274.627 110.425 mo
276.202 110.25 li
@
282.348 109.76 mo
282.348 109.18 281.877 108.71 281.298 108.71 cv
280.718 108.71 280.249 109.18 280.249 109.76 cv
280.249 110.339 280.718 110.81 281.298 110.81 cv
281.877 110.81 282.348 110.339 282.348 109.76 cv
ef
287.402 109.375 mo
287.927 109.2 li
283.552 109.55 mo
287.402 109.375 li
@
291.252 109.004 mo
291.252 108.424 290.782 107.954 290.202 107.954 cv
289.623 107.954 289.152 108.424 289.152 109.004 cv
289.152 109.583 289.623 110.054 290.202 110.054 cv
290.782 110.054 291.252 109.583 291.252 109.004 cv
ef
293.002 108.85 mo
296.852 108.5 li
292.477 108.85 mo
293.002 108.85 li
@
300.156 108.164 mo
300.156 107.584 299.685 107.114 299.106 107.114 cv
298.526 107.114 298.055 107.584 298.055 108.164 cv
298.055 108.744 298.526 109.214 299.106 109.214 cv
299.685 109.214 300.156 108.744 300.156 108.164 cv
ef
304.202 107.975 mo
305.777 107.8 li
301.227 108.15 mo
304.202 107.975 li
@
309.06 107.66 mo
309.06 107.08 308.589 106.61 308.01 106.61 cv
307.43 106.61 306.96 107.08 306.96 107.66 cv
306.96 108.239 307.43 108.71 308.01 108.71 cv
308.589 108.71 309.06 108.239 309.06 107.66 cv
ef
310.152 107.45 mo
314.702 106.925 li
@
317.879 106.736 mo
317.879 106.156 317.41 105.686 316.83 105.686 cv
316.25 105.686 315.78 106.156 315.78 106.736 cv
315.78 107.315 316.25 107.786 316.83 107.786 cv
317.41 107.786 317.879 107.315 317.879 106.736 cv
ef
321.001 106.575 mo
323.626 106.225 li
319.077 106.575 mo
321.001 106.575 li
@
326.784 106.064 mo
326.784 105.484 326.313 105.014 325.734 105.014 cv
325.154 105.014 324.684 105.484 324.684 106.064 cv
324.684 106.644 325.154 107.114 325.734 107.114 cv
326.313 107.114 326.784 106.644 326.784 106.064 cv
ef
332.027 105.7 mo
332.376 105.525 li
328.001 105.875 mo
332.027 105.7 li
@
335.688 105.308 mo
335.688 104.728 335.217 104.258 334.638 104.258 cv
334.058 104.258 333.588 104.728 333.588 105.308 cv
333.588 105.888 334.058 106.358 334.638 106.358 cv
335.217 106.358 335.688 105.888 335.688 105.308 cv
ef
351.626 103.95 mo
353.376 103.95 li
348.827 104.3 mo
351.626 103.95 li
336.927 105.175 mo
337.626 105.175 li
@
356.52 103.796 mo
356.52 103.216 356.049 102.746 355.47 102.746 cv
354.89 102.746 354.42 103.216 354.42 103.796 cv
354.42 104.375 354.89 104.846 355.47 104.846 cv
356.049 104.846 356.52 104.375 356.52 103.796 cv
ef
360.027 103.425 mo
362.302 103.25 li
357.751 103.6 mo
360.027 103.425 li
@
365.423 103.04 mo
365.423 102.46 364.954 101.99 364.374 101.99 cv
363.794 101.99 363.324 102.46 363.324 103.04 cv
363.324 103.619 363.794 104.09 364.374 104.09 cv
364.954 104.09 365.423 103.619 365.423 103.04 cv
ef
370.876 102.55 mo
371.052 102.55 li
366.677 102.9 mo
370.876 102.55 li
@
374.412 102.368 mo
374.412 101.789 373.941 101.318 373.362 101.318 cv
372.782 101.318 372.312 101.789 372.312 102.368 cv
372.312 102.947 372.782 103.418 373.362 103.418 cv
373.941 103.418 374.412 102.947 374.412 102.368 cv
ef
376.827 102.2 mo
379.977 102.025 li
375.602 102.2 mo
376.827 102.2 li
@
383.316 101.864 mo
383.316 101.284 382.845 100.814 382.265 100.814 cv
381.686 100.814 381.215 101.284 381.215 101.864 cv
381.215 102.443 381.686 102.914 382.265 102.914 cv
382.845 102.914 383.316 102.443 383.316 101.864 cv
ef
388.027 101.5 mo
388.902 101.325 li
384.527 101.675 mo
388.027 101.5 li
@
392.22 101.108 mo
392.22 100.528 391.75 100.058 391.17 100.058 cv
390.59 100.058 390.12 100.528 390.12 101.108 cv
390.12 101.688 390.59 102.158 391.17 102.158 cv
391.75 102.158 392.22 101.688 392.22 101.108 cv
ef
397.652 100.8 mo
397.827 100.8 li
396.777 100.8 mo
397.652 100.8 li
394.852 100.975 mo
396.777 100.8 li
393.626 100.975 mo
394.852 100.975 li
393.452 101.15 mo
393.626 100.975 li
@
401.124 100.604 mo
401.124 100.024 400.654 99.5537 400.074 99.5537 cv
399.494 99.5537 399.024 100.024 399.024 100.604 cv
399.024 101.184 399.494 101.654 400.074 101.654 cv
400.654 101.654 401.124 101.184 401.124 100.604 cv
ef
406.227 100.625 mo
406.751 100.625 li
405.352 100.8 mo
406.227 100.625 li
404.827 100.8 mo
405.352 100.8 li
404.477 100.8 mo
404.827 100.8 li
403.952 100.8 mo
404.477 100.8 li
403.602 100.8 mo
403.952 100.8 li
403.077 100.8 mo
403.602 100.8 li
402.376 100.8 mo
403.077 100.8 li
@
410.112 100.268 mo
410.112 99.6885 409.641 99.2183 409.062 99.2183 cv
408.482 99.2183 408.011 99.6885 408.011 100.268 cv
408.011 100.847 408.482 101.318 409.062 101.318 cv
409.641 101.318 410.112 100.847 410.112 100.268 cv
ef
436.852 98.3501 mo
437.202 98.3501 li
434.751 98.5249 mo
436.852 98.3501 li
432.652 98.5249 mo
434.751 98.5249 li
@
440.52 98.3359 mo
440.52 97.7563 440.049 97.2856 439.47 97.2856 cv
438.89 97.2856 438.42 97.7563 438.42 98.3359 cv
438.42 98.9155 438.89 99.3857 439.47 99.3857 cv
440.049 99.3857 440.52 98.9155 440.52 98.3359 cv
ef
443.852 98.1748 mo
446.126 98 li
441.577 98.1748 mo
443.852 98.1748 li
@
449.423 98 mo
449.423 97.4204 448.954 96.9497 448.374 96.9497 cv
447.794 96.9497 447.324 97.4204 447.324 98 cv
447.324 98.5796 447.794 99.0498 448.374 99.0498 cv
448.954 99.0498 449.423 98.5796 449.423 98 cv
ef
450.501 97.8247 mo
455.052 97.6499 li
@
458.16 97.4956 mo
458.16 96.9165 457.689 96.4458 457.11 96.4458 cv
456.531 96.4458 456.06 96.9165 456.06 97.4956 cv
456.06 98.0752 456.531 98.5459 457.11 98.5459 cv
457.689 98.5459 458.16 98.0752 458.16 97.4956 cv
ef
460.652 97.2998 mo
463.977 97.125 li
459.427 97.4751 mo
460.652 97.2998 li
@
467.148 97.1597 mo
467.148 96.5801 466.677 96.1099 466.098 96.1099 cv
465.518 96.1099 465.048 96.5801 465.048 97.1597 cv
465.048 97.7393 465.518 98.21 466.098 98.21 cv
466.677 98.21 467.148 97.7393 467.148 97.1597 cv
ef
472.727 96.7749 mo
472.902 96.7749 li
471.852 96.9497 mo
472.727 96.7749 li
470.626 96.9497 mo
471.852 96.9497 li
468.352 96.9497 mo
470.626 96.9497 li
@
476.052 96.7402 mo
476.052 96.1602 475.582 95.6899 475.001 95.6899 cv
474.422 95.6899 473.952 96.1602 473.952 96.7402 cv
473.952 97.3193 474.422 97.79 475.001 97.79 cv
475.582 97.79 476.052 97.3193 476.052 96.7402 cv
ef
481.302 95.7251 mo
481.652 95.7251 li
480.777 95.8999 mo
481.302 95.7251 li
480.251 96.0747 mo
480.777 95.8999 li
479.202 96.25 mo
480.251 96.0747 li
478.677 96.4248 mo
479.202 96.25 li
478.152 96.6001 mo
478.677 96.4248 li
477.802 96.6001 mo
478.152 96.6001 li
477.452 96.6001 mo
477.802 96.6001 li
477.277 96.6001 mo
477.452 96.6001 li
@
484.956 95.564 mo
484.956 94.9844 484.485 94.5137 483.906 94.5137 cv
483.326 94.5137 482.856 94.9844 482.856 95.564 cv
482.856 96.1436 483.326 96.6138 483.906 96.6138 cv
484.485 96.6138 484.956 96.1436 484.956 95.564 cv
ef
489.876 96.4248 mo
490.402 96.4248 li
489.352 96.4248 mo
489.876 96.4248 li
489.001 96.4248 mo
489.352 96.4248 li
488.652 96.4248 mo
489.001 96.4248 li
486.027 96.0747 mo
488.652 96.4248 li
@
493.692 96.0679 mo
493.692 95.4883 493.221 95.0181 492.642 95.0181 cv
492.062 95.0181 491.592 95.4883 491.592 96.0679 cv
491.592 96.6475 492.062 97.1182 492.642 97.1182 cv
493.221 97.1182 493.692 96.6475 493.692 96.0679 cv
ef
496.352 95.8999 mo
499.327 95.7251 li
495.126 95.8999 mo
496.352 95.8999 li
494.952 95.8999 mo
495.126 95.8999 li
@
502.68 95.7319 mo
502.68 95.1523 502.209 94.6816 501.629 94.6816 cv
501.05 94.6816 500.58 95.1523 500.58 95.7319 cv
500.58 96.3115 501.05 96.7817 501.629 96.7817 cv
502.209 96.7817 502.68 96.3115 502.68 95.7319 cv
ef
505.452 95.5498 mo
508.251 95.375 li
503.876 95.5498 mo
505.452 95.5498 li
@
511.583 95.3955 mo
511.583 94.8164 511.114 94.3457 510.534 94.3457 cv
509.954 94.3457 509.484 94.8164 509.484 95.3955 cv
509.484 95.9756 509.954 96.4458 510.534 96.4458 cv
511.114 96.4458 511.583 95.9756 511.583 95.3955 cv
ef
516.477 95.0249 mo
517.177 95.0249 li
514.202 95.1997 mo
516.477 95.0249 li
512.802 95.1997 mo
514.202 95.1997 li
@
520.488 95.0596 mo
520.488 94.48 520.017 94.0098 519.438 94.0098 cv
518.859 94.0098 518.388 94.48 518.388 95.0596 cv
518.388 95.6396 518.859 96.1099 519.438 96.1099 cv
520.017 96.1099 520.488 95.6396 520.488 95.0596 cv
ef
522.077 95.0249 mo
526.102 94.8501 li
521.727 95.0249 mo
522.077 95.0249 li
@
529.392 94.8921 mo
529.392 94.312 528.921 93.8418 528.342 93.8418 cv
527.762 93.8418 527.292 94.312 527.292 94.8921 cv
527.292 95.4717 527.762 95.9419 528.342 95.9419 cv
528.921 95.9419 529.392 95.4717 529.392 94.8921 cv
ef
533.277 94.6748 mo
535.027 94.6748 li
530.652 94.6748 mo
533.277 94.6748 li
@
538.379 94.6401 mo
538.379 94.0605 537.91 93.5898 537.33 93.5898 cv
536.75 93.5898 536.28 94.0605 536.28 94.6401 cv
536.28 95.2192 536.75 95.6899 537.33 95.6899 cv
537.91 95.6899 538.379 95.2192 538.379 94.6401 cv
ef
543.602 94.3247 mo
543.952 94.3247 li
542.727 94.3247 mo
543.602 94.3247 li
541.152 94.5 mo
542.727 94.3247 li
539.751 94.5 mo
541.152 94.5 li
539.577 94.5 mo
539.751 94.5 li
@
547.284 94.3037 mo
547.284 93.7241 546.813 93.2539 546.234 93.2539 cv
545.654 93.2539 545.184 93.7241 545.184 94.3037 cv
545.184 94.8833 545.654 95.3535 546.234 95.3535 cv
546.813 95.3535 547.284 94.8833 547.284 94.3037 cv
ef
552.352 94.3247 mo
552.876 94.3247 li
551.126 94.3247 mo
552.352 94.3247 li
550.077 94.3247 mo
551.126 94.3247 li
549.376 94.3247 mo
550.077 94.3247 li
548.501 94.3247 mo
549.376 94.3247 li
@
556.188 94.3037 mo
556.188 93.7241 555.717 93.2539 555.138 93.2539 cv
554.558 93.2539 554.088 93.7241 554.088 94.3037 cv
554.088 94.8833 554.558 95.3535 555.138 95.3535 cv
555.717 95.3535 556.188 94.8833 556.188 94.3037 cv
ef
561.277 94.1499 mo
561.802 94.1499 li
560.402 94.1499 mo
561.277 94.1499 li
559.352 94.1499 mo
560.402 94.1499 li
557.602 94.1499 mo
559.352 94.1499 li
557.427 94.1499 mo
557.602 94.1499 li
@
565.092 94.3037 mo
565.092 93.7241 564.622 93.2539 564.042 93.2539 cv
563.462 93.2539 562.992 93.7241 562.992 94.3037 cv
562.992 94.8833 563.462 95.3535 564.042 95.3535 cv
564.622 95.3535 565.092 94.8833 565.092 94.3037 cv
ef
569.152 94.1499 mo
570.727 94.1499 li
568.102 94.3247 mo
569.152 94.1499 li
567.402 94.3247 mo
568.102 94.3247 li
566.876 94.3247 mo
567.402 94.3247 li
566.527 94.3247 mo
566.876 94.3247 li
566.352 94.3247 mo
566.527 94.3247 li
@
574.08 93.9683 mo
574.08 93.3882 573.61 92.918 573.03 92.918 cv
572.45 92.918 571.98 93.3882 571.98 93.9683 cv
571.98 94.5474 572.45 95.0181 573.03 95.0181 cv
573.61 95.0181 574.08 94.5474 574.08 93.9683 cv
ef
577.552 93.9751 mo
578.077 93.9751 li
576.327 93.9751 mo
577.552 93.9751 li
575.277 93.9751 mo
576.327 93.9751 li
@
[3 3 ] 0 dsh
443.852 34.6499 mo
448.751 34.125 li
449.452 33.9497 li
455.052 33.4248 li
460.652 32.8999 li
466.251 32.1997 li
470.802 31.8501 li
471.852 31.6748 li
472.727 31.6748 li
475.527 31.5 li
476.227 31.5 li
476.751 31.3247 li
477.452 31.3247 li
477.802 31.1499 li
478.152 30.9751 li
478.677 30.7998 li
479.376 30.4497 li
480.602 29.75 li
481.126 29.5747 li
481.652 29.3999 li
482.001 29.2251 li
482.352 29.2251 li
482.702 29.0498 li
483.402 29.0498 li
483.751 29.2251 li
484.102 29.2251 li
484.452 29.3999 li
484.977 29.3999 li
485.677 29.75 li
486.902 30.2749 li
487.427 30.4497 li
487.777 30.625 li
490.052 30.625 li
490.577 30.4497 li
491.102 30.4497 li
492.152 30.1001 li
493.202 29.9248 li
493.727 29.75 li
494.251 29.5747 li
495.477 29.3999 li
496.876 29.2251 li
499.852 29.0498 li
505.452 28.5249 li
511.052 28 li
514.027 27.8247 li
516.477 27.6499 li
522.077 27.2998 li
527.152 26.9497 li
527.677 26.9497 li
533.277 26.6001 li
538.177 26.4248 li
538.876 26.4248 li
539.751 26.25 li
541.327 26.0747 li
542.902 25.8999 li
543.777 25.7251 li
546.227 25.7251 li
549.727 25.8999 li
551.126 25.8999 li
552.527 25.7251 li
555.327 25.5498 li
555.677 25.5498 li
559.177 25.375 li
562.152 25.375 li
563.202 25.5498 li
565.126 25.5498 li
566.001 25.7251 li
566.702 25.7251 li
566.876 25.5498 li
568.277 25.5498 li
569.501 25.375 li
571.251 25.0249 li
571.952 25.0249 li
572.477 24.8501 li
575.277 24.8501 li
576.501 24.6748 li
578.077 24.6748 li
348.827 48.125 mo
352.152 47.6001 li
354.427 47.25 li
356.876 46.8999 li
360.027 46.375 li
365.626 45.5 li
371.227 44.625 li
376.827 43.75 li
382.427 42.875 li
388.027 42 li
393.626 41.125 li
394.852 40.9497 li
396.952 40.6001 li
398.001 40.4248 li
399.227 40.4248 li
399.751 40.25 li
400.452 40.25 li
401.501 40.4248 li
404.827 40.4248 li
405.527 40.25 li
406.227 40.0747 li
406.927 39.8999 li
407.626 39.7251 li
408.327 39.5498 li
409.027 39.1997 li
409.727 39.0249 li
410.427 38.6748 li
35.9272 156.625 mo
38.5522 157.85 li
41.5269 159.075 li
44.8521 159.775 li
46.4272 159.95 li
47.1274 159.95 li
48.5269 159.6 li
52.5522 157.85 li
58.1519 155.575 li
63.7524 153.125 li
69.3521 150.15 li
74.0767 147.875 li
74.9517 147 li
76.0024 145.95 li
77.5767 143.85 li
79.1519 141.575 li
80.2017 140.525 li
80.5522 140.175 li
86.1519 138.95 li
88.0767 138.075 li
91.0522 135.975 li
91.7524 135.45 li
94.3774 133.35 li
97.3521 130.725 li
102.952 125.65 li
107.502 121.275 li
108.552 120.4 li
109.952 118.475 li
113.102 114.45 li
114.152 113.225 li
119.752 108.675 li
122.027 106.225 li
125.352 102.725 li
130.952 96.7749 li
136.552 91.5249 li
141.277 86.7998 li
142.152 86.1001 li
145.302 83.4751 li
147.577 81.7251 li
151.077 79.4497 li
153.177 78.2251 li
156.327 77 li
158.777 76.125 li
162.802 75.0747 li
164.377 74.7251 li
169.102 74.1997 li
169.977 74.0249 li
175.577 73.6748 li
181.177 73.3247 li
186.777 72.9751 li
192.377 72.2749 li
197.977 71.9248 li
203.577 71.2251 li
209.177 70.6997 li
214.777 70 li
220.377 69.2998 li
225.977 68.6001 li
231.577 67.7251 li
237.002 67.0249 li
242.602 66.6748 li
245.052 66.1499 li
248.202 65.2749 li
253.802 64.3999 li
259.402 63.5249 li
265.002 62.6499 li
270.602 61.7749 li
276.202 60.8999 li
281.802 59.8501 li
287.402 58.9751 li
293.002 57.9248 li
298.602 56.6997 li
304.202 56 li
309.802 54.9497 li
315.402 53.8999 li
321.001 53.0249 li
326.602 52.1499 li
332.027 51.1001 li
337.626 50.2251 li
0 0 1 rgb
@
1 lw
[] 0 dsh
38.9019 224.35 mo
35.9272 224.35 li
38.9019 232.225 mo
35.9272 232.225 li
41.8774 240.1 mo
35.9272 240.1 li
38.9019 444.325 mo
35.9272 444.325 li
41.8774 436.45 mo
35.9272 436.45 li
41.8774 240.1 mo
35.9272 240.1 li
38.9019 247.975 mo
35.9272 247.975 li
38.9019 255.85 mo
35.9272 255.85 li
38.9019 263.725 mo
35.9272 263.725 li
38.9019 271.6 mo
35.9272 271.6 li
41.8774 279.3 mo
35.9272 279.3 li
38.9019 287.175 mo
35.9272 287.175 li
38.9019 295.05 mo
35.9272 295.05 li
38.9019 302.925 mo
35.9272 302.925 li
38.9019 310.8 mo
35.9272 310.8 li
41.8774 318.675 mo
35.9272 318.675 li
38.9019 326.55 mo
35.9272 326.55 li
38.9019 334.425 mo
35.9272 334.425 li
38.9019 342.125 mo
35.9272 342.125 li
38.9019 350 mo
35.9272 350 li
41.8774 357.875 mo
35.9272 357.875 li
38.9019 365.75 mo
35.9272 365.75 li
38.9019 373.625 mo
35.9272 373.625 li
38.9019 381.5 mo
35.9272 381.5 li
38.9019 389.375 mo
35.9272 389.375 li
41.8774 397.075 mo
35.9272 397.075 li
38.9019 404.95 mo
35.9272 404.95 li
38.9019 412.825 mo
35.9272 412.825 li
38.9019 420.7 mo
35.9272 420.7 li
38.9019 428.575 mo
35.9272 428.575 li
41.8774 436.45 mo
35.9272 436.45 li
0 0 0 rgb
@
BYNVST+Euclid*1 [9.8 0 0 -9.8 0 0 ]msf
19.8706 439.601 mo
(0.9)
[4.8999 2.72461 0 ]xsh
26.9253 400.401 mo
(1)sh
19.8706 361.201 mo
(1.1)
[4.8999 2.72461 0 ]xsh
19.8706 321.826 mo
(1.2)
[4.8999 2.72461 0 ]xsh
19.8706 282.624 mo
(1.3)
[4.8999 2.72461 0 ]xsh
19.8706 243.425 mo
(1.4)
[4.8999 2.72461 0 ]xsh
45.0269 438.375 mo
45.0269 444.325 li
35.9272 444.325 mo
589.277 444.325 li
@
%ADOBeginSubsetFont: Euclid AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVST+Euclid dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C5BA034F470CA4A489AF6578857> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVST+Euclid /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/BYNVST+Euclid*1 
[45{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three 
/four 4{/.notdef}rp /nine 198{/.notdef}rp]
BYNVST+Euclid nf
BYNVST+Euclid*1 [9.8 0 0 -9.8 0 0 ]msf
36.8462 457.976 mo
(10)
[4.8999 0 ]xsh
BYNVST+Euclid*1 [7.875 0 0 -7.875 0 0 ]msf
49.146 451.493 mo
(-1)
[2.62207 0 ]xsh
246.627 438.375 mo
246.627 444.325 li
237.527 441.35 mo
237.527 444.325 li
227.202 441.35 mo
227.202 444.325 li
215.477 441.35 mo
215.477 444.325 li
202.002 441.35 mo
202.002 444.325 li
186.077 441.35 mo
186.077 444.325 li
166.477 441.35 mo
166.477 444.325 li
141.277 441.35 mo
141.277 444.325 li
105.752 441.35 mo
105.752 444.325 li
@
BYNVST+Euclid*1 [9.8 0 0 -9.8 0 0 ]msf
244.111 457.976 mo
(1)sh
448.227 438.375 mo
448.227 444.325 li
439.126 441.35 mo
439.126 444.325 li
428.802 441.35 mo
428.802 444.325 li
417.077 441.35 mo
417.077 444.325 li
403.602 441.35 mo
403.602 444.325 li
387.677 441.35 mo
387.677 444.325 li
368.077 441.35 mo
368.077 444.325 li
342.876 441.35 mo
342.876 444.325 li
307.352 441.35 mo
307.352 444.325 li
@
BYNVST+Euclid*1 [9.8 0 0 -9.8 0 0 ]msf
443.201 457.976 mo
(10)
[4.90039 0 ]xsh
569.677 227.325 mo
569.677 224.35 li
544.477 227.325 mo
544.477 224.35 li
508.952 227.325 mo
508.952 224.35 li
448.227 230.3 mo
448.227 224.35 li
439.126 227.325 mo
439.126 224.35 li
428.802 227.325 mo
428.802 224.35 li
417.077 227.325 mo
417.077 224.35 li
403.602 227.325 mo
403.602 224.35 li
387.677 227.325 mo
387.677 224.35 li
368.077 227.325 mo
368.077 224.35 li
342.876 227.325 mo
342.876 224.35 li
307.352 227.325 mo
307.352 224.35 li
246.627 230.3 mo
246.627 224.35 li
237.527 227.325 mo
237.527 224.35 li
227.202 227.325 mo
227.202 224.35 li
215.477 227.325 mo
215.477 224.35 li
202.002 227.325 mo
202.002 224.35 li
186.077 227.325 mo
186.077 224.35 li
166.477 227.325 mo
166.477 224.35 li
141.277 227.325 mo
141.277 224.35 li
105.752 227.325 mo
105.752 224.35 li
45.0269 230.3 mo
45.0269 224.35 li
35.9272 227.325 mo
35.9272 224.35 li
586.302 232.225 mo
589.277 232.225 li
583.327 240.1 mo
589.277 240.1 li
586.302 444.325 mo
589.277 444.325 li
583.327 436.45 mo
589.277 436.45 li
583.327 240.1 mo
589.277 240.1 li
586.302 247.975 mo
589.277 247.975 li
586.302 255.85 mo
589.277 255.85 li
586.302 263.725 mo
589.277 263.725 li
586.302 271.6 mo
589.277 271.6 li
583.327 279.3 mo
589.277 279.3 li
586.302 287.175 mo
589.277 287.175 li
586.302 295.05 mo
589.277 295.05 li
586.302 302.925 mo
589.277 302.925 li
586.302 310.8 mo
589.277 310.8 li
583.327 318.675 mo
589.277 318.675 li
586.302 326.55 mo
589.277 326.55 li
586.302 334.425 mo
589.277 334.425 li
586.302 342.125 mo
589.277 342.125 li
586.302 350 mo
589.277 350 li
583.327 357.875 mo
589.277 357.875 li
586.302 365.75 mo
589.277 365.75 li
586.302 373.625 mo
589.277 373.625 li
586.302 381.5 mo
589.277 381.5 li
586.302 389.375 mo
589.277 389.375 li
583.327 397.075 mo
589.277 397.075 li
586.302 404.95 mo
589.277 404.95 li
586.302 412.825 mo
589.277 412.825 li
586.302 420.7 mo
589.277 420.7 li
586.302 428.575 mo
589.277 428.575 li
583.327 436.45 mo
589.277 436.45 li
589.277 441.35 mo
589.277 444.325 li
569.677 441.35 mo
569.677 444.325 li
544.477 441.35 mo
544.477 444.325 li
508.952 441.35 mo
508.952 444.325 li
@
3 lw
[1 2 ] 0 dsh
59.9019 409.85 mo
64.6274 410.725 li
65.3267 410.899 li
70.5767 411.95 li
76.0024 413 li
81.2524 414.225 li
86.6772 415.45 li
91.9272 416.675 li
97.3521 417.899 li
102.777 419.3 li
108.027 420.524 li
112.227 421.399 li
113.452 421.75 li
117.127 422.45 li
118.702 422.8 li
122.027 423.325 li
124.127 423.675 li
127.102 424.2 li
129.377 424.55 li
132.352 424.899 li
134.802 425.25 li
137.602 425.425 li
140.052 425.774 li
143.552 425.774 li
144.602 425.95 li
145.477 425.95 li
146.527 426.3 li
147.752 426.475 li
148.802 426.825 li
149.852 427.175 li
150.727 427.524 li
1 0 0 rgb
@
1.5 lw
[] 0 dsh
59.9019 397.075 mo
589.277 397.075 li
0 0 0 rgb
@
3 lw
182.577 368.024 mo
182.927 368.024 li
177.502 368.024 mo
178.027 368.024 li
173.652 368.024 mo
177.502 368.024 li
166.827 368.2 mo
169.102 368.024 li
164.727 368.2 mo
166.827 368.2 li
158.077 368.375 mo
160.177 368.2 li
157.027 368.375 mo
158.077 368.375 li
156.152 368.375 mo
157.027 368.375 li
155.802 368.2 mo
156.152 368.375 li
150.727 367.325 mo
151.427 367.325 li
150.552 367.325 mo
150.727 367.325 li
150.027 367.325 mo
150.552 367.325 li
149.502 367.5 mo
150.027 367.325 li
148.977 367.85 mo
149.502 367.5 li
147.052 368.55 mo
148.977 367.85 li
141.277 369.6 mo
142.852 369.425 li
140.052 369.774 mo
141.277 369.6 li
138.302 369.95 mo
140.052 369.774 li
132.527 371 mo
133.927 370.825 li
129.552 371.7 mo
132.527 371 li
124.127 372.925 mo
125.177 372.575 li
123.252 373.1 mo
124.127 372.925 li
120.977 373.625 mo
123.252 373.1 li
113.452 375.55 mo
116.602 374.675 li
112.227 375.725 mo
113.452 375.55 li
103.652 378 mo
107.852 376.95 li
97.3521 379.575 mo
99.2769 379.05 li
94.9019 380.1 mo
97.3521 379.575 li
86.6772 382.2 mo
90.5269 381.149 li
86.3267 382.2 mo
86.6772 382.2 li
81.2524 383.25 mo
81.9517 383.075 li
77.5767 383.95 mo
81.2524 383.25 li
70.5767 385.35 mo
73.2017 384.825 li
68.6519 385.7 mo
70.5767 385.35 li
59.9019 387.1 mo
64.2769 386.399 li
.164706 .372549 0 rgb
@
59.9019 379.05 mo
64.2769 377.825 li
0 1 0 rgb
@
67.3921 377.132 mo
67.3921 376.552 66.9214 376.082 66.3423 376.082 cv
65.7622 376.082 65.2925 376.552 65.2925 377.132 cv
65.2925 377.711 65.7622 378.182 66.3423 378.182 cv
66.9214 378.182 67.3921 377.711 67.3921 377.132 cv
ef
70.5767 375.725 mo
72.6772 375.024 li
69.7017 376.075 mo
70.5767 375.725 li
68.4771 376.425 mo
69.7017 376.075 li
@
75.7925 374.359 mo
75.7925 373.78 75.3218 373.31 74.7427 373.31 cv
74.1626 373.31 73.6919 373.78 73.6919 374.359 cv
73.6919 374.939 74.1626 375.41 74.7427 375.41 cv
75.3218 375.41 75.7925 374.939 75.7925 374.359 cv
ef
76.8774 373.625 mo
81.0767 371.875 li
@
84.1919 371.168 mo
84.1919 370.588 83.7212 370.118 83.1421 370.118 cv
82.563 370.118 82.0923 370.588 82.0923 371.168 cv
82.0923 371.748 82.563 372.218 83.1421 372.218 cv
83.7212 372.218 84.1919 371.748 84.1919 371.168 cv
ef
86.6772 369.774 mo
89.3022 368.55 li
85.6274 370.125 mo
86.6772 369.774 li
85.2769 370.3 mo
85.6274 370.125 li
@
92.4243 367.64 mo
92.4243 367.061 91.9536 366.59 91.3745 366.59 cv
90.7944 366.59 90.3237 367.061 90.3237 367.64 cv
90.3237 368.22 90.7944 368.69 91.3745 368.69 cv
91.9536 368.69 92.4243 368.22 92.4243 367.64 cv
ef
93.3267 366.625 mo
97.3521 364.7 li
@
100.488 363.859 mo
100.488 363.28 100.018 362.81 99.438 362.81 cv
98.8589 362.81 98.3882 363.28 98.3882 363.859 cv
98.3882 364.439 98.8589 364.91 99.438 364.91 cv
100.018 364.91 100.488 364.439 100.488 363.859 cv
ef
102.777 362.075 mo
105.402 360.675 li
101.377 362.774 mo
102.777 362.075 li
@
108.384 359.66 mo
108.384 359.08 107.914 358.609 107.333 358.609 cv
106.754 358.609 106.284 359.08 106.284 359.66 cv
106.284 360.239 106.754 360.71 107.333 360.71 cv
107.914 360.71 108.384 360.239 108.384 359.66 cv
ef
109.252 358.575 mo
113.277 356.649 li
@
116.28 355.628 mo
116.28 355.048 115.81 354.578 115.23 354.578 cv
114.651 354.578 114.18 355.048 114.18 355.628 cv
114.18 356.208 114.651 356.678 115.23 356.678 cv
115.81 356.678 116.28 356.208 116.28 355.628 cv
ef
118.702 353.675 mo
121.152 352.45 li
117.127 354.55 mo
118.702 353.675 li
@
124.092 351.428 mo
124.092 350.849 123.622 350.378 123.042 350.378 cv
122.462 350.378 121.993 350.849 121.993 351.428 cv
121.993 352.008 122.462 352.478 123.042 352.478 cv
123.622 352.478 124.092 352.008 124.092 351.428 cv
ef
127.977 348.95 mo
129.202 348.425 li
125.177 350.35 mo
127.977 348.95 li
@
132.157 347.563 mo
132.157 346.984 131.686 346.514 131.106 346.514 cv
130.527 346.514 130.056 346.984 130.056 347.563 cv
130.056 348.144 130.527 348.613 131.106 348.613 cv
131.686 348.613 132.157 348.144 132.157 347.563 cv
ef
134.802 345.975 mo
137.252 344.925 li
133.227 346.5 mo
134.802 345.975 li
@
140.388 344.036 mo
140.388 343.456 139.917 342.986 139.338 342.986 cv
138.758 342.986 138.289 343.456 138.289 344.036 cv
138.289 344.615 138.758 345.086 139.338 345.086 cv
139.917 345.086 140.388 344.615 140.388 344.036 cv
ef
261.677 334.075 mo
262.202 333.899 li
260.452 334.25 mo
261.677 334.075 li
259.052 334.425 mo
260.452 334.25 li
257.827 334.774 mo
259.052 334.425 li
142.852 343 mo
145.477 342.125 li
141.452 343.35 mo
142.852 343 li
@
265.38 333.872 mo
265.38 333.292 264.91 332.822 264.331 332.822 cv
263.75 332.822 263.28 333.292 263.28 333.872 cv
263.28 334.451 263.75 334.922 264.331 334.922 cv
264.91 334.922 265.38 334.451 265.38 333.872 cv
ef
269.902 333.725 mo
271.127 333.55 li
268.502 333.899 mo
269.902 333.725 li
266.577 333.899 mo
268.502 333.899 li
@
274.284 333.368 mo
274.284 332.788 273.814 332.318 273.234 332.318 cv
272.655 332.318 272.184 332.788 272.184 333.368 cv
272.184 333.947 272.655 334.418 273.234 334.418 cv
273.814 334.418 274.284 333.947 274.284 333.368 cv
ef
279.177 332.85 mo
279.877 332.85 li
275.502 333.2 mo
279.177 332.85 li
@
283.188 332.696 mo
283.188 332.116 282.718 331.646 282.138 331.646 cv
281.558 331.646 281.088 332.116 281.088 332.696 cv
281.088 333.275 281.558 333.746 282.138 333.746 cv
282.718 333.746 283.188 333.275 283.188 332.696 cv
ef
285.477 332.325 mo
288.802 332.325 li
284.427 332.5 mo
285.477 332.325 li
@
292.092 332.191 mo
292.092 331.612 291.622 331.142 291.042 331.142 cv
290.462 331.142 289.993 331.612 289.993 332.191 cv
289.993 332.771 290.462 333.241 291.042 333.241 cv
291.622 333.241 292.092 332.771 292.092 332.191 cv
ef
297.202 331.274 mo
297.727 331.1 li
295.102 331.45 mo
297.202 331.274 li
294.402 331.625 mo
295.102 331.45 li
293.352 331.8 mo
294.402 331.625 li
@
300.912 330.932 mo
300.912 330.352 300.441 329.882 299.862 329.882 cv
299.282 329.882 298.812 330.352 298.812 330.932 cv
298.812 331.512 299.282 331.981 299.862 331.981 cv
300.441 331.981 300.912 331.512 300.912 330.932 cv
ef
305.777 330.575 mo
306.652 330.575 li
302.102 330.75 mo
305.777 330.575 li
@
309.816 330.428 mo
309.816 329.849 309.345 329.378 308.765 329.378 cv
308.186 329.378 307.715 329.849 307.715 330.428 cv
307.715 331.008 308.186 331.478 308.765 331.478 cv
309.345 331.478 309.816 331.008 309.816 330.428 cv
ef
311.202 330.225 mo
315.402 329.7 li
311.027 330.225 mo
311.202 330.225 li
@
318.72 329.504 mo
318.72 328.924 318.25 328.454 317.67 328.454 cv
317.09 328.454 316.62 328.924 316.62 329.504 cv
316.62 330.083 317.09 330.554 317.67 330.554 cv
318.25 330.554 318.72 330.083 318.72 329.504 cv
ef
321.876 329.175 mo
324.327 329 li
319.952 329.35 mo
321.876 329.175 li
@
327.624 328.832 mo
327.624 328.252 327.154 327.781 326.574 327.781 cv
325.994 327.781 325.524 328.252 325.524 328.832 cv
325.524 329.411 325.994 329.882 326.574 329.882 cv
327.154 329.882 327.624 329.411 327.624 328.832 cv
ef
332.552 328.3 mo
333.251 328.3 li
328.876 328.649 mo
332.552 328.3 li
@
336.612 328.16 mo
336.612 327.58 336.141 327.109 335.562 327.109 cv
334.982 327.109 334.511 327.58 334.511 328.16 cv
334.511 328.739 334.982 329.21 335.562 329.21 cv
336.141 329.21 336.612 328.739 336.612 328.16 cv
ef
337.977 327.95 mo
342.177 327.6 li
337.626 327.95 mo
337.977 327.95 li
@
345.515 327.403 mo
345.515 326.824 345.045 326.354 344.465 326.354 cv
343.886 326.354 343.416 326.824 343.416 327.403 cv
343.416 327.983 343.886 328.454 344.465 328.454 cv
345.045 328.454 345.515 327.983 345.515 327.403 cv
ef
350.751 326.55 mo
350.927 326.55 li
349.527 326.899 mo
350.751 326.55 li
348.652 327.075 mo
349.527 326.899 li
347.777 327.075 mo
348.652 327.075 li
346.552 327.25 mo
347.777 327.075 li
@
354.251 326.06 mo
354.251 325.48 353.782 325.01 353.202 325.01 cv
352.623 325.01 352.152 325.48 352.152 326.06 cv
352.152 326.64 352.623 327.109 353.202 327.109 cv
353.782 327.109 354.251 326.64 354.251 326.06 cv
ef
359.327 326.2 mo
359.852 326.2 li
358.626 326.2 mo
359.327 326.2 li
355.477 325.85 mo
358.626 326.2 li
@
363.156 326.06 mo
363.156 325.48 362.685 325.01 362.106 325.01 cv
361.526 325.01 361.055 325.48 361.055 326.06 cv
361.055 326.64 361.526 327.109 362.106 327.109 cv
362.685 327.109 363.156 326.64 363.156 326.06 cv
ef
364.751 325.675 mo
368.777 325.325 li
364.227 325.675 mo
364.751 325.675 li
@
372.143 325.136 mo
372.143 324.557 371.673 324.086 371.093 324.086 cv
370.514 324.086 370.043 324.557 370.043 325.136 cv
370.043 325.715 370.514 326.187 371.093 326.187 cv
371.673 326.187 372.143 325.715 372.143 325.136 cv
ef
375.427 324.975 mo
377.702 324.8 li
373.152 324.975 mo
375.427 324.975 li
@
380.879 324.632 mo
380.879 324.052 380.41 323.582 379.83 323.582 cv
379.25 323.582 378.78 324.052 378.78 324.632 cv
378.78 325.211 379.25 325.682 379.83 325.682 cv
380.41 325.682 380.879 325.211 380.879 324.632 cv
ef
386.102 324.1 mo
386.626 324.1 li
382.077 324.45 mo
386.102 324.1 li
@
389.784 323.96 mo
389.784 323.38 389.313 322.91 388.734 322.91 cv
388.154 322.91 387.684 323.38 387.684 323.96 cv
387.684 324.539 388.154 325.01 388.734 325.01 cv
389.313 325.01 389.784 324.539 389.784 323.96 cv
ef
391.352 323.75 mo
395.552 323.575 li
391.001 323.75 mo
391.352 323.75 li
@
398.688 323.372 mo
398.688 322.792 398.217 322.322 397.638 322.322 cv
397.058 322.322 396.588 322.792 396.588 323.372 cv
396.588 323.951 397.058 324.422 397.638 324.422 cv
398.217 324.422 398.688 323.951 398.688 323.372 cv
ef
402.027 323.225 mo
404.302 323.05 li
399.927 323.225 mo
402.027 323.225 li
@
407.592 322.868 mo
407.592 322.288 407.122 321.818 406.542 321.818 cv
405.962 321.818 405.492 322.288 405.492 322.868 cv
405.492 323.447 405.962 323.918 406.542 323.918 cv
407.122 323.918 407.592 323.447 407.592 322.868 cv
ef
412.702 322.524 mo
413.227 322.524 li
408.852 322.875 mo
412.702 322.524 li
@
416.58 322.363 mo
416.58 321.784 416.11 321.313 415.53 321.313 cv
414.95 321.313 414.48 321.784 414.48 322.363 cv
414.48 322.943 414.95 323.413 415.53 323.413 cv
416.11 323.413 416.58 322.943 416.58 322.363 cv
ef
418.126 322.175 mo
422.152 322 li
417.777 322.35 mo
418.126 322.175 li
@
425.484 321.859 mo
425.484 321.28 425.013 320.81 424.434 320.81 cv
423.854 320.81 423.383 321.28 423.383 321.859 cv
423.383 322.439 423.854 322.91 424.434 322.91 cv
425.013 322.91 425.484 322.439 425.484 321.859 cv
ef
428.802 321.475 mo
431.077 321.3 li
428.102 321.475 mo
428.802 321.475 li
426.702 321.649 mo
428.102 321.475 li
@
434.388 321.271 mo
434.388 320.692 433.917 320.222 433.338 320.222 cv
432.758 320.222 432.289 320.692 432.289 321.271 cv
432.289 321.852 432.758 322.322 433.338 322.322 cv
433.917 322.322 434.388 321.852 434.388 321.271 cv
ef
439.477 320.95 mo
440.001 320.95 li
435.626 321.125 mo
439.477 320.95 li
@
443.292 320.768 mo
443.292 320.188 442.822 319.718 442.242 319.718 cv
441.663 319.718 441.192 320.188 441.192 320.768 cv
441.192 321.348 441.663 321.818 442.242 321.818 cv
442.822 321.818 443.292 321.348 443.292 320.768 cv
ef
444.902 320.774 mo
448.927 320.6 li
444.552 320.774 mo
444.902 320.774 li
@
452.28 320.432 mo
452.28 319.852 451.809 319.382 451.23 319.382 cv
450.65 319.382 450.18 319.852 450.18 320.432 cv
450.18 321.012 450.65 321.481 451.23 321.481 cv
451.809 321.481 452.28 321.012 452.28 320.432 cv
ef
455.577 320.25 mo
457.852 320.075 li
453.302 320.25 mo
455.577 320.25 li
@
461.184 319.928 mo
461.184 319.349 460.713 318.878 460.133 318.878 cv
459.554 318.878 459.083 319.349 459.083 319.928 cv
459.083 320.508 459.554 320.978 460.133 320.978 cv
460.713 320.978 461.184 320.508 461.184 319.928 cv
ef
[3 3 ] 0 dsh
257.827 287.175 mo
259.227 286.475 li
260.627 286.125 li
262.027 285.774 li
263.077 285.6 li
264.127 285.425 li
268.502 285.25 li
270.077 285.075 li
273.752 284.375 li
279.177 283.325 li
283.202 282.625 li
284.427 282.45 li
289.852 282.1 li
290.902 281.75 li
292.302 281.399 li
294.577 280.524 li
295.102 280.35 li
297.376 279.825 li
299.652 279.475 li
300.527 279.3 li
305.777 278.6 li
308.751 278.075 li
311.202 277.725 li
316.626 276.675 li
321.876 275.625 li
327.302 274.575 li
332.552 273.7 li
337.977 272.825 li
343.227 271.95 li
347.602 271.25 li
348.652 271.075 li
349.527 270.725 li
350.927 270.024 li
352.327 269.5 li
353.202 269.149 li
353.902 268.975 li
354.777 268.8 li
355.827 268.975 li
358.802 269.149 li
359.327 269.149 li
360.552 268.975 li
362.126 268.8 li
364.751 268.274 li
370.001 267.399 li
375.427 266.524 li
380.677 265.649 li
386.102 264.774 li
391.352 264.075 li
396.777 263.375 li
402.027 262.675 li
407.452 261.975 li
412.702 261.45 li
417.427 260.75 li
418.126 260.575 li
423.552 259.7 li
428.102 259 li
428.802 258.825 li
434.227 258.3 li
439.477 257.6 li
444.902 257.075 li
450.152 256.55 li
455.577 256.024 li
460.827 255.325 li
59.9019 369.774 mo
65.3267 367.325 li
69.8774 365.05 li
70.5767 364.524 li
75.1274 362.075 li
76.0024 361.55 li
81.2524 358.399 li
86.1519 355.25 li
86.6772 354.899 li
89.4771 352.8 li
91.9272 350.875 li
97.3521 346.675 li
101.727 343.175 li
102.777 342.3 li
108.027 337.399 li
113.452 332.5 li
118.702 327.425 li
124.127 322.175 li
129.377 317.274 li
133.402 313.6 li
134.802 312.375 li
137.952 309.75 li
140.052 308.175 li
143.027 306.075 li
145.477 304.5 li
0 0 1 rgb
@
0 0 0 rgb
%ADOBeginSubsetFont: Euclid AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVST+Euclid dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B81F2CC3> |-
/C <1C60D8A8C9B6079F6CA2D4E1C929C767900EBC3C979A9851948A33017D40
262A8D2F5E870B193C733A720E48C32E9F4F9E93CC95A121D4AA3FD8995C7FFC
BA12D72F93D0AAB6457CA801A807AE281908987114FECAFA629ECAA2B854E186
4DD2C365F05E03BF3DC7AD94893E0C976AE6C25F6348782673EE7DF759FF9908
4ECDB6BC61B26C387D0A910E2DA08D0966C17C9EC81E5CA13C7ACF7158BC8C3D
A3E31AC36A9DAFF204E91E82E5D50649091E3447830AE3933F64182F69643DE3
B4B71380DAE663B8EFB3FD6375C01B392DAE9269D72908BDC374DD4B34B5C435
CE68CB8DF30E77D5F65E66878C7E3614DE25B1A709463E700660156282108B27
EFB4483BD61795531E0A1BCA2C1AE2DF05> |-
/a <1C60D8A8C9B7A73DB6C056B34302904348CB649E4CA9A06D864BA9EAA4CD
3500E463CDF01E59521B9B39B024903EE9BF0B54D0E5581CB210EFC939C37638
9D1CEDB9856BCB9147B59BDE6804396772257B17BD28931099E46CC74343D26E
A0938A2C3AEDF56C4F2C006230C2637B354FD561ADEAABF114E734B0199D3CEA
81302F9D6545F290AA778F91107D2E8B0BC3D7163BC2019C0AC011398929D6B8
1F7800D13662702A4B6A77F4E790A95F187131A7C9DFAFCE8C145B101341A6C7
0147B91C29851EBB946A2C10638AABD7151588A6C70BFB5E7FE19D15E1BF9244
8D5656E687412D73E912487215278B09BE13FB8DCDBE91B6F70AAD807599B6A9
0CAEB01FA17BC8B11B632B423BEC13CFFC66AE8FB0CA0D7E20DA3A7B3981CE02
515E5D48A7933F20F76DB10E0E968D148FD13175E468569C0B86E5218B9B5F07
27CE44D411BD790BEF6A53014D31211627F35AE8F1838114A6469D400E4AFECA
9252694C3D25804452FCF6686EDCA87274E94E450DFE937A55238840BFFCED6A
C2B7D6B9F175> |-
/e <1C60D8A8C9B77FE2C1821A026C58ABF2B567E0B00879C337C2BDCE00286E
62420AB29662430388D503E83190757EE9DC0B1806BC1E5E1DE8A092421E50B6
BF478162AC393B84D271E29E01537B22CD34C084A214F78E595F4E118EDADC3B
2E22E50A698CC1E2AAA7947753A98561270689ECA8326FAA8D234006E1A8CE10
061EE53E71911DF1E560509DC8C5B8428B98C1B8B1E344D1FAF1F192DB89FE21
28494DF2A953F3D2A9CFD87B00264C223F5E00AB3201AC33EF160430B96A6B8B
4293FB496DA48FDDD0C656B5E8A331D590176C57686C6A582A57C8825E409EFE
48D90775405E7F8219580C7D102D41C7FC9FA21835312A9F3B26F28D3CC46132
271E0F2603B9D916401A6849FF76439A> |-
/i <1C60D8A8C9B854D0F409CB6CAA9D7B27CF04620905608196D31FB9E6C145
2952E18FF7826C07DCDB422109C43295E82554D6B602F849C6BF15530BBCF65D
AA56362CE8809CA8AFE734B98790FC8336596C75DF73D3C6CE2D88AF7D72BC08
08C15304C9C518671E679CB5788CDD30DCEDFE9CFCC36317A61BDA056C38024F
152A8102047E245290FAD9288A2AA7FEF8B4F2FA92669DCD3102EE8211F4F5EB
54A058BA87D881A45B5661F88632690B4560820D86AE4060316A> |-
/n <1C60D8A8C9B790A84ECC5DE8DB9433FFA3508474A30F12CE952E122513B3
7F1D3EEAFED6483B32FE4E4D7BAA9E2A028EB609AC76EF1543D3A50DEF0B9177
403A8F916F707A7226F19D645B852D2323206B57569119BCEDAFD978C7DBECC1
EDE5B1A61CFF8C5166C0709E9743F9E7E6025489AC3BFE453AD83AEC67F6B80C
D329321DE9218A07FB7261A731980DD1C07715238BECD0BBBF9679CE23F83587
3D9C033C2AEC27DDE9F78AB4CE4E6B011D97918C88B78273AE2EF525E1544F6A
80F373F609359EB0506A1CA47DA5B9C91730AA57560D488D22A12D837AD68502
599A1A4D5FBEC18ADFFC48F7396120C680CE9129A13E312BBA537C3FAADCDE91
A3F17B63797C579CBC5FE46E3786C72C82D307E8B1F95A573108D0C2FA804F80
075CC12074C564B18D22980D05479A7220423A52CD57767084D69933903685B0
22C0FD> |-
/o <1C60D8A8C9B7A73DB6E04DA22DC3887E107FB9BDFC252BD45EA9A6CCD743
82FF0132EF21D25B722C75D2E33383CA764680024EEB414BCB7ADD86F7ED9B7C
AA4B3C73C0FF931A5F957D4E732C018DBAC0448B49ECFCA9E44D7D60E3057C64
1C9F43A44C02717B9874E79F25F328F02390E1E2848262CF95EEF6A8FF5EC287
CB252D5295F9A0B55B2C0979A1B9BF1E1C9721D84CC71A414CF2D7FEA85AC228
1A9E3CA28F6645880AFF587D944E49C65C2DB73AF767B55AC5D0E13CAA2CA5DB
23586D082F2BF5FB10FEC76AAA1ADE699536A27A1A55FFB1A1A49F25E79A5DD0
43A38E998376023D82B21C0FFF40E3F32FC19A7C76AC> |-
/r <1C60D8A8C9B733AACD71AA61712FB3877FD4C3C5B42816FFE1389A249324
DD496757EDA62D25A51340B0EE334976FAF9403C8FBA84D76CEDEB4301ED1249
0CC5449596E7CB651D69EF81E54DA8CC7282F229A021D49601BF0DA567C0A4B3
A60DE3AC9F02126F663450FB3E3F30DFC747B0257034F99530FF4E1253E594F6
0FD0552A63FC0E78847DE24CE84E4B101BC97130E8E6F2D7D4168BE017D16FC7
54CBBE3836930DF3FDDCB5B3D705BEE4C25C362C07B9D9766E70505E90223E85
3CE68321A8A478C2A345045130A7ECB2EF34DC1CE5FF950FE7FA3CBA87E735F7
C4B239D11850F200C4B1B2D3B363EE> |-
/t <1C60D8A8C9B7361F0268E40953E58C7BBC290FBA797B35D723DF44EA35D0
228BC3EC766F15AF64F3C24B0FEEE8644C9F85D47819AFE65026CD54C254F1D7
CE7F2BF2376AA7AA8D0968EF355DD56748453CF1F86822D10E28504BF3D5E11B
2698187CEA6FC0AAD95A8067771976831D5A97155C091F14C2C7661DF709D653
FB9227D70E75ED8A490A96461BE369B941B9FEBF7A7F16A288ADF72CF190B045
D0951AFFBC51E84A66989F7DFBD332F6767A> |-
/u <1C60D8A8C9B790A84EEC21FCA044BA62C44C4FB5840969C6B45A6B8FEBA5
6791BFF4767403F33A6F1C5D0EA3648801B1C371627702F27BFB3C64974B88F9
6FA8F53F9E318F41F01703A431660CA2A49AB020DE6318204EF879AFE22B214C
1E774D659108297A42C0443FDB3D575F2D13B5DB10200B0A762AF03AC7A99B08
381DB4BB94DDCE4C597A9F323F4CBC32835FF4530CA0C25D9D19878467531E8E
8262D796596B5D80E247F84B69A6E85E2E1BFA80F9A24BBD89895284DB10561D
8D5EEC806F1BEA51776D0B9DD50E6B238EE2DA599A7D649DFD6D639B31398AF5
504B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVST+Euclid /Encoding get
dup 32 /space put
dup 67 /C put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
/BYNVST+Euclid*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one 
/two /three /four 4{/.notdef}rp /nine 9{/.notdef}rp /C 29{/.notdef}rp 
/a 3{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 
2{/.notdef}rp /r /.notdef /t /u 138{/.notdef}rp]
BYNVST+Euclid nf
BYNVST+Euclid*1 [0 -12.6 -12.6 0 0 0 ]msf
10.603 94.1621 mo
(Count rate ratio)
[-9.09717 -6.2998 -6.99268 -6.99268 -4.90137 -4.1958 -4.93896 -6.2998 -4.90137 -5.59424 -4.1958 -4.93896 
-6.2998 -4.90137 -3.50293 0 ]ysh
gsave
1.098 480.6 mo
.099 0 li
592.2 0 li
592.2 480.6 li
1.098 480.6 li
clp
[1 2 ] 0 dsh
336.927 207.2 mo
589.277 210.175 li
1 0 0 rgb
@
grestore
[] 0 dsh
586.652 135.45 mo
589.277 135.45 li
577.727 135.625 mo
582.277 135.625 li
568.802 135.8 mo
573.352 135.8 li
559.876 135.975 mo
564.427 135.975 li
550.952 136.325 mo
555.501 136.15 li
542.027 136.5 mo
546.577 136.325 li
533.102 136.675 mo
537.652 136.5 li
524.177 136.85 mo
528.727 136.675 li
515.251 137.025 mo
519.802 136.85 li
506.327 137.2 mo
510.876 137.025 li
497.402 137.375 mo
501.952 137.2 li
488.477 137.55 mo
493.027 137.375 li
479.552 137.725 mo
484.102 137.55 li
470.626 137.9 mo
475.177 137.725 li
461.702 138.075 mo
466.251 137.9 li
452.777 138.25 mo
457.327 138.075 li
443.852 138.425 mo
448.402 138.25 li
434.927 138.6 mo
439.477 138.425 li
426.001 138.775 mo
430.552 138.6 li
417.077 138.95 mo
421.626 138.775 li
408.152 139.125 mo
412.702 138.95 li
399.227 139.3 mo
403.777 139.3 li
390.302 139.475 mo
394.852 139.475 li
381.376 139.65 mo
385.927 139.65 li
372.626 139.825 mo
377.001 139.825 li
363.702 140 mo
368.077 140 li
354.777 140.175 mo
359.152 140.175 li
345.852 140.35 mo
350.227 140.35 li
336.927 140.525 mo
341.302 140.525 li
.164706 .372549 0 rgb
@
333.251 105.7 mo
337.802 105.175 li
0 1 0 rgb
@
341.148 104.972 mo
341.148 104.392 340.677 103.922 340.098 103.922 cv
339.518 103.922 339.048 104.392 339.048 104.972 cv
339.048 105.552 339.518 106.022 340.098 106.022 cv
340.677 106.022 341.148 105.552 341.148 104.972 cv
ef
342.177 104.825 mo
346.727 104.475 li
@
349.883 104.3 mo
349.883 103.72 349.414 103.25 348.833 103.25 cv
348.254 103.25 347.784 103.72 347.784 104.3 cv
347.784 104.879 348.254 105.35 348.833 105.35 cv
349.414 105.35 349.883 104.879 349.883 104.3 cv
ef
412.001 100.1 mo
416.376 99.75 li
351.102 104.125 mo
351.277 104.125 li
@
419.688 99.5957 mo
419.688 99.0166 419.217 98.5459 418.638 98.5459 cv
418.058 98.5459 417.588 99.0166 417.588 99.5957 cv
417.588 100.175 418.058 100.646 418.638 100.646 cv
419.217 100.646 419.688 100.175 419.688 99.5957 cv
ef
420.751 99.3999 mo
425.302 99.0498 li
@
428.592 98.8398 mo
428.592 98.2603 428.122 97.79 427.542 97.79 cv
426.962 97.79 426.492 98.2603 426.492 98.8398 cv
426.492 99.4194 426.962 99.8901 427.542 99.8901 cv
428.122 99.8901 428.592 99.4194 428.592 98.8398 cv
ef
429.677 98.6997 mo
434.227 98.5249 li
@
437.412 98.3359 mo
437.412 97.7563 436.941 97.2856 436.362 97.2856 cv
435.782 97.2856 435.312 97.7563 435.312 98.3359 cv
435.312 98.9155 435.782 99.3857 436.362 99.3857 cv
436.941 99.3857 437.412 98.9155 437.412 98.3359 cv
ef
578.077 93.7998 mo
582.452 93.7998 li
438.602 98.1748 mo
442.802 97.8247 li
@
585.755 93.7998 mo
585.755 93.2202 585.286 92.75 584.706 92.75 cv
584.126 92.75 583.656 93.2202 583.656 93.7998 cv
583.656 94.3794 584.126 94.8501 584.706 94.8501 cv
585.286 94.8501 585.755 94.3794 585.755 93.7998 cv
ef
587.001 93.7998 mo
589.277 93.7998 li
@
gsave
1.098 480.6 mo
.099 0 li
592.2 0 li
592.2 480.6 li
1.098 480.6 li
clp
[3 3 ] 0 dsh
578.077 25.1997 mo
589.277 25.1997 li
412.001 38.8501 mo
442.802 35 li
334.302 50.75 mo
346.376 48.2998 li
0 0 1 rgb
@
grestore
541.789 17.2759 mo
541.789 17.1792 541.71 17.1006 541.614 17.1006 cv
541.517 17.1006 541.439 17.1792 541.439 17.2759 cv
541.439 17.3726 541.517 17.4507 541.614 17.4507 cv
541.71 17.4507 541.789 17.3726 541.789 17.2759 cv
1 1 1 rgb
ef
541.789 17.2759 mo
541.789 17.1792 541.71 17.1006 541.614 17.1006 cv
541.517 17.1006 541.439 17.1792 541.439 17.2759 cv
541.439 17.3726 541.517 17.4507 541.614 17.4507 cv
541.71 17.4507 541.789 17.3726 541.789 17.2759 cv
ef
541.786 17.3599 mo
541.698 17.2725 li
541.611 17.3599 li
541.698 17.4473 li
541.786 17.3599 li
ef
.498039 0 0 rgb
BYNVST+Euclid*1 [14.7 0 0 -14.7 0 0 ]msf
54.6548 210.044 mo
(e)sh
%ADOBeginSubsetFont: EuclidSymbol Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /EuclidSymbol def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 127 /minus put
def
/FontBBox {-166 -252 1083 950} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B5EE31F4> |-
/minus <1C60D8A8C9B6FF86FB873E807F595BDCE42CCF6741EC35E34ABE069C
0B0921ED919DE3D3F8C4A28202BA85D72F0277ED0C73DFFAC3492B98C8ADF476
DE642E36E0A1C13B64D68D69C1F163187C> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BYNVSU+EuclidSymbol /EuclidSymbol findfont ct_VMDictPut
/BYNVSU+EuclidSymbol*1 
[127{/.notdef}rp /minus 128{/.notdef}rp]
BYNVSU+EuclidSymbol nf
BYNVSU+EuclidSymbol*1 [14.7 0 0 -14.7 0 0 ]msf
62.021 210.044 mo
(\177)sh
%ADOBeginSubsetFont: Euclid-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Euclid-Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 101 /e put
dup 114 /r put
dup 116 /t put
def
/FontBBox {-63 -308 1026 909} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/.notdef <1C60D8A8C9B5EE31F4> |-
/a <1C60D8A8C9B7551CC4D8A172B637613A8F412AF2706347ADBCE9436CDED2
81DF1C8E73BF9C7BEEB19B09B5205761B7E05FD5D69DCF3D50DF9888486867B2
8461F37B20B5BAC17297B9C48282A877F28FCE557A47EBA8D2052F5E9B2A79CF
17CF7E9447DDBF45BE7637B353F2C9090F9E46CD8240DEDCE115F3F1EA96F35B
DAF5F97205395243868B9C23EB8B1299A84BB57CF44441EEDDCBC559DFF057E6
92C9E8D1A807074445065E4B3446B0F8BC9AAEA8EDF5F10556ABBC1D97CF690D
229B655526453060F4E16F55D616DC8358F250AB518F4CB9EF45463C92CB25BD
8A613E9F20436D90114EECA826D9F9C98D32769B884A1547ED8ABA00BA52C0F7
4B87669A0BC2085CA11F6E4C655C66DA54808017A918FC566B62551DF474E6DB
63D2F12760B4112679290E95A524E8F153DA61511379F822F7E7F411EAD6DD7F
4B5C1635512CF49B57F4A98B06B048F6DEAE5F35CE8BEDDF4FCA6D7CD80EBFF8
209C798C8BA7F422BB2612FC94830F580C65D64E0F02CE2FFEE503AB186FDE> |-
/e <1C60D8A8C9B7489B35A943345954310B9E200F2A86302E990E3D90216A2D
F3C8A2195DAD5A1A912A77BD88AD0E3D508D30EF2AEE7815618C9F1CE6C27D25
CA5D98A836699DC4D8B12F79B5618C1BF2431E0C05A8BBB5D825E0D1DABA3E5F
0E8B9C4AF0526C20AEA61DD0A636A410912E8DBED6998D22C4639C64A23B4F7C
3C3084B9BF8243BB29635ABC52B7CD87069996F711125F7F8AD1F2CA74182631
9EA357E403F3FB841CB7EB623696047A1C8BAE81E6D97289A50F4E7D0069ED7C
C258707E63B4C0DD80343C7312B244FE764919A1A0179B34AB895242C823DABD
3BFBD644869B4C0CBCF268ED6284955D350FFADA2DCF38EF8247A2731E85C8AC
C77D955CE1E9E86EC79D231ABB2D> |-
/r <1C60D8A8C9B76F05A7836B75692FAB9AAF15F1AAFF7740ED423301DE98B1
3E67CD5684D66AEAD5C531D960229C8523D58B0B661CA5CF63D3A315B5CA4173
75AE04C82C9B20A9BB3E78B0FDCED3633B6C8B5A213742BE63E7B071DCEF3AE1
C4287FFAD0D402E7249C7682329BD5C6BF1F2B34E93F8ADFDBAE2980B96BE5DC
15BFD0AFECA8480C8BE33ECF0876F0FDEFBB8A8D5ACA08AD87C032D0524D78BF
B03B99AF9B7AA447EE4599748CBD0500102DF3713E98531595306C7C99784DF7
E0> |-
/t <1C60D8A8C9B73549CFCD6B31D6B9B4BE30142679B60596010EA3F519A81B
453B6EA7D5829109A8B85F03447F3A1975EA018ACF047962F02B7E49FE803BC8
64EC149D45554B848BAD5312D4EC7774A70307C2CAB7CB39CFF59582EB2D516D
77423000183CA6A6DE208681AD4DA7F6540BD2AABF637612192917AA4BA917B4
66EF3A9443503A226F8F70FC5B44266A16C96B9FCC1B5585791CBC8A17C75177
F28AF752> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BYNVSV+Euclid-Bold /Euclid-Bold findfont ct_VMDictPut
/BYNVSV+Euclid-Bold*1 
[97{/.notdef}rp /a 3{/.notdef}rp /e 12{/.notdef}rp /r /.notdef /t 
139{/.notdef}rp]
BYNVSV+Euclid-Bold nf
BYNVSV+Euclid-Bold*1 [14.7 0 0 -14.7 0 0 ]msf
74.2329 210.044 mo
(rate)
[6.2915 7.14404 5.73291 0 ]xsh
71.9087 15.2759 mo
71.9087 15.1792 71.8306 15.1006 71.7339 15.1006 cv
71.6372 15.1006 71.5591 15.1792 71.5591 15.2759 cv
71.5591 15.3726 71.6372 15.4507 71.7339 15.4507 cv
71.8306 15.4507 71.9087 15.3726 71.9087 15.2759 cv
1 1 1 rgb
ef
71.9087 15.2759 mo
71.9087 15.1792 71.8306 15.1006 71.7339 15.1006 cv
71.6372 15.1006 71.5591 15.1792 71.5591 15.2759 cv
71.5591 15.3726 71.6372 15.4507 71.7339 15.4507 cv
71.8306 15.4507 71.9087 15.3726 71.9087 15.2759 cv
ef
71.7378 15.3599 mo
71.6499 15.2725 li
71.563 15.3599 li
71.6499 15.4473 li
71.7378 15.3599 li
ef
0 0 0 rgb
%ADOBeginSubsetFont: Euclid-Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Euclid-Italic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 77 /M put
def
/FontBBox {-28 -252 1126 899} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B5EE31F4> |-
/A <1C60D8A8C9B61AE94F3B04B50CDDAB130F5B54D75D38E71C1807E3E08F67
DE71D1D5F3C6876532AD0423BA8B2AD38AE6B19ABFB515A7285715CD543E6D11
F62ED915851482F4E07331860E57D9561D0F4B10D0781E0C3930F0688486A85F
AC24366683723733B1C771E219E515733E73418E7FBC677F5D9B4EDC843504CB
F6BE203FFB34B73A5150BA6309E4D1944C3015A0FF9A654BEE2C897F812C2171
1CCEA20C91FE18B7B1217C92FC85B88EDF1AF3C4F5F06D02D74AE10B77605737
E2F8EDA9BF13C0A34480499F90EE9D7A1B41989A8352BFA2B768D77C54E26ACB
67401B7A01F62B8469C70C5793C19BB6590E672A35C0A20344E0C470B198DE17
EA67BC120C87E867> |-
/M <1C60D8A8C9B58652260AA07E6DCBB9FE539586273D2F4D763E760B770FAE
C0781338437875B4235DA3900626C9DE6670A7C493925A93F058EB796883F77F
74F773EDB0B4A0D643E2C115A096E8FB6DF4E1AB658635A2AE5AE578B85B0366
EDBB056B5AC1D96D486B1DF2E9830FB1EDBA2371D70871B3241A3EDEE6980DEE
1A387652E8764B8785000B6E4DB1A8348A86B5D6563E75AFFF9025324A658DDE
0BFA6D5EF596D50795D5E7DA58E022130B20067383F85D01477049002CCE7C05
6B9A277BAE3E3DCE377DAFC65E2450116662FDBDA9A0304611F66E893A4E37FB
83B95D2BD35F8869A30AD210BC2DBC8629C16DA17C75ED5FFB239660DE564921
AE51B2248A8B23B3B37FD74FAF41AED7DB859A829F098B79A9A52CF180C66FDB
40D48B6469DBB5551ACBA7BEF3E2BFE338DC279A3DA25502A1214625EC6B1D13
605661967571E50B7674B2825E805DA5437885D42830000035C7F7C15EE21BBA
D36171FB524473E3B88081113832B76426C039F8> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BYNVSW+Euclid-Italic /Euclid-Italic findfont ct_VMDictPut
/BYNVSW+Euclid-Italic*1 
[65{/.notdef}rp /A 11{/.notdef}rp /M 178{/.notdef}rp]
BYNVSW+Euclid-Italic nf
BYNVSW+Euclid-Italic*1 [11.97 0 0 -11.97 0 0 ]msf
75.5425 18.0352 mo
(M)sh
BYNVSW+Euclid-Italic*1 [8.4 0 0 -8.4 0 0 ]msf
85.1626 22.0215 mo
(A)sh
71.9087 30.6318 mo
71.9087 30.5352 71.8306 30.4565 71.7339 30.4565 cv
71.6372 30.4565 71.5591 30.5352 71.5591 30.6318 cv
71.5591 30.7285 71.6372 30.8066 71.7339 30.8066 cv
71.8306 30.8066 71.9087 30.7285 71.9087 30.6318 cv
1 1 1 rgb
ef
71.9087 30.6318 mo
71.9087 30.5352 71.8306 30.4565 71.7339 30.4565 cv
71.6372 30.4565 71.5591 30.5352 71.5591 30.6318 cv
71.5591 30.7285 71.6372 30.8066 71.7339 30.8066 cv
71.8306 30.8066 71.9087 30.7285 71.9087 30.6318 cv
ef
71.7378 30.6318 mo
71.6499 30.5444 li
71.563 30.6318 li
71.6499 30.7192 li
71.7378 30.6318 li
ef
0 0 0 rgb
BYNVSW+Euclid-Italic*1 [11.97 0 0 -11.97 0 0 ]msf
75.5425 33.7813 mo
(M)sh
BYNVSW+Euclid-Italic*1 [8.4 0 0 -8.4 0 0 ]msf
85.1626 37.7715 mo
(A)sh
71.9087 45.8198 mo
71.9087 45.7231 71.8306 45.645 71.7339 45.645 cv
71.6372 45.645 71.5591 45.7231 71.5591 45.8198 cv
71.5591 45.9165 71.6372 45.9951 71.7339 45.9951 cv
71.8306 45.9951 71.9087 45.9165 71.9087 45.8198 cv
1 1 1 rgb
ef
71.9087 45.8198 mo
71.9087 45.7231 71.8306 45.645 71.7339 45.645 cv
71.6372 45.645 71.5591 45.7231 71.5591 45.8198 cv
71.5591 45.9165 71.6372 45.9951 71.7339 45.9951 cv
71.8306 45.9951 71.9087 45.9165 71.9087 45.8198 cv
ef
71.7378 45.7358 mo
71.6499 45.6484 li
71.563 45.7358 li
71.6499 45.8232 li
71.7378 45.7358 li
ef
0 0 0 rgb
BYNVSW+Euclid-Italic*1 [11.97 0 0 -11.97 0 0 ]msf
75.5425 49.7393 mo
(M)sh
BYNVSW+Euclid-Italic*1 [8.4 0 0 -8.4 0 0 ]msf
85.1626 53.7314 mo
(A)sh
84.8569 13.981 mo
84.8569 13.8647 84.7632 13.7705 84.647 13.7705 cv
84.5308 13.7705 84.437 13.8647 84.437 13.981 cv
84.437 14.0967 84.5308 14.1904 84.647 14.1904 cv
84.7632 14.1904 84.8569 14.0967 84.8569 13.981 cv
1 1 1 rgb
ef
84.8569 13.981 mo
84.8569 13.8647 84.7632 13.7705 84.647 13.7705 cv
84.5308 13.7705 84.437 13.8647 84.437 13.981 cv
84.437 14.0967 84.5308 14.1904 84.647 14.1904 cv
84.7632 14.1904 84.8569 14.0967 84.8569 13.981 cv
ef
84.6519 14.0815 mo
84.5464 13.9766 li
84.4419 14.0815 li
84.5464 14.1865 li
84.6519 14.0815 li
ef
0 0 0 rgb
%ADOBeginSubsetFont: EuclidSymbol AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSU+EuclidSymbol dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/equal <1C60D8A8C9B6FF86FB9B1D952597572D0811112E9B51C72FAC2F74D7
F114FB0B5F94E104E8FD6AF0ADB583D123E5C86A456B1E6A098F070FF537700C
3CA7F46651AE381B0059A566569FDE949297486994A82196F1252AD5D58AD45C
EB8B224E843BF0C28809EEEE1847B173A0CD13FF807026FE1098BAA5A37BE76D
9E2D97D38EB5E5AEC417265FC77C1AF6130DF6> |-
/space <1C60D8A8C9B8707C25> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSU+EuclidSymbol /Encoding get
dup 32 /equal put
dup 33 /space put
pop
%ADOEndSubsetFont
/BYNVSU+EuclidSymbol*1 
[32{/.notdef}rp /equal /space 93{/.notdef}rp /minus 128{/.notdef}rp]
BYNVSU+EuclidSymbol nf
BYNVSU+EuclidSymbol*1 [11.76 0 0 -11.76 0 0 ]msf
94.231 18.0313 mo
( )sh
103.734 18.0313 mo
(!)sh
%ADOBeginSubsetFont: Euclid-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSV+Euclid-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B81F2CC3> |-
/period <1C60D8A8C9B854D0F46693B1D664A6F9356857DA5BBCBAE8D721747
E79FC7DE12B8827E7B33289EE0AC7059B746AEB7FCDE50DFAD826CC016B18BC4
751099D5887B34E7340D3> |-
/zero <1C60D8A8C9B7A73DB6EC90A5F0A1E6EDF030568AF701450D65053AFA6
752D01B58C4F5C93F7D5F689C80CB2DB0AB1E3296CCA3C8DC4AD6AEE656D0CFE
6F4734DCE8C0137203FFEBB808F5836FE16E58942F3555C5EF3C6C5C25BD4E1A
14A3F682CA37F4DC581F85A72BD2CF4F66C212368B5F51F0067FCA45432CED5C
ADB17EE5EA679B882128FDE1477A06D0C70FF6F14727F5A7C30862B768ED4737
F07BC235B53A840E22BCD6214D9B09576B02DBC8C0DDF15C06BC61AC546C4E4B
BDB80B1C019D2F559DEB3D57FB46C0889221EF3BFE37BEC1CBC5E2C74AEA4951
5C6D5A4A36E9AE584FC31EAC3CA7148E782439011EA4AA577D80344FA19719CB
8C193E26D2C1B768B53D2EFE46B2DDD2B427AAA2C6BC2A63C8FBDE5BD0B1015C
702D378FCA79490A98EED85724129A1E7> |-
/nine <1C60D8A8C9B7A73DB6F42DAE43163982DE24BF517BD9036CF9766513C
FF11677E470D3C41DE598E0A2266AE974C46C0293952E5ECA19FF5CB11ABC60D
F2E663AE3A0D7C46200A9EFB27B21714E351CE2ADB59C30CCC8A91741A3DA481
9D00A916976519C61CAE8605905ED357109942F627B49C00413FC1E18CBA82DE
D70CA8760B0B23E46C0450E2D37B4CB862E706EDAB069CB87853D462C8F9D188
342DC366745EEAB4CD6E193D475F102A70ECB97B049AC192BD9D824725313A1F
590AE1E2BF023F84E4162DD8722B65C2EFDB86D6F6650C8133BC9B8DE408C158
A315923039CB5260D4503EFEC98D2E5121EC1DC4372F0389E6C9AE0E205C94EE
F661F9A90BBE4CA49CCE04B7EC32AA69DEA1A36A155B134398606BC785966D2F
074FF5F605B87BD6655ABC89F024BC3A86E6634299739F1CFEA2BD580636E9C1
6E41A27FD3633C1C08950CF72509047FB68540736BA4BFCF307DC3D788673CBF
B72> |-
/G <1C60D8A8C9B6C76920453AAC218129D77B805889D2A216B43A99D7D5C580
168CE46F8B11D5E2F18F02EFCD6621B740011CAE3B3ACED791BD33A39EC12A31
7C9FB7E7FDCE8C92FE1260CA7CDF3A086E5BDEAB6B73BDDAF446D14B98DF8B3D
6C1C83AE22B2F6E96F1395540A90031687191D4B4580998EBDF7FA388365948D
7BBD3852AE796910BDA76783BBA01233AFEC4CF064A15F05442981C436C4D955
BDB743C5857EC425575CF598643ED28DDC42B6A92DF5011794FF1E8B5AE6723F
9A05B77FAEB20CD7949D77143BDF00B75F824D60EC50773910D191BEC7DD65C9
E4CE45E008BBCD3F47713AD96FA21F50FC5D16B043DC343F92C9F92EEC502007
86620DA1A6010F074F4864B8678EA2EB65BACF59F5E922E1CDBE10F30C6F052F
8A2350E86EF4DD645D7389E085C709CDC261B8D65C660610966E3C0CF425> |-
/V <1C60D8A8C9B6E66E6D8CE8E30A9B6275376636664BB001CAE074BC07FE8D
85EE28B6DF95090DA697E6F46FB452D0F9F855430E3A5975B22FA330DBB2C84A
F72D99DADEBB39740423F43FDEB381F1A823C21CF2D447735A977A73D4207540
129EE3EA9B6392FC0BDE4E5F5736FDE9D1A1EA3C3101C59ACF208C6B80395C52
853EF4EA018D3CA7EB7A288B7D60579F59837E8F36A8790A9722497B7D0D6309
362F041E3A900CD8AA5B56E77252> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSV+Euclid-Bold /Encoding get
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 57 /nine put
dup 71 /G put
dup 86 /V put
pop
%ADOEndSubsetFont
/BYNVSV+Euclid-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero 8{/.notdef}rp /nine 
13{/.notdef}rp /G 14{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e 
12{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
BYNVSV+Euclid-Bold nf
BYNVSV+Euclid-Bold*1 [11.76 0 0 -11.76 0 0 ]msf
106.674 18.0313 mo
(0.90 GeV)
[5.87988 3.26904 5.87988 5.87988 3.91602 9.24316 5.4917 0 ]xsh
BYNVST+Euclid*1 [11.76 0 0 -11.76 0 0 ]msf
155.113 18.0313 mo
( )sh
84.8569 30.0078 mo
84.8569 29.8921 84.7632 29.7974 84.647 29.7974 cv
84.5308 29.7974 84.437 29.8921 84.437 30.0078 cv
84.437 30.124 84.5308 30.2178 84.647 30.2178 cv
84.7632 30.2178 84.8569 30.124 84.8569 30.0078 cv
1 1 1 rgb
ef
84.8569 30.0078 mo
84.8569 29.8921 84.7632 29.7974 84.647 29.7974 cv
84.5308 29.7974 84.437 29.8921 84.437 30.0078 cv
84.437 30.124 84.5308 30.2178 84.647 30.2178 cv
84.7632 30.2178 84.8569 30.124 84.8569 30.0078 cv
ef
84.6519 30.0078 mo
84.5464 29.9028 li
84.4419 30.0078 li
84.5464 30.1128 li
84.6519 30.0078 li
ef
0 0 0 rgb
BYNVSU+EuclidSymbol*1 [11.76 0 0 -11.76 0 0 ]msf
94.231 33.7813 mo
( )sh
103.734 33.7813 mo
(!)sh
%ADOBeginSubsetFont: Euclid-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSV+Euclid-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7A73DB6FF4E3B0A0BBF1E0A619812141F8878E7F8F4C6D
B9909F3BCE347A2CD8AB1DFCDD5DDF72B0187DB86185250A15B3161FBE0F273D
232F1E2F0FEFAE0B4A4F072D1D9764634EDD62BDBB291767312BBD580B89307F
1484C978F202AE16F046EAE86EC551916322B52E11D3C502BA6AFBA8FA4A0BBD
6A3201C92273D4C8DA10A8D02A3EEBABEFBC4F30287E43709CB0713541C5DE03
2C7C7557EEEE581BC5F6F3F470C9095C8D9B42FDB2F8F6855FFE4319AB196DBA
29CE5EF46ADF67E6A3E856FC3B85D78886EDA9A8D4423923944205D580C94DD8
21EE8511EAD8BD3BA464A08FCEDD4FE1D137286DD12593F9781E427C36AA56B8
8DF6A5E797441EFE403D260B7F674FE1F67B8E3507692810D662E0D373E40AFF
9F77EF2C897F44185A7DC6EBE9776ED0A4C532EE713B7DB73DBA581A9906222F
911DF7F063E0C8FA57AC9A742F42AA7ED26F960E733B7A452E6CCC5498EBDD21
62DB0FB15C6573295B08F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSV+Euclid-Bold /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/BYNVSV+Euclid-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero 4{/.notdef}rp /five 
3{/.notdef}rp /nine 13{/.notdef}rp /G 14{/.notdef}rp /V 10{/.notdef}rp /a 
3{/.notdef}rp /e 12{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
BYNVSV+Euclid-Bold nf
BYNVSV+Euclid-Bold*1 [11.76 0 0 -11.76 0 0 ]msf
106.674 33.7813 mo
(0.95 GeV)
[5.87988 3.26904 5.87988 5.87988 3.91602 9.24316 5.4917 0 ]xsh
BYNVST+Euclid*1 [11.76 0 0 -11.76 0 0 ]msf
155.113 33.7813 mo
( )sh
84.8569 45.8335 mo
84.8569 45.7173 84.7632 45.6235 84.647 45.6235 cv
84.5308 45.6235 84.437 45.7173 84.437 45.8335 cv
84.437 45.9497 84.5308 46.0439 84.647 46.0439 cv
84.7632 46.0439 84.8569 45.9497 84.8569 45.8335 cv
1 1 1 rgb
ef
84.8569 45.8335 mo
84.8569 45.7173 84.7632 45.6235 84.647 45.6235 cv
84.5308 45.6235 84.437 45.7173 84.437 45.8335 cv
84.437 45.9497 84.5308 46.0439 84.647 46.0439 cv
84.7632 46.0439 84.8569 45.9497 84.8569 45.8335 cv
ef
84.6519 45.7329 mo
84.5464 45.6279 li
84.4419 45.7329 li
84.5464 45.8374 li
84.6519 45.7329 li
ef
0 0 0 rgb
BYNVSU+EuclidSymbol*1 [11.76 0 0 -11.76 0 0 ]msf
94.231 49.7412 mo
( )sh
103.734 49.7412 mo
(!)sh
%ADOBeginSubsetFont: Euclid-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSV+Euclid-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DB9B7F7D4853BC75900DF8BE107FBDBDE8112CCD8B2
ED30151DA0E18CFC4573E6D89B3CBFA9F08D56752F3339AD8BD01805C4C4A37E
F3DBAFBC86588DA3C7DB55A79D4A7B2644747D9E41190A71CE6B5E0876> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSV+Euclid-Bold /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/BYNVSV+Euclid-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one 3{/.notdef}rp 
/five 3{/.notdef}rp /nine 13{/.notdef}rp /G 14{/.notdef}rp /V 10{/.notdef}rp 
/a 3{/.notdef}rp /e 12{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
BYNVSV+Euclid-Bold nf
BYNVSV+Euclid-Bold*1 [11.76 0 0 -11.76 0 0 ]msf
106.674 49.7412 mo
(1.10 GeV)
[5.87988 3.26904 5.87988 5.87988 3.91602 9.24316 5.4917 0 ]xsh
BYNVST+Euclid*1 [11.76 0 0 -11.76 0 0 ]msf
155.113 49.7412 mo
( )sh
[1 2 ] 0 dsh
48.8022 15.8501 mo
71.7271 15.8501 li
1 0 0 rgb
@
1 lw
[] 0 dsh
48.8022 30.1499 mo
71.7271 30.1499 li
0 0 0 rgb
@
3 lw
66.6519 46.2749 mo
71.2017 46.2749 li
57.7271 46.2749 mo
62.2769 46.2749 li
48.8022 46.2749 mo
53.3521 46.2749 li
.164706 .372549 0 rgb
@
190.181 15.2759 mo
190.181 15.1792 190.103 15.1006 190.006 15.1006 cv
189.91 15.1006 189.832 15.1792 189.832 15.2759 cv
189.832 15.3726 189.91 15.4507 190.006 15.4507 cv
190.103 15.4507 190.181 15.3726 190.181 15.2759 cv
1 1 1 rgb
ef
190.181 15.2759 mo
190.181 15.1792 190.103 15.1006 190.006 15.1006 cv
189.91 15.1006 189.832 15.1792 189.832 15.2759 cv
189.832 15.3726 189.91 15.4507 190.006 15.4507 cv
190.103 15.4507 190.181 15.3726 190.181 15.2759 cv
ef
190.177 15.3599 mo
190.09 15.2725 li
190.002 15.3599 li
190.09 15.4473 li
190.177 15.3599 li
ef
0 0 0 rgb
BYNVSW+Euclid-Italic*1 [11.97 0 0 -11.97 0 0 ]msf
193.221 19.3652 mo
(M)sh
BYNVSW+Euclid-Italic*1 [8.4 0 0 -8.4 0 0 ]msf
202.836 23.3516 mo
(A)sh
190.181 31.6318 mo
190.181 31.5352 190.103 31.4565 190.006 31.4565 cv
189.91 31.4565 189.832 31.5352 189.832 31.6318 cv
189.832 31.7285 189.91 31.8066 190.006 31.8066 cv
190.103 31.8066 190.181 31.7285 190.181 31.6318 cv
1 1 1 rgb
ef
190.181 31.6318 mo
190.181 31.5352 190.103 31.4565 190.006 31.4565 cv
189.91 31.4565 189.832 31.5352 189.832 31.6318 cv
189.832 31.7285 189.91 31.8066 190.006 31.8066 cv
190.103 31.8066 190.181 31.7285 190.181 31.6318 cv
ef
190.177 31.6318 mo
190.09 31.5444 li
190.002 31.6318 li
190.09 31.7192 li
190.177 31.6318 li
ef
0 0 0 rgb
BYNVSW+Euclid-Italic*1 [11.97 0 0 -11.97 0 0 ]msf
193.221 35.1113 mo
(M)sh
BYNVSW+Euclid-Italic*1 [8.4 0 0 -8.4 0 0 ]msf
202.836 39.1016 mo
(A)sh
202.497 15.311 mo
202.497 15.1948 202.403 15.1006 202.287 15.1006 cv
202.171 15.1006 202.076 15.1948 202.076 15.311 cv
202.076 15.4268 202.171 15.5205 202.287 15.5205 cv
202.403 15.5205 202.497 15.4268 202.497 15.311 cv
1 1 1 rgb
ef
202.497 15.311 mo
202.497 15.1948 202.403 15.1006 202.287 15.1006 cv
202.171 15.1006 202.076 15.1948 202.076 15.311 cv
202.076 15.4268 202.171 15.5205 202.287 15.5205 cv
202.403 15.5205 202.497 15.4268 202.497 15.311 cv
ef
202.291 15.4116 mo
202.187 15.3066 li
202.081 15.4116 li
202.187 15.5166 li
202.291 15.4116 li
ef
0 0 0 rgb
%ADOBeginSubsetFont: EuclidSymbol AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSU+EuclidSymbol dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B7361F026C90415150EF73EECFB0F5D1859D81A957
34A88F918A757D6658CD63D670E6F96F46CB32F26F4B913D0ABF1C26A72A7BF7
EFA0B0847CD7F8E9BCD53DB080D1BDE25062D12FC483F59F1D61CA37F4AB8D77
7F4342DECE0641880E7189E6A84097D60F2FBF31A46C96B6F5DE1E0A62D1D5E9
2AD63466852A0EFBC940CCECEE998385455C7B10514CB2DFC712D2FE37D7C401
D24C97BC6FC3E24FD582C0E743013324C4BB17A590B67F54D30767812C> |-
/parenright <1C60D8A8C9B7361F021858F9E5B069E8CC96BD5F64E200E47B8
50B721C1CD244D2FF5E3B6A434A87E1C56DF9FDF2975A7B782219354D400590C
03D6E3954934871364E55D05A249B0B731086E76CAEFDBD8C63DD39B280EF248
F4A26E70CEABE6E2C41313CE7B9D305AF14325C6BAF30942CCAA5830F2D8E874
8228234E4EA1DE7DC8A5DFCBB6C47C51BB75B4FAE6BD76D28EC4393CE1FD138F
AF511CC3D64B0504CE02032E0EB40A7FEDFAD15FA496540CB87C5AC9346C1503
DE8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSU+EuclidSymbol /Encoding get
dup 34 /parenleft put
dup 35 /parenright put
pop
%ADOEndSubsetFont
/BYNVSU+EuclidSymbol*1 
[32{/.notdef}rp /equal /space /parenleft /parenright 91{/.notdef}rp /minus 128{/.notdef}rp]
BYNVSU+EuclidSymbol nf
BYNVSU+EuclidSymbol*1 [11.76 0 0 -11.76 0 0 ]msf
211.905 19.3613 mo
( !)
[9.14941 0 ]xsh
%ADOBeginSubsetFont: Euclid-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSV+Euclid-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DB68CE8FFCCA738DC724D32956224FE9644F0B2D933
FAF8714630756FD2636D33A34807D0B23E3D0215DD27030EC0AA5144BB0510A1
EA1858E5FC14D06A1AB5C1502C6024D22EA1A6C4228354D7DDDB8A4276C95657
37A62BD133C8AE498D7BCF9AC532FFAC63A83EF6DC071D9EC2C54DCC7718D805
DA70207EC53A4EDC3CBE0D0B2FB86B2D4DC3D1FCBB2D1FAD7AFBF7046725E363
830C5D7495434DD1A3C027EAC61B985D31CF44A7D97A054EA2CCAF6202316C2B
1E3816006DE72FAE6314B555D0E8B6EE08DA9E50139FC4F146DF5C068A61FEB5
24C89D5E991896910AC028CA4529DC07E7AD02F071F3F3168C6D965B4F40CA96
D401AD748053891364DF72B9A035A2EE8FAD3F328C693ADB420DB72003> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSV+Euclid-Bold /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/BYNVSV+Euclid-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
2{/.notdef}rp /five 3{/.notdef}rp /nine 13{/.notdef}rp /G 14{/.notdef}rp /V 
10{/.notdef}rp /a 3{/.notdef}rp /e 12{/.notdef}rp /r /.notdef /t 
139{/.notdef}rp]
BYNVSV+Euclid-Bold nf
BYNVSV+Euclid-Bold*1 [11.76 0 0 -11.76 0 0 ]msf
223.995 19.3613 mo
(1.20 GeV)
[5.87988 3.26904 5.87988 5.87988 3.91602 9.24316 5.4917 0 ]xsh
BYNVSU+EuclidSymbol*1 [11.76 0 0 -11.76 0 0 ]msf
274.346 19.3613 mo
(")sh
%ADOBeginSubsetFont: Euclid AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVST+Euclid dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B8038000EBBCF8303A28983725D56A967B8CF9AB3E1C4FD04B
585B5F9CB509CEA441D11537BCE7AA2F40634FFA3C7C1D6ADCF2ED7654589BBD
198680C8E831C5FE1E6950BCD307E685AE8896F64FC0EE52B019AC6838FF83DB
9E49CD0D35146AF191844E60AC76CC44C097A469D555FB3A0350532A82525052
CE67F8B63870B4F0AD55784AFA38ED684CDD06310C2C65E01569> |-
/K <1C60D8A8C9B6FF86FA04033964F3B2486304FA479D17DF6E1084BF584150
5C342C6064C5D4168A4A2FC172A70D83A5C103A66015CAA5C3DA78DC83581385
6D8DB17DF8CE1B9E39B237BC211875B91AB5C246DF3DFD4050E4AE418B106CE6
92A324F8AB36F497A00554E2B5237BA07B77E7D22E3BCC93F9F2253BE03692F3
9167C70CB0D5F63DA9FB07EAF54B8E66FAC41730272587D92AFE1A70B7FAB140
15299552C756E929EA8F84FC0BA6C722FA9D762274C431471563298C57ED5CD7
B2312943959B977F9A41330F40D7B366B8B31946256BBD8C9C16B964DC98E0BB
27ECCC7219D1B2A1D783F85F675BB4B57EFFBB59D489236A6FD3460BB6F7E1FA
AF5BE2A1C815E0EDF305CAD218D7053C9FEBAC14739731A12A9AB750E9FBAEDD
64B8F93D9657171F1C1EFC14588663A717F2075B1EEF431D5014678A487939EE
73CA82A900CE919513456419> |-
/S <1C60D8A8C9B790A84E8CCE947F3F146777D8A87455C850270B23DD947CEF
4C215CDF096B0B11DE4BE4DB69934A2386C2D57DC80DD895DE2E0003335770A2
EC0C4F0D5AF306187C2F7755AB884D86345752BE77C2BAECD63E77B418DA385F
1F2650454D324D7343ABCEB00B581DF9DD2631A2E29CCE683C61F53B0D1ED96F
1D7CC11A7EF8385424B5D2B555C0E537D2058C487D65FDD36104E31FB436DC99
6116AAC171D695D0D55D584B453838DD7945996406C3626A3917B0900CECB27B
13BD3DEBDCBED49A70EB85A84135CA7BB64164F298C8229C4F6A80F67F0D1E5E
0B183A02E311C2CA64912A4F40E00A6E33DA30210C5BBF93E4FC98BB7B957E23
BFBFE90D2D120FBB6C904CAA614167A18644E283696461EAB26A500BF41B5180
F34AB8BAB5B4168D86A68C4FEA497FEBDBA9D3ED21BACB8B8D1C3ECD420E2E38
2E2C59948893004B0DE9C3F480706AFBEB68F79D8DE55382BE7A367B3E29F520
B3D6887225C2222A715F930C3ED49A3DF15768AA286D864698305C6F9442EA20> |-
/b <1C60D8A8C9B790A84E7F4A2C78ACD4DEB72F3F52D082BF36B9364555A7A4
2B04173F4D49E80AE1316979B63D118F55930B8278654AFAD5031677B24C6016
E026EA6D496399945BB425132D5273AF303E220577342A1BE8A6854239CB9784
C455929C33642FB632548E93E3D5467CCB97B12B0DEEC1A58EB0D8364E434DBA
820FF3FC4C4769B4EF665672228A4E7819AC0F95BC065E48BC8A193CF7179B57
D75D985F34E160FB00A201C47DD966EAC052FC49D21EE3150A19AFC800053E37
AED89FE6FACB562000209EC643461D8C1B909FC33F3E8974A07E1726AA183D7C
EDE5552A418D8C6E587E81227B05> |-
/c <1C60D8A8C9B77FE2CEE2B2B04D872A003ACEDA9B2F75EE4F2E81A541935B
0E611526D9DE038A59C0C4332858E3940FBAA9EF1D28063EF653515B59EE7882
CE694C09DFDDE0B689C3AEFA79A50A28C70D9C3AB944467AC82D205B02EB3D05
F39B9D23186668837BCD8679F6CBCD93AD6ADCE309C61EDFEE3303F7829F1DFE
DC37A1C819B3EE2C752D68EE13DCB456100C3117B0A729EC9759F76BD463C1A5
11625288F829863A6093BC23C4B4410C85A81CBC2ED492F60D1E748CABFC7BB4
5C81DC36331FA291C483C61C7348B6958F5638F9A6906B87FF441A2675A9238A
FD899B31CA9E62B18B3675F213C56E25F523A053C303A7C66D5932AB706CC752
C6> |-
/d <1C60D8A8C9B790A84EE4AED240FBD3F06C134C566544835664A4BAFBFBF2
58075563FE0B2641789D10FD835F341E1CF57AD29ABF78212F2E862FD63D2A5C
E1D6EAF5252D30858F56AE2A1A5D97B5F07494AC35F947770CFE276DB57212FD
719D96FBDC9571E75A6470D11DC9DF20FD88390C168394F9CE3FC7EBD1C0279B
EDAAED79077070BFD437545F762ACD6F28455D51939337CC23DEB3C2F90633B2
DB2B6F20684DF8060B7B6C1E787C71E90283B0641DEC1FA88DDC155ADC085FB6
C1585D9CBA78BB0885D780F4FF06C2C0A1A904CB840643BBE9914A38B56FD343
8DA3BC404051F16D833A0EBE278831DCB934DDD9DA18B5966D9D4C6A7D221C9B
6D4484F3C397> |-
/f <1C60D8A8C9B83BB8630BB96576EB91047C881631F3A170B7752BBE1E61B1
442F2813FB690C76F622F88CC58A338762F4A6F237C83DCC606F63E3481D9A21
29A5658C6CDE9F31823429CC3E5748BBAE340CBEE95B0B1EDB222667F6BAB6C1
562BF52AAF64BC110242F8F16C712A0BFFF55C6FD5F44BB0017FCBAAB4EF2C4D
C93AB68101E7686DE70B2C5CE86078E6460B4B51E6FA59D5C3C82092CB090F08
F5B34ADA0315B318EABB0079430AD5560D6D1F051039950921314C1891A346A7
CE68353953A2849B5B87C37C1F126E35444D19AF33EB657CFB110B3D76C5FA22
F7F306F0B90028C8D108BCA08D0F9544746EA02A8D83089B0373> |-
/l <1C60D8A8C9B854D0A8FDB6ECF93E25366301848C6E9FD66707ED31FAB543
E6BB32D293592BC537E1849742542F44D56B740BDA02A4C8E32FDFC027290154
6FF407546C68CDA4CE1E886F78D172AD7C97CAFD8F75CCBE6C6D062E604F07FF
56C6473D2E449FA9082E2CB139A023FFE485EA2E3E5FE66AD0> |-
/s <1C60D8A8C9B731076153B7C8E64B0F4BC759CF09374395E3030E46ABBDA8
1B526E3680B817AEBB78C3E0CA8722542BE090C16F98A802796713A600F4890A
BE57A4697FFA7F0D7E3AE9CCCFCD942110B9F64B3D0203F81BC35DF0DEE26294
46001C92840D0FC44D128F763905617FB6E67AF99056D11D14CFBD26BF9A3057
5F870EBCE81B69C0CD16198F2B77895DB6FC1B87BB7CB2074FBDF915F0CD7047
1476B6C2F0C97107F5CB5750147131E7FC4157FC70108CBFE9DE54B59571695B
C2810158991F1BE2E2E3B5EA3EE6C5815773F9962882C621743F93A4C161A51F
3C6944F60AAC54E76494AA3C9E1CA8A0FEBC2A48A6982D387DB16CBD32A2833A
F96F43DADC034FF3762CAC82ABC5BC531B869C403BC5E9CE828721D121F92400
D806F9DF6C2DB18AA28B30CC48BB7246C808FA02B85A9E5A870F0C91C64FE3E8
9E60B655964D220CCF6147C29E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVST+Euclid /Encoding get
dup 73 /I put
dup 75 /K put
dup 83 /S put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 102 /f put
dup 108 /l put
dup 115 /s put
pop
%ADOEndSubsetFont
/BYNVST+Euclid*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one 
/two /three /four 4{/.notdef}rp /nine 9{/.notdef}rp /C 5{/.notdef}rp 
/I /.notdef /K 7{/.notdef}rp /S 13{/.notdef}rp /a /b 
/c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o 2{/.notdef}rp /r /s /t /u 
138{/.notdef}rp]
BYNVST+Euclid nf
BYNVST+Euclid*1 [11.76 0 0 -11.76 0 0 ]msf
277.681 19.3613 mo
(K2K best fit)
[9.14941 5.87988 9.14941 3.91602 6.52686 5.22119 4.6333 4.57422 3.91602 3.58691 3.26953 0 
]xsh
BYNVSU+EuclidSymbol*1 [11.76 0 0 -11.76 0 0 ]msf
341.902 19.3613 mo
(!)sh
BYNVST+Euclid*1 [11.76 0 0 -11.76 0 0 ]msf
344.842 19.3613 mo
(and current SK I-III default)
[5.87988 6.52637 6.52637 3.91602 5.22168 6.52637 4.61035 4.61035 5.22168 6.52637 4.57422 3.91602 
6.52637 9.14941 3.91602 4.24512 3.91602 4.24512 4.24512 4.24512 3.91602 6.52637 5.22168 3.58691 
5.87988 6.52637 3.26953 0 ]xsh
BYNVSU+EuclidSymbol*1 [11.76 0 0 -11.76 0 0 ]msf
488.887 19.3613 mo
(#)sh
205.637 30.6318 mo
205.637 30.5352 205.559 30.4565 205.462 30.4565 cv
205.366 30.4565 205.287 30.5352 205.287 30.6318 cv
205.287 30.7285 205.366 30.8066 205.462 30.8066 cv
205.559 30.8066 205.637 30.7285 205.637 30.6318 cv
1 1 1 rgb
ef
205.637 30.6318 mo
205.637 30.5352 205.559 30.4565 205.462 30.4565 cv
205.366 30.4565 205.287 30.5352 205.287 30.6318 cv
205.287 30.7285 205.366 30.8066 205.462 30.8066 cv
205.559 30.8066 205.637 30.7285 205.637 30.6318 cv
ef
205.465 30.6318 mo
205.378 30.5444 li
205.291 30.6318 li
205.378 30.7192 li
205.465 30.6318 li
ef
0 0 0 rgb
BYNVSU+EuclidSymbol*1 [11.76 0 0 -11.76 0 0 ]msf
211.905 35.1113 mo
( !)
[9.14941 0 ]xsh
%ADOBeginSubsetFont: Euclid-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSV+Euclid-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73DB6F7B62EF83FEE4BFA5FFABB301F6C431AC67A99
3EA51CFEF4DF3D4EA69A70C9BE1461E7B2B10A36263D10A702D51C964E4C7A2E
21FE31B117B738EE884B7FFC46E0F61A9F17987EE17FDA2927A85D42EA07B492
C8E27F80AAED3EA941FD2827C924C28A9DAAFE554ACD1CB9A380018776E51D09
92F6F7C3074C48E3CCA5C2920A314823395F7B0C8B5A8DA025B6753855D4770F
C2483219542066210F1638045EC8F47B9DF845096E002036F66C05CD50468BB9
A66897799B0082E6641D61E76876F1535C1116E455F618A992D185FB78632745
88F7507E13D92996EBCA3B152C37AA22480E81663F0CC22A148334577DBF5890
3192FEABF1DCF445E58E88A32BFD8E753669FF738953B7C669CB8046AA13C8A2
E8DDCFC5583550C8883C7BC3A674270AF71A3A506379E6F1EB8D69BA34720891
A122206ABCCABD2584B931536F7B2BE4A92CB00465EF03B6537B09BDBCFD22B6
9FD08377240D77E0EA16059A5F95DEAA532BDB884F1A412A574FC9F773B92F54
ACAA7F8BC3F318970763854A74D9B6AEB02B9F37C3A60D258EEB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSV+Euclid-Bold /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/BYNVSV+Euclid-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /.notdef /five 3{/.notdef}rp /nine 13{/.notdef}rp /G 14{/.notdef}rp 
/V 10{/.notdef}rp /a 3{/.notdef}rp /e 12{/.notdef}rp /r /.notdef 
/t 139{/.notdef}rp]
BYNVSV+Euclid-Bold nf
BYNVSV+Euclid-Bold*1 [11.76 0 0 -11.76 0 0 ]msf
223.995 35.1113 mo
(1.35 GeV)
[5.87988 3.26904 5.88037 5.87988 3.91602 9.24316 5.4917 0 ]xsh
BYNVSU+EuclidSymbol*1 [11.76 0 0 -11.76 0 0 ]msf
275.338 35.1113 mo
(")sh
%ADOBeginSubsetFont: Euclid AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVST+Euclid dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B854D0F46A497749B0B7269A67C7DA85FF191721E084A0
80872B52B5ED62F23A29EAEFD2C4139ED43359ADE987C64B0B31C310CC8AF0B2
32BB9245C2FE5F942F541E9B0F4E59C5DD470FD93588C12404C2AA441714665A
35B88AADF7216E7BED9CA63F47D875179CDC6FCAEB3E45F165153E4A4B11B083
448011893A4FE7AC6A53A1A9> |-
/B <1C60D8A8C9B639EE88DDD010DC4FC67CE81B7EC330F1DA34AD1625AF9109
0973F8726591248244AF9EDB3D825BF08E3D9C5376B21D78108AB98A5A4617D9
78060FF75330F51BD524709F13ADFAAD667D79BDF0A363035DAD918050C9A8E2
1CFD9156FA8D4A7CE0B347987C7A9500F454C24E67D0FE30AE0CDFEC21B9339F
D40AF25D45DB0A0F0C1CB3D8ECB3033EB97992C669F641EB2C574C8385DE9B98
8B3DFF7CBDDEF996A1571F486523736AD9858193AF29277ECB30065089CFB6BA
70F8DB7F66E7AC93A047AEB449672936825A04C23ECE159CE296EDA21732C58A
ADB8AF2240106C125B1DB1A1018B667864BFEA339AF509DDCFF2CE55D47DEED2
00415F06858292B906FEE655C80BB5F9F4F3D5CDEF66E4FB9693846983A37120
06AF2CE66E595D3AF480C4E8F0AA374E82ACD76B808C58CBE18BEEFEE1BA34E6
254CE576DCBA66DC3AD754297386ED2C43C26B7532E1C3EE63B4DD5CCF8C7A7D
61C3B7023ED50B832F65F85B770E7AC2CEA81E2463A5> |-
/E <1C60D8A8C9B65DE77B50C53FDA689ABE673A5D349F7E6283518B69F7BF38
66CC69EB0D8F4BA32123AACEFD6A4F1D2FF0275B2FD2C778900A204D2FF910E0
946C8C0460F2959F221DEA1469F53C8480451CAB3C4422A338FF437EB6AF6DC5
63FE49F8AC6EE06682D119FD5F26C8DDD1A8730D028FDBCA564544BEFD8F6104
4CC1DF2E4BF1BB455E84AFDBD4C6449D8A5DC4CEE8B56D28715F4B05BCCAB594
6885259034FBA4C3093BFE0DDAAE731C732865AC55ACD93741927208AD5D2780
8E187CDDC552BA6E87BB6EB2CAC91526D861582C8E52F99BA9425A9918DA46C8
451EA83DF92CD5C51F88835CB6AB3DF8EDEE6A094ED550BE03BBDB146D3850C4
8B5BC8EBF77D16B5837C1B57761DF4BAB7FF1095A157BA4DCC71F016C47A0ADA
8F792608683E23FA455D35155BA66AE7E0C38782D207F1D249CAB8B667101FA0
AD07B3E7F02D8083A14FB678E64FFFC7ADFF> |-
/F <1C60D8A8C9B6408507C30C404F50E986A3A102AF9A0683349090B086AA81
2771B7E1233EBA00B13D35593827534D0DBB3D84271062C07811CE9B3F2320DC
E4968F51C61FB293A097B95CA82E77E64B55E540FB3516E956E448E3A69D3546
F8D684111515DDBA499C76A8C41F63EDFB68B53CDD982A2E587F48554694D29A
7CBB14405417929C30A03DE5778FDEEB90D9C620C0D2D2CDC97941A7E854A892
187C3B315E433C0A68CE597EB1FA8C0B6F4A0D26D2742BEB04774657C516CFE6
6C597C2462E66CB9243B5466A90B7D510737262549890776314AEE90D3CACDC8
6602E54D1C09F21C913B0F7233580C63FC0FCFF1E81F2B5644B3AE82DEBE66C7
CC2CDAD39DB49444656E46E9AFE28FDD6ABE69D4D63463AD4E1A6E42CE8121A1
93ABEC2ECDBC47E92F4A8E5B54EF35F9> |-
/G <1C60D8A8C9B6C4F514245DF35784DB3310403290DD960BE2305E9808AF1D
54E976BDC5F9E7DAA64C6CD2A88354B48A548B0231ED912DBC6C566EC147884F
43CD92EF05A8D916551BB94C921ED141550CCC356EF8F421151350D1422FB0EA
55BA555179C0C6566A34396DCE28D3435542487AB9A9FE6032032CED6CD85F22
AAEF72D5297144FBA7B0D7EC358BF9BA125E31A8D2957A8E5E4E2199B98027D8
BE5D0AC45A4BC50C8621B38BECF1F02E3F800F78B6FCD2F973B761F32E66E63F
8C12FA7544664868CF5E3E38F11D17A0D9511A9544EE58D4C41046FD7324552F
EAED544FCB4DE979B2F89589908843C0311D10E78BFB00D77CC2553755539EB5
FB9E29683CB9D9C4CF35A5BCFA20392C96B2F906C80833BD78D0A8BD45D7E23D
F9CE8238E99D6B39F182C9A162D374DBA7E1AB6721EF46472D5F318348BCFED3
586370ECD8B3014F151F469647AE81B7B2ADC7FAA76C2CFC4809D56E99ED49AB
A93D6B6CB00B0C06430A753DE7011041746BB8BC1C4CBB3E48C615C58CB7FFD1
9B2FC436F8> |-
/M <1C60D8A8C9B5BA43D8345AB05FC465ECF5A2C16BF2EA6824A9E4A821CB11
FBDBC5E269DE2A35C3AF1437274CBF003A6BB4ED9CEA26CBD0B305B0E50DF644
866F9B0F6E7C9AF4051517518137C82B7DA7DCE4A4BE3D1E52F0DAC1DA9F910C
4B1B0536A7B14895D1D2DA6727B5783A514749AA6EAA365B34D5A3946056EF77
013429EEFE7E8ADAC32BE67EC642E7FC6C61FAF296718E9AD86128659D0FA8BA
D3058308849821C399099883FA3E22F9CAA6907D8B25621DABDB2664E8C9F921
4CE919924C926921B128F186CBEFA340D19CA48EDEFDFD1C71E427F9E75079CF
1F131977A22E9DCC41726F822C2A8EC0ED15EFC27A097EC266027727356FEFC6
ED77341F2AFBF464EBB704C42A0EB792E5D623B9063120D466CADD0F05AF4F> |-
/N <1C60D8A8C9B6E3FA5133D9B079A4A9E92518C516C794D3ED3D811A0DD901
1073A9801590AD61F4073F5B084DCA1EE496200D8F84BDB5E820731D66D0C49A
A124D85DBD74E6DA6C5EB24164E86860C1FA193AA1F4E7E081D2A8EBC660AE7B
4298DC914F4F6B209F97AD2B0BE78A9EF4693CB8CBD6C74408F9ED02AA7613C3
60DE6A31D91749E47450D004B5974FC3C1D340B3F79F4F8969CA5B98229FDFF3
A1F40D6DF4192E153AE8057E4C159355E97649B7E389085E3FD8F58E9D443D94
71121F3CE272D946C6599695CD91C1CF1D00521B13> |-
/R <1C60D8A8C9B615D1A19BFB44DC9A0D6E54BE58B1A8C066DD545E2666E892
F89691E569D0A3A5EC597FE51198A7FFCFEDDB6742EC0EA8D71751C8FBB60264
54CC5F826CE180F8BEAC1590C58B45C394E3A2A5049CAE016B4B683E856FD230
D2F756C88CCAF6B1299D78CF2CA110BA1DA89C9C119795E5FF8E8D9EA5D72A83
F2FAEF056132C050DAD7CB305668AF81FCD1FACBBF88B5F92CDA743E76DD29A4
074AF7EA37FD6E7C6D1711EE5CCB0C483D4192A9F4DFBF645BE1430851C1D19B
4F891F376E965F2A8438B17D8A3D4DCB7C81F34C6E7A10C93EDD216E34B5896B
D3D0D52D3EB7F2E8FA03F22E28C70872DE004710D9B17FBF3F9BC7736BE99744
88CFB65312D9FE120AAEB0B94AA524B814F599ED75F6AFD0E66101AF2AAA4C77
049DE7C9DEECAE3EAF73EC07CDAE4080BBEB0BBBAB447B93334434FAA53F9670
9A60E74838BD8144CC6615F9DC7A0F725CC4DB6F110149A52BCED7C8C5695820
94CD670D555F9C204BCD00A85911B3F69F20572EACB2E814BA0EF19EC460EDD2
BC9F4E318DAD023EF8E40ED447247D5AE38D8B8776B94670B3B60F3850B311F5
B6B996FB3B81> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVST+Euclid /Encoding get
dup 44 /comma put
dup 66 /B put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 77 /M put
dup 78 /N put
dup 82 /R put
pop
%ADOEndSubsetFont
/BYNVST+Euclid*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /.notdef /zero 
/one /two /three /four 4{/.notdef}rp /nine 8{/.notdef}rp /B 
/C /.notdef /E /F /G /.notdef /I /.notdef 
/K /.notdef /M /N 3{/.notdef}rp /R /S 13{/.notdef}rp 
/a /b /c /d /e /f 2{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t /u 138{/.notdef}rp]
BYNVST+Euclid nf
BYNVST+Euclid*1 [11.76 0 0 -11.76 0 0 ]msf
278.677 35.1113 mo
(MiniBooNE 2010, RFG)
[10.772 3.26904 6.52686 3.26904 8.32617 5.87988 5.88037 8.82031 7.99707 3.91602 5.87988 5.87988 
5.87988 5.87988 3.26953 3.91602 8.65527 7.67969 0 ]xsh
BYNVSU+EuclidSymbol*1 [11.76 0 0 -11.76 0 0 ]msf
398.457 35.1113 mo
(#)sh
167.102 15.8501 mo
171.477 15.8501 li
0 1 0 rgb
@
174.76 15.8638 mo
174.76 15.2842 174.29 14.814 173.71 14.814 cv
173.13 14.814 172.66 15.2842 172.66 15.8638 cv
172.66 16.4434 173.13 16.9141 173.71 16.9141 cv
174.29 16.9141 174.76 16.4434 174.76 15.8638 cv
ef
176.027 15.8501 mo
180.402 15.8501 li
@
183.748 15.8638 mo
183.748 15.2842 183.278 14.814 182.698 14.814 cv
182.119 14.814 181.648 15.2842 181.648 15.8638 cv
181.648 16.4434 182.119 16.9141 182.698 16.9141 cv
183.278 16.9141 183.748 16.4434 183.748 15.8638 cv
ef
184.952 15.8501 mo
189.327 15.8501 li
@
[3 3 ] 0 dsh
167.102 32.1499 mo
190.027 32.1499 li
0 0 1 rgb
@
gsave
1.098 480.6 mo
.099 0 li
592.2 0 li
592.2 480.6 li
1.098 480.6 li
clp
[1 2 ] 0 dsh
152.302 427.35 mo
589.277 432.6 li
1 0 0 rgb
@
grestore
[] 0 dsh
587.527 357.875 mo
589.277 357.875 li
578.602 358.225 mo
582.977 358.05 li
569.677 358.399 mo
574.052 358.225 li
560.751 358.575 mo
565.126 358.575 li
551.827 358.925 mo
556.202 358.75 li
542.902 359.1 mo
547.277 358.925 li
533.977 359.274 mo
538.352 359.1 li
525.052 359.45 mo
529.427 359.45 li
516.126 359.8 mo
520.677 359.625 li
507.202 359.975 mo
511.751 359.8 li
498.277 360.149 mo
502.827 360.149 li
489.352 360.5 mo
493.902 360.325 li
480.427 360.675 mo
484.977 360.5 li
471.501 360.85 mo
476.052 360.85 li
462.577 361.024 mo
467.126 361.024 li
453.652 361.375 mo
458.202 361.2 li
444.727 361.55 mo
449.277 361.375 li
435.802 361.725 mo
440.352 361.725 li
426.876 362.075 mo
431.427 361.899 li
417.952 362.25 mo
422.501 362.075 li
409.027 362.425 mo
413.577 362.425 li
400.102 362.6 mo
404.652 362.6 li
391.177 362.95 mo
395.727 362.774 li
382.251 363.125 mo
386.802 362.95 li
373.327 363.3 mo
377.876 363.3 li
364.402 363.649 mo
368.952 363.475 li
355.477 363.825 mo
360.027 363.649 li
346.552 364 mo
351.102 364 li
337.626 364.35 mo
342.177 364.175 li
328.702 364.524 mo
333.251 364.35 li
319.777 364.7 mo
324.327 364.524 li
310.852 364.875 mo
315.402 364.875 li
301.927 365.225 mo
306.477 365.05 li
293.002 365.399 mo
297.552 365.225 li
284.077 365.575 mo
288.627 365.575 li
275.152 365.925 mo
279.702 365.75 li
266.227 366.1 mo
270.777 365.925 li
257.302 366.274 mo
261.852 366.1 li
248.377 366.45 mo
252.927 366.45 li
239.627 366.8 mo
244.002 366.625 li
230.702 366.975 mo
235.077 366.8 li
221.777 367.149 mo
226.152 367.149 li
212.852 367.5 mo
217.227 367.325 li
203.927 367.675 mo
208.302 367.5 li
195.002 367.85 mo
199.377 367.85 li
186.077 368.024 mo
190.452 368.024 li
.164706 .372549 0 rgb
@
146.877 341.774 mo
151.427 341.425 li
0 1 0 rgb
@
154.583 341.432 mo
154.583 340.852 154.114 340.382 153.534 340.382 cv
152.955 340.382 152.484 340.852 152.484 341.432 cv
152.484 342.012 152.955 342.481 153.534 342.481 cv
154.114 342.481 154.583 342.012 154.583 341.432 cv
ef
155.802 341.25 mo
160.352 340.899 li
@
163.488 340.76 mo
163.488 340.18 163.018 339.71 162.438 339.71 cv
161.859 339.71 161.388 340.18 161.388 340.76 cv
161.388 341.34 161.859 341.81 162.438 341.81 cv
163.018 341.81 163.488 341.34 163.488 340.76 cv
ef
164.727 340.55 mo
169.277 340.2 li
@
172.392 340.172 mo
172.392 339.592 171.921 339.122 171.342 339.122 cv
170.762 339.122 170.292 339.592 170.292 340.172 cv
170.292 340.752 170.762 341.222 171.342 341.222 cv
171.921 341.222 172.392 340.752 172.392 340.172 cv
ef
173.652 340.024 mo
178.027 339.675 li
@
181.38 339.5 mo
181.38 338.92 180.91 338.45 180.331 338.45 cv
179.75 338.45 179.28 338.92 179.28 339.5 cv
179.28 340.079 179.75 340.55 180.331 340.55 cv
180.91 340.55 181.38 340.079 181.38 339.5 cv
ef
182.577 339.325 mo
186.952 339.149 li
@
190.284 338.996 mo
190.284 338.416 189.814 337.946 189.234 337.946 cv
188.655 337.946 188.184 338.416 188.184 338.996 cv
188.184 339.576 188.655 340.046 189.234 340.046 cv
189.814 340.046 190.284 339.576 190.284 338.996 cv
ef
191.502 338.8 mo
195.877 338.45 li
@
199.188 338.24 mo
199.188 337.66 198.718 337.19 198.138 337.19 cv
197.558 337.19 197.088 337.66 197.088 338.24 cv
197.088 338.819 197.558 339.29 198.138 339.29 cv
198.718 339.29 199.188 338.819 199.188 338.24 cv
ef
200.427 338.1 mo
204.802 337.925 li
@
208.092 337.736 mo
208.092 337.156 207.622 336.687 207.042 336.687 cv
206.462 336.687 205.993 337.156 205.993 337.736 cv
205.993 338.315 206.462 338.786 207.042 338.786 cv
207.622 338.786 208.092 338.315 208.092 337.736 cv
ef
209.352 337.575 mo
213.727 337.225 li
@
217.081 337.063 mo
217.081 336.484 216.61 336.014 216.03 336.014 cv
215.451 336.014 214.98 336.484 214.98 337.063 cv
214.98 337.644 215.451 338.113 216.03 338.113 cv
216.61 338.113 217.081 337.644 217.081 337.063 cv
ef
218.102 336.875 mo
222.652 336.7 li
@
225.984 336.56 mo
225.984 335.98 225.513 335.51 224.934 335.51 cv
224.355 335.51 223.884 335.98 223.884 336.56 cv
223.884 337.14 224.355 337.609 224.934 337.609 cv
225.513 337.609 225.984 337.14 225.984 336.56 cv
ef
227.027 336.35 mo
231.577 336 li
@
234.72 335.804 mo
234.72 335.224 234.25 334.754 233.67 334.754 cv
233.09 334.754 232.621 335.224 232.621 335.804 cv
232.621 336.384 233.09 336.854 233.67 336.854 cv
234.25 336.854 234.72 336.384 234.72 335.804 cv
ef
235.952 335.825 mo
240.502 335.475 li
@
243.625 335.3 mo
243.625 334.72 243.154 334.25 242.574 334.25 cv
241.995 334.25 241.524 334.72 241.524 335.3 cv
241.524 335.88 241.995 336.35 242.574 336.35 cv
243.154 336.35 243.625 335.88 243.625 335.3 cv
ef
244.877 335.125 mo
249.252 334.774 li
@
252.612 334.628 mo
252.612 334.048 252.142 333.578 251.562 333.578 cv
250.983 333.578 250.512 334.048 250.512 334.628 cv
250.512 335.208 250.983 335.678 251.562 335.678 cv
252.142 335.678 252.612 335.208 252.612 334.628 cv
ef
464.327 319.375 mo
468.702 319.2 li
253.802 334.6 mo
256.602 334.425 li
@
472.02 319.172 mo
472.02 318.592 471.549 318.122 470.97 318.122 cv
470.39 318.122 469.92 318.592 469.92 319.172 cv
469.92 319.752 470.39 320.222 470.97 320.222 cv
471.549 320.222 472.02 319.752 472.02 319.172 cv
ef
473.251 319.2 mo
477.626 319.024 li
@
480.923 318.836 mo
480.923 318.257 480.454 317.786 479.874 317.786 cv
479.294 317.786 478.824 318.257 478.824 318.836 cv
478.824 319.415 479.294 319.886 479.874 319.886 cv
480.454 319.886 480.923 319.415 480.923 318.836 cv
ef
482.177 318.85 mo
486.552 318.675 li
@
489.912 318.668 mo
489.912 318.088 489.441 317.618 488.862 317.618 cv
488.282 317.618 487.812 318.088 487.812 318.668 cv
487.812 319.248 488.282 319.718 488.862 319.718 cv
489.441 319.718 489.912 319.248 489.912 318.668 cv
ef
491.102 318.5 mo
495.477 318.5 li
@
498.816 318.332 mo
498.816 317.752 498.345 317.281 497.765 317.281 cv
497.186 317.281 496.715 317.752 496.715 318.332 cv
496.715 318.911 497.186 319.382 497.765 319.382 cv
498.345 319.382 498.816 318.911 498.816 318.332 cv
ef
500.027 318.325 mo
504.402 318.149 li
@
507.72 318.163 mo
507.72 317.585 507.25 317.113 506.67 317.113 cv
506.09 317.113 505.62 317.585 505.62 318.163 cv
505.62 318.743 506.09 319.214 506.67 319.214 cv
507.25 319.214 507.72 318.743 507.72 318.163 cv
ef
508.952 317.975 mo
513.327 317.8 li
@
516.624 317.828 mo
516.624 317.248 516.154 316.778 515.574 316.778 cv
514.994 316.778 514.524 317.248 514.524 317.828 cv
514.524 318.407 514.994 318.878 515.574 318.878 cv
516.154 318.878 516.624 318.407 516.624 317.828 cv
ef
517.876 317.8 mo
522.251 317.625 li
@
525.612 317.491 mo
525.612 316.912 525.141 316.441 524.562 316.441 cv
523.982 316.441 523.511 316.912 523.511 317.491 cv
523.511 318.071 523.982 318.542 524.562 318.542 cv
525.141 318.542 525.612 318.071 525.612 317.491 cv
ef
526.626 317.45 mo
531.177 317.274 li
@
534.515 317.24 mo
534.515 316.66 534.045 316.19 533.465 316.19 cv
532.886 316.19 532.416 316.66 532.416 317.24 cv
532.416 317.819 532.886 318.29 533.465 318.29 cv
534.045 318.29 534.515 317.819 534.515 317.24 cv
ef
535.552 317.1 mo
540.102 317.1 li
@
543.42 316.903 mo
543.42 316.324 542.95 315.854 542.37 315.854 cv
541.791 315.854 541.32 316.324 541.32 316.903 cv
541.32 317.483 541.791 317.954 542.37 317.954 cv
542.95 317.954 543.42 317.483 543.42 316.903 cv
ef
544.477 316.925 mo
549.027 316.75 li
@
552.324 316.736 mo
552.324 316.156 551.853 315.687 551.274 315.687 cv
550.694 315.687 550.224 316.156 550.224 316.736 cv
550.224 317.315 550.694 317.786 551.274 317.786 cv
551.853 317.786 552.324 317.315 552.324 316.736 cv
ef
553.402 316.575 mo
557.952 316.399 li
@
561.312 316.399 mo
561.312 315.82 560.841 315.35 560.261 315.35 cv
559.682 315.35 559.211 315.82 559.211 316.399 cv
559.211 316.979 559.682 317.45 560.261 317.45 cv
560.841 317.45 561.312 316.979 561.312 316.399 cv
ef
562.327 316.399 mo
566.876 316.225 li
@
570.215 316.063 mo
570.215 315.484 569.746 315.014 569.166 315.014 cv
568.586 315.014 568.116 315.484 568.116 316.063 cv
568.116 316.644 568.586 317.113 569.166 317.113 cv
569.746 317.113 570.215 316.644 570.215 316.063 cv
ef
571.251 316.05 mo
575.802 315.875 li
@
579.12 315.896 mo
579.12 315.316 578.65 314.846 578.07 314.846 cv
577.491 314.846 577.02 315.316 577.02 315.896 cv
577.02 316.476 577.491 316.946 578.07 316.946 cv
578.65 316.946 579.12 316.476 579.12 315.896 cv
ef
580.177 315.7 mo
584.727 315.7 li
@
588.024 315.56 mo
588.024 314.98 587.553 314.51 586.974 314.51 cv
586.394 314.51 585.923 314.98 585.923 315.56 cv
585.923 316.14 586.394 316.609 586.974 316.609 cv
587.553 316.609 588.024 316.14 588.024 315.56 cv
ef
589.102 315.524 mo
589.277 315.524 li
@
gsave
591.201 480.6 mo
1.098 480.6 li
.099 0 li
591.201 0 li
591.201 480.6 li
clp
[3 3 ] 0 dsh
462.751 254.625 mo
589.277 247.975 li
146.877 302.575 mo
256.602 286.475 li
0 0 1 rgb
@
grestore
0 0 0 rgb
%ADOBeginSubsetFont: Euclid AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVST+Euclid dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B7361F026C90415150EF73EECFB0F5D1859D81A957
34A88F918A757D6658CD63D670E6F96F46CB32F26F4B913D0ABF1C26A72A7BF7
EFA0B0847CD7F8E9BCD53DB080D1BDE25062D12FC483F59F1D61CA37F4AB8D77
7F4342DECE0641880E7189E6A84097D60F2FBF31A46C96B6F5DE1E0A62D1D5E9
2AD63466852A0EFBC940CCECEE998385455C7B10514CB2DFC712D2FE37D7C401
D24C97BC6FC3E24FD582C0E743013324C4BB17A590B67F54D30767812C> |-
/parenright <1C60D8A8C9B7361F021858F9E5B069E8CC96BD5F64E200E47B8
50B721C1CD244D2FF5E3B6A434A87E1C56DF9FDF2975A7B782219354D400590C
03D6E3954934871364E55D05A249B0B731086E76CAEFDBD8C63DD39B280EF248
F4A26E70CEABE6E2C41313CE7B9D305AF14325C6BAF30942CCAA5830F2D8E874
8228234E4EA1DE7DC8A5DFCBB6C47C51BB75B4FAE6BD76D28EC4393CE1FD138F
AF511CC3D64B0504CE02032E0EB40A7FEDFAD15FA496540CB87C5AC9346C1503
DE8> |-
/slash <1C60D8A8C9B7A73DA0062D3AF8BE4AF5CB4EDBB03A57AA83E5ED9518
2737862A3D028808329E98AC8EF196F7B5C7C9B08089F8E9444A647ECBE4EBCD
39> |-
/L <1C60D8A8C9B66482B3354DAB12493EEC72423A3B14267C061852027CE911
B1488EDE90901EC7080DD5BB60451904BC47EF855919C891DC0815811F11B7C0
9A699648306BE705D9FE71D4D1DB16103E7DDAEE5913E5BF3786FF4863B6A36B
DD94B8DCF63D67E2DC5C0258716F772567815F98536ED7D250B03BC0A3FDA89A
A55913B8E6F3E0587ADADF2D36A22FAFC007ACE5DB84A17DBC888927ABF0B3B7
31DC2C99F6FCD8A7E10276C7172C538C5BB834CEC58EDC671DC529E02962537A
A200A92D724928CB7F08> |-
/V <1C60D8A8C9B6E3FA514E1C8CD95D048F05185CD0FA4C6B78C6D45CF490EF
0B6D342E731EFB574671019FED42A1B09F005AB6EA98FF8E73BDACD9420774C3
10E44911BE164695BC810B3A3D8C859AB81B54ECA4536C06DC5E514D419BF26F
47A2CED4993A2C59FBDCB3D1C0CABDECE065F03B96221400F888E372A27B662C
63D768AD379B0E28148ADBA2437EF4C19343E67AE570D09114D8DDDF5FE8061C
3C2BB565B8E39361CA4ED0DE849DB7F5673BFB7B41674D7736B01E> |-
/m <1C60D8A8C9B6B41CB5D4C48B9681EC1D908196CE01698BC081C2044431C2
852C122398FD6E3FF379E4D497D355FFB9C3BF6EC3E1ACFFD62C3515856B0C32
F014644C67610B406774FC731A8D279963191160DA845CCF3F76E33D9A4A3C8C
134431A6F65AF22BB0CF81FF71FF14041BE0EC7A0030427815E450000BC95D95
1CF2C1125D1E7EB4DE5EBC53745220924C3312DB253D21782B630BBB36D0A26E
A49598EBDDC45ECD54C962D52828EFFA95B6E2C8A2C8A79F2723C94FE1C247ED
8D4DDD907BDD98654C056FF090132E8C6FB20624A439829AAF55EBF17C6E48DC
6EB09500EF591E5DC211D812012FAF711BA1633CFEAA24229F8C38824F91E60E
46A8CE170A0D1B5E430A4D7D8591A4EE257D9C75183B73EC88E2C219C27F07C4
C580368D52E78D6CA67714583AC5AEB37877CD36A0D0C5D8683A0785F9120736
AA0F95DD81847E14FC4BF639D7DBC0AEF7C43AD2814D8FE80A35D005F904BA47
1F01C391D65E66F10D984DAC2CC28F766C2F43FEEB21F52A1375FD6EACECAAF1
5E35C34EA91C81203BEB9176AEB2BC964F2C3C2395E3C0F39C6544CD083E6592
4F13E8C2BABBA295AE91B6218085BD65C3C5272F558D2259A5B422B472C4A53F
CA8DC1C93BC70D258ECF6102754B911BCE2C190C10E15147D7FDFBF0ACA74149
709C7C8263CBC26E826244AB4CA8C8A41952C80849> |-
/p <1C60D8A8C9B790A84E7F4A2C78ACD4DEB72F3F52D1B4CB24B3F6AC7A4CF4
BA38B81F05AD69031772CA93162B757635B9930ACFAEE7979D121AB82F353F9A
A517A2E84467969803017F773C71A78D289E8C3390A548EAB4FA8C5D46D7C338
1FB5D03B4A60E4C56CAC496D6A4F9761223EF1EF08B054607FFE97611AB44BEB
ACF706651F3BDC4FEBAD405821B35EC4E1E39F6E7C3E3D59F5F32E31F39B5883
E345083BFBACFC2759FF3EFAAD816CB599484BCFA40D57D659A0835A2264B384
E9E9187F7759BA7928DB706349C3EEC13480E4660F4CD732BB30F657A71B06B0
16008682059EDDB17E9D317A7BE107F7729BB8895E09D27202D2C330CD37A614
EF69A01C766C06527E7ACBEFC0F723348627B6AFCE609418CE7A34C68EEF93AA
A9F94506506812120F0A053D93D6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVST+Euclid /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 76 /L put
dup 86 /V put
dup 109 /m put
dup 112 /p put
pop
%ADOEndSubsetFont
/BYNVST+Euclid*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /slash /zero /one /two /three /four 4{/.notdef}rp 
/nine 8{/.notdef}rp /B /C /.notdef /E /F /G 
/.notdef /I /.notdef /K /L /M /N 3{/.notdef}rp 
/R /S 2{/.notdef}rp /V 10{/.notdef}rp /a /b /c 
/d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
138{/.notdef}rp]
BYNVST+Euclid nf
BYNVST+Euclid*1 [12.6 0 0 -12.6 0 0 ]msf
265.773 475.808 mo
(Lepton Momentum \(GeV/)
[7.875 5.59375 6.99316 4.90137 6.2998 6.99316 4.19531 11.541 6.2998 10.4961 5.59375 6.99316 
4.90137 6.99316 10.4961 4.19531 4.90137 9.89063 5.59375 9.4502 0 ]xsh
%ADOBeginSubsetFont: Euclid-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSW+Euclid-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B74F366DADD4398247827B35FC1F5FE4120E784C2D2EE6367F
54D518692AB603349A2E990EA64D77E3AAFD98B6558E0EC179450B090423EE96
A6E77E7AD6369283456C170527C36DA985BC0085AA7A6C869678707E2B42EE68
35D2C4A51D4E79A8554478980C1F5F0A17E4730A686762F4BAD4792EBA48679E
A9CF97CDEB83D45BAAA12929165400BBB7D3E5836A32E73FBF3AFD08703391F7
D4BF98CE73180A123EC4D3B317776CBB727FFC666CD9BF0E743263C9A5A2AC7E
81BB983AE6890F27BA6A81715C28B968D67AF7934F717CDB43EDE495729F387B
70E933234AB2023CFDE5D21DD193CDCF39F305E43242108E2BDBD687C6AD6CDF
35368408ED0D0571> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSW+Euclid-Italic /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/BYNVSW+Euclid-Italic*1 
[65{/.notdef}rp /A 11{/.notdef}rp /M 21{/.notdef}rp /c 156{/.notdef}rp]
BYNVSW+Euclid-Italic nf
BYNVSW+Euclid-Italic*1 [12.6 0 0 -12.6 0 0 ]msf
412.271 475.808 mo
(c)sh
BYNVST+Euclid*1 [12.6 0 0 -12.6 0 0 ]msf
418.067 475.808 mo
(\))sh
541.789 239.708 mo
541.789 239.611 541.71 239.533 541.614 239.533 cv
541.517 239.533 541.439 239.611 541.439 239.708 cv
541.439 239.805 541.517 239.883 541.614 239.883 cv
541.71 239.883 541.789 239.805 541.789 239.708 cv
1 1 1 rgb
ef
541.789 239.708 mo
541.789 239.611 541.71 239.533 541.614 239.533 cv
541.517 239.533 541.439 239.611 541.439 239.708 cv
541.439 239.805 541.517 239.883 541.614 239.883 cv
541.71 239.883 541.789 239.805 541.789 239.708 cv
ef
541.786 239.792 mo
541.698 239.704 li
541.611 239.792 li
541.698 239.879 li
541.786 239.792 li
ef
.498039 0 0 rgb
%ADOBeginSubsetFont: EuclidSymbol AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSU+EuclidSymbol dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/mu <1C60D8A8C9B7B5777CCCB8F0C773EDA9446A2A54B5A44F414E5A690DA23
DB24E1B4B687501204D3F9973AEC986E8869D92E1F7BC74A3CA605496FDF0DD2
D0E01B69C17DE651F202EB87508550BB18B6FE5288E1A76828EDF0CBEDB2BDCD
C8BB7CDB2D254EF21A9EFE94678C526D13C91053DED64499C4CB28B0F35E7F19
2FA9D45A913908020E42C22BCF9C1DE965D187C9C34A71B40BEC80DE0DAD9415
63976DF9EE5E0B898529F78642D9C61037507C7C787F81A6B0CF0FF5C59219F8
BA370B67F87B06B06EAE3CBB7879A9533499D3E96D19FA3B005D5F7EB2BC09BC
485F629701397C15FD7FF261A5C02CE4F2800CB953E7836DEADC24DD16958D6E
556E2C90A2227EB804C3E6A5893A9E0DCB3E9CFFA3C7C7899ED6D38> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSU+EuclidSymbol /Encoding get
dup 36 /mu put
pop
%ADOEndSubsetFont
/BYNVSU+EuclidSymbol*1 
[32{/.notdef}rp /equal /space /parenleft /parenright /mu 90{/.notdef}rp /minus 
128{/.notdef}rp]
BYNVSU+EuclidSymbol nf
BYNVSU+EuclidSymbol*1 [14.7 0 0 -14.7 0 0 ]msf
54.6548 435.882 mo
($\177)
[7.61426 0 ]xsh
BYNVSV+Euclid-Bold*1 [14.7 0 0 -14.7 0 0 ]msf
73.5298 435.882 mo
(rate)
[6.2915 7.14404 5.73291 0 ]xsh
0 0 0 rgb
%ADOBeginSubsetFont: Euclid-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSV+Euclid-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B64228CF1E6C2A2D2182FCFE800EAB9F2732857D4E75D3CF87
400456312DAC90E1857EA26D49BC5F6EDB36A5FDDB93A22DB941D4B2DE9173A6
E76FF6DB78297A039A0582DD23DB1CDCC6411AC6BC25D3148F6378600FCC87D3
B9FAE607410552273066FD31F293D4166FF2B99C3306A948C1805B40B20AD33C
ACD27481411AFB37B69D4455A1656C95D9EDBFCE13D3C14735AA94AD2136DF84
A9FCFA4A93B87F65A27A13DC92761145807A8EAB6399CDA97D59D3787D95198F
3EF3E1AAE41A4E84F6> |-
/Q <1C60D8A8C9B6E3FA514D5E3AC724C74DAE30E9FBE9859F9759848A5E542E
61B522B93FDF8AC4EB268EF062695326F49492B8040B2C05DA7FADCF7F765083
6F845B0F053B55A7F31C7F84E8982BD8DFB9ABCA85FCE726852DB607AA8BC4F4
8CEDA3CB348960D09128309F5A64DAC48494D48B05568C438DDA8B2392315F06
8E7F233C18C2D2613DFD762855F2C79D5C7EE98D98B466C410A707A2FAC93909
9EE33ADBB4E9513E955D8699D676445A427CA4F7D1CEFB8429DFB4D89CC690BE
A800CB6D9837AB15C376036BB42AC82ABCC44CCF0083A81C57040939F42154AB
4F7403AE51FD13E8AF3E1CDECA24D1EE7E8B05713042243AA01870B3672A8687
35D582EE20F6A5BC45921B18871AE2C4FBD0FB193AA8A08228DE15F7A1C24F1D
7BB78849E189D8C93016771DA7FC917D39D5E7359F399AE423CC19A94C767418
3DA04FB32320DFD84FFD26D4319273ED2A90B78E92B3DDCEA5B3B23E6F2DA03F
576C6397FD2E6BEE8AB3BD62DC375DCCEDD3F0876BCFB56EF1A3FFB52D394F42
3D61F71C7F65E35526FFFCDFD861A0F7ACAC0848B5F6E4B3C5149773E57309F2
4ED3153A40B08F051CE9D59ED139893342C8BAD9010233CA3107FB8DDAB628BC
39283AF5255B33FBD5A5E63D0516E4F091479514940A89B69FEF3B3502358DB4
4401757F5398E792DD03> |-
/R <1C60D8A8C9B6ED05DB632B50386977AEE557822BAFFC7ABAB83B3C9B60B4
5D8010E209D88D5DE0FE8080FDDB42B8FEF1CB0E85444F89814D5FED61BBFC45
0B6F38DC70799E98DBD66D6FB7940B923812D9BF01EE4998FEC9C268EBC010AB
1933CDC85FB65F28459F9CE15609898E442855DA55268883674EEC5E1D07CA91
9ABFB98676E4C1D17E4C19E0E8084C5153FEF06F00CDD7A47629E938D4B1D888
EE3126BCCB62B96EC99D8F341B9BABBE4276F62BD30351D32BE5F00CC23B9E15
85F2F7CBB522BC80BBD16C1DF739EC3D8FA0FC9715D4934C0004AE487C8FD762
36039B5355EA3F28DEAABFA19A48EC0EFDD16DACE8D5DED93B01A2141F344D8D
78555FFFFDA681247A9E537456F2038BDCE602D323A90C5DE4D72AA2869870BD
3CABD5AA32BA35939E9C42D67ADB635AA41750F48A131D9E22274CD7E952> |-
/S <1C60D8A8C9B790A84E8F532CB3519C5C5A7BCD946F0F70A547EBBD1835D9
C48762D36810D56E05B4EE627681BEBC6E844DF4F77B6D71FC09DA05B40DC13B
68CCA2EE7964CCFC18BA31A0D7019077EF6FAD942D1FA28F781589ED85B41D67
60CA8D278A555514D2930E1E37E0B0DA45EBA3D62159F9B6BCF003CB0FBD9EB3
A7E7118704479BDF2078EE8EDEA141EC34A06A968FF82C2B84544BC5C5C7C71C
98ACE8DAD7C52FEF4E3AEB641EDB5A8534778B8A6AFB895FCD2190A19C30A6D1
6FF3FF1541CBF60F98AEB96AEF4D0C25F9D2E08EC9675DB426A9B1340CF8DB3E
57FB4D1477ABD41264678941DF2DF02691FEBD368EFA3EB1AAFA55D9EAE07D42
1F11B65B4CF7E449BAC09C9CA8CEE44829D4173C2708D23A5897FF4E3AA21EE2
5DEC7FFE111BB32F5480F006D34DB457369C133F6059F16AE5B2534EBB52AF0E
ECC9E9C7855A0B1C2473720AA63968B5B00B95172D216FC423B154C190E4CFD0
2F82B58085FA3608CE3CB562F13199> |-
/d <1C60D8A8C9B790A8418F49E924FEF2513FF521B349C9B71893A61B0F98A4
724A01DF6FACA490083D5962BB7B988E34793387FC6C0D1669A2BBBBE10E4F08
63B33B1934C9D060D4859BB2ED76AC7EC65347D9A27CD4096C49A6E18C4F1FB1
F3ABC667C048F9F14304041E17075253BE27A8AA4F11527C2EDE0CB13603A3A4
E10790F21A1730F3F2145787381A375E02C637B3BB98EC3F8F420AE207748266
46967474285BF6BA7F8D9672F8F62ECC66BB0051439DE2C3DA9ACBC4402360EE
EB2E8B25368B5BAE8E77701607BC7D3F0DC05356DEEF38EB52E8721DA2336DBF
8510378DEB38939AF250E98D3AE57F151FD4ECBC0DEC769C843FCFD7E37CB496
B9E09DE6CC6F> |-
/g <1C60D8A8C9B7A73DB6D1595271BC139889142A0F1F36234974B3F3491490
9D44C697CE01B4AE80E86CCD0CC1EE06BCCC0326340BE5506C981E8220BF7ABC
EE646B365A596070326CE429921B1CC8F6492DEC08E201168A3C5F2610D5EDB2
602F161EA13E1F2E5FDB9A6A0EC5A66B32798F3AEE41C207356BC8508343C5F0
CF6576172AC6B6D56235DFBA66AB2B07F0A9A5D866A6D5CD0CB37FAF3E16169C
E400F26EB91B3B81CE3558FEF5C891741DE036DAAF2CDA2E441D4F71EF184B50
19A5BD153E94D12A815056C9EEA1EE6EB5AE8EB529BEF287D69B1B4906B0E272
C8D9FB8B6403C52803FA3637D2880E1D79D837C016D2372BE7CDA0C6FB1A1D96
4842EDFA40FF4F875236A083AAE5C0E9E14ADF685AB7E38BD778D593604B6AF2
76A4B449EC5F3F6570B4E69EB3638313B405600BCFBAFCC0E97841BF115DBC61
8F0DC673AEB1D157666A1E9EF83BF1BED7E0B722B521FC5B2044E293CDD5D7DC
1E97CD441AC1FDF49D53E1D3948693E3053B2A3FC5D9D25F59FFCA17D1E26D5E
A5BB59F5F914E194FB4E465B72F37DCC9B2B9539B9F581FCC9488485DBE38800
A3770DBDF201438B3AC981ABB7BCB9B9B4B6D8F048F97482D8334AEFCBA8284F
244E27B3773B41E267CC2A5A9EA12CFCE332A9590AB4CA1740E54048195615B7
17275CC791EDBDE05AB3D2D0FD912CC7570B3A77F3D58E9B3463C507D770B685
EEFDB377F796654A4D13F4490FB5F03F22D8A2D258A2E0AF040BFF11B232051F
73643DFD444C207180847004FC681D45AADEC9A1B4A710F0DA5B347A9B6BCB22
C97A66336CE5F725> |-
/i <1C60D8A8C9B854D0F4620F02E9EF38DB1786F324CB76BFBAEDF7019C327F
FA7924CF134D6EF8758FB7211BDA79B88D1035BCA1880B5048AD1EF190F8C130
D687051B264F146C1413AEA25CC952C305EB06E3802CC7C3C411A31296C1042D
0DA8F7FF9D72C3707AC7AFFEDEE37C10333EE1FA70E51566A7D9C3E9A387AE10
ECEB440D8236DC9E2B514792> |-
/m <1C60D8A8C9B6B41CB5CEFA9E0AFB76E5944CD09216A1A59AF1CFA66955ED
E82B88F6D48B9E453F2D2F35FC92DBC40804D9F7D8971FC74A770EE666D6166A
814D8F7DD3797E961EED36822BC1D9BF86D865CB741EA4224A5E2EB49782DDD6
0E3D29AF7B1859D02557110C1F29E37447C7824EF73F5654122DECBC8EF7B6C4
0755B8232F4B69A5AE8E8987FAFF2B498A12ABC0D00C7E45961CA07C242CA7F8
6FFD764B93C3B3FCCD596F0833E8F66234AFD94FB37A1DDAD59962D43A5CB8FA
5EF77499D5740EE354BE7252AAF9EA7EE95B3DAB6B1D771C09030AE01ADD4B69
AECC7907FCE69A9813CAE4FC9229302FDF134EDAC842153C9BED9C4046645427
3ED1A3C604397BAE6515650607A8957516388E49A0FCCE9FF53D449932026833
B9AA99680D73C89F65ECB35A3E15227D31848436DE2D691445F1618074CD> |-
/n <1C60D8A8C9B790A84ECAB9E288EDD5EBEB02FE1084B08B5B5FFE105DE340
469A1A07F7842E17FA34DDD3C2AF2848D979AB313A4F358B0102CE0DE7704763
1E1FD0D62FD1B8ACEA500B31D838CC744896A259856D1B27C87B8C7A94CB8D1B
1B4C720C6B252CC77DF9F69C0EAF49CF6614696834FCD03A22594F89E12FA479
376F4F05EBEA945D3BC5D0D58B18D5233FD4D167A4593F69DE21433E3A788670
79B8865438B0196C0F263B8BDF50CE5344A21645807F678F2B3E74675BFCAD57
0CBD69E122B2C626B6E6BCEA8EC2> |-
/o <1C60D8A8C9B7A73DB6E6675116838FB70DCFBE36DD4E427892F5D1153B61
FB4B499FBE49EA814BCF0364EF93AB9C58D2CABA03ACA0F8387EB54354FBEEED
BEA264178E18CF6D079457A98DD81408A87A2146667FF4286D6369BD4A735A3E
16A869956EB7CF7DDA2538967581A5D25A05D0505AC5A4EAE1B33D775AA9B1B8
0DBF5FFE2B5EE7A44E036C5FFF5BB9EB7C76A3C6F3E828C71C6C21734905F9F1
8CAEA62933F899C55D220139D9385AA39B139B654AC7E80F867161411461A55D
C2305DC6178F3E42384FFEBD9C28B15E7F4F6F317486C0AB85C277619A379165
4D2CA63AFD7E79FF1677E340CEB6F23D22C194CFE8C3769C90E273DAB7E72D16
D1FDFD4022117AAA5160B8C5AE5D556E3687BF3ADC192E10412BBC6E9E1C5DF9
208AF560CA493C7D0BF8939FE19720> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSV+Euclid-Bold /Encoding get
dup 69 /E put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 100 /d put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
pop
%ADOEndSubsetFont
/BYNVSV+Euclid-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /.notdef /five 3{/.notdef}rp /nine 11{/.notdef}rp /E /.notdef 
/G 9{/.notdef}rp /Q /R /S 2{/.notdef}rp /V 10{/.notdef}rp 
/a 2{/.notdef}rp /d /e /.notdef /g /.notdef /i 
3{/.notdef}rp /m /n /o 2{/.notdef}rp /r /.notdef /t 
139{/.notdef}rp]
BYNVSV+Euclid-Bold nf
BYNVSV+Euclid-Bold*1 [12.6 0 0 -12.6 0 0 ]msf
101.903 263.4 mo
(QES dominated region)
[9.4502 8.25293 6.99268 4.1958 6.99268 6.2998 10.4956 3.50293 6.99268 6.12354 4.91406 5.88428 
6.99268 4.1958 5.39258 5.88428 6.2998 3.50293 6.2998 0 ]xsh
326.07 290.247 mo
(RES dominated)
[9.57617 8.25293 6.99316 4.19531 6.99316 6.2998 10.4961 3.50293 6.99316 6.12305 4.91406 5.88379 
0 ]xsh
326.07 305.367 mo
(       region)
[4.19531 4.19531 4.19531 4.19531 4.19531 4.19531 4.19531 5.39258 5.88379 6.2998 3.50293 6.2998 
0 ]xsh
1 1 1 rgb
%ADOBeginSubsetFont: Euclid-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
systemdict begin
BYNVSV+Euclid-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B6F3D3258957114C9B10C9D79C508BCD05D4E117FFE286B272
A669DE46E15B1A857629FC66E22C349BC0E6E6D33A168750C63472DE4352B4F4
BE3D2BF6717E8889E8348ED5906F078B246A07445A96B95869B204B9EFAC7707
C7DF2644782A3FDBB40A0E500EC2662D74E6EBC550A548E0DC39031462A88845
24115E9DD77491F41C324664F7D6839A05111D86688268F7B68FA23CC6835D9F
8C093E3951DBF4EC7E77129F25F43D628BDF303CB6B093055AD4BB> |-
/I <1C60D8A8C9B70EDCCC4CE56148AFF823711DE6433113183EA440AE268A0E
2949355CDC88D3F2137A75B922A52AC18D26C86DD9F8AF7E73D778F2E38C734A
A555> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BYNVSV+Euclid-Bold /Encoding get
dup 68 /D put
dup 73 /I put
pop
%ADOEndSubsetFont
/BYNVSV+Euclid-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /.notdef /five 3{/.notdef}rp /nine 10{/.notdef}rp /D /E 
/.notdef /G /.notdef /I 7{/.notdef}rp /Q /R /S 
2{/.notdef}rp /V 10{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef 
/g /.notdef /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp 
/r /.notdef /t 139{/.notdef}rp]
BYNVSV+Euclid-Bold nf
BYNVSV+Euclid-Bold*1 [12.6 0 0 -12.6 0 0 ]msf
450.237 345.334 mo
(DIS dominated region)
[9.65137 5.00195 6.99316 4.19531 6.99316 6.2998 10.4961 3.50293 6.99316 6.12305 4.91406 5.88379 
6.99316 4.19531 5.39258 5.88379 6.2998 3.50293 6.2998 0 ]xsh
0 0 0 rgb
BYNVST+Euclid*1 [12 0 0 -12 0 0 ]msf
325.547 312.3 mo
( )sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
/BYNVST+Euclid*1 uf
/BYNVST+Euclid uf
/Euclid uf
/BYNVSV+Euclid-Bold*1 uf
/BYNVSV+Euclid-Bold uf
/Euclid-Bold uf
/BYNVSW+Euclid-Italic*1 uf
/BYNVSW+Euclid-Italic uf
/Euclid-Italic uf
/BYNVSU+EuclidSymbol*1 uf
/BYNVSU+EuclidSymbol uf
/EuclidSymbol uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 13.0.0
%%For: (Vadim Naumov) ()
%%Title: (Count_rate_ratio.eps)
%%CreationDate: 1/28/2013 1:41 PM
%AI9_DataStream
%Gb"-6Bj2:ndP1UTlgd9)is$]%<E<+#'r'-WU*qE<mauV?d*eDsbT+rapU@mLOaC*73cgqbgc+:3%n&iU7RguZ7RV-<moG1L6+]3<
%WXSp8l@iOUF"bhKa2@Q3NOsD,GMdQj/kRRM)35?6Pk[EEm't!o."j-CM.IRdWsr:>IV1@j*Y2JGaeUua%EFZ4YPP:[n6Ru5i(MPr
%f]i'`IsI;cZZTa?Bab5F^obpd]l"cR/BQe92l=i+\)i,i_k)Leo;d?pm+LHCAtr5,gM-[TA3iDsfbc3LlA_IBPKqZ.[tb3ZrEe[5
%:64e/2e"Eg1!^Zs>b(&^dI:i)*$,'BGeP!Tn=I>IIl;2Q]20c$T1at#]?pl"!Z_bqiI&:t?>h`iNgnMV=;H,g@V]um9uEX:FPc3&
%E>(D:cq$#m5]=Ebm<'>bEPFO,ifX:rK"6(=?k,3tr\!.KK2upAmVG8fGM:"5KYA`/oZ'^>3e]=SXsB1>cRO*N>4m88$_Q="Nk/2f
%mVqZ<&Q(gsU<oIVW$sn10q\V_!Td8G*&_HCWSkcP=RbWud1[8O)BiWX\Mt9;;"A01Ig)eUW3dQ&rsW*$2uK5_8;fkrgY4S:K*_\K
%HVk3DREQ3V$:)Z60o7[@mIWo^k-Q@fVU%o?(W(EUmGAX.Zji]4BdmFRo')L(Ldl>/+K;!!_Bd<8%Pro&Is*o'Xa8;Tc$!_NgU]M=
%mWAI<D9;tC,oMp)\$KCRr,0m#YpNkHBT-$1G,H]+;eBt?Rb59]JEU?sZ.g6?Ff%.4H8BAq<T$Z$HTg\52Lfkh'1FV0h\pVA]>OB]
%k].Gc4N5#@I@R.PT>ro+&Og#h>)fIO@XcP'kU+qGgX$PA`ndEX?r\qI^j$!9TR1=g]N"erba25n^J+SRH%[)3Vk&BJ3ahj8=,)n,
%QX9&eWV&Qh3p`X*ECATa5S"r%kO/k@jB(pXI01+gdENW&Dr(c+Q(PDAZnh`?]oJHL'i6Q5G#/Gpp"=TR"efjC*&K%6Ps]5TmQa%l
%#6G+0\N?7%U%jmroB<,/QN%3I='FE7oS^Unk?fa7c?OXtS5#H)p<$.23?AZ2Nb7)gdI),eV^kto08O(')Z`3bIKtuV:N_eQWr<R%
%%V>^3Y&jm8k2^c`e#358G'iW%$B4Y$Vr&K3Up2\s'e1sL4"K^WZj41:$hI?+ne'C7(hu2'<[K'<2DCl#Q.Bb6mL3:6i"*PB0HQg-
%"p[ldg]:2P'`L^?3;Oq8Nn]>[IWs-Z5k]l5JGd$]AoBAnXrRH[*Hq]<@o>^VZ+\S([ZE'P.l>\s#a?t&S5!%]Igmb]&6a9;?C;jq
%4!"9$ZSe4q<r+ThS`'plg+?ufU'BnfgZp_JdVrT7!(6_IUc%HM7qmi&J'OKmaFh5K2g^=S$jiGK6,lsJe/s3?=d3$s>-fd@>Lp28
%@g,oUop)Of@AQ`P=6c"fW77s9Fe*G<?u:]D2Ct@-NDlGjYIp_6J]sG$YU)&@=W+XN:Koke*u&pCeGHYZ2<ePAGc*%`:1SfdAU^Ou
%I2!cIO,%6//KL4P#11mI.nrl[;q7d[j_fsMS!lm3`6mqQ[$3O2,'ugVn!M<aWh]0."]e]4Ffck!)Q*\s(l/6K!e%"l)Hn#5&k1u!
%GQ7"R5R:jHZHbj01P_TjcLX\VSrtdV.IbS$]60eSitqU)'@?ZXhJ;=GE\\b+;]iB$3:X1uqnau6k1&Q/$!EB4KN@"/FH^`tc;Jr$
%h=7SQqeO]lFCETobF<@[BF.g]Z2Y,"cocDE7Df9-]jg%#!t5HV1hW:m('J$a6+nZ[U;238?lOFhPSDd9&Ud=H[sKq+phW'_NA^ur
%_j`S#a;ji\S'tlOj$?gD(-Ms;IsN:H5W?<).U]7/*A*jM;R"uJoJJoRU49o`WSK:fC8g@I_2h>!m(3E-0Yd#!]$nqn88[DZ4W\DK
%7#f6nag&<:*;24Q&j^upPm:ehjS>u.6mL#.!'^DV'!F402Bet)#59,6F2$sl:<@jF@_m.*G75eo'E8"Cs8PD+\j`_ZO(7pJ/u"`n
%^S;cbW5J$'49:KINfj7D5Jg6J[r^=E+W)pQ(?S'\#N#q08?6Y?Zp"J&H8r2K5XSp+p\('9d=m<UY;p9V4o1gcP@iNdK!rj:.tSYE
%0rdrP1G1?<]YV8'^t,$u='tV9h@0\6I])QRC%iY3b_(LVNkJ&S%/;\65g)G>W!9Z&*]081!_A8=OCH44!o?Vn1.YtI'ip#f@s(>%
%d"`<g$rRp3OCCaCjPUauOO>h8<":F?W\W*QeKHe(76[LI&f-6Jn0b*O.4(5,Rl@&U;?j*/W<0%+W<T=sW=_!sT2GZG;*oH#(k4N@
%,YfLoE>_Y#Y26f'=5t3pHJIFBU];6m!0Ql;B=uG=]ZP$&c5XEYp^%eq:o,T!8Xa0]-)i6!Ulbj(ROI93P#bJRR+=&8";PM+d:SZF
%QIX/E3J7HtE`T?-lP7/9%dF^jH/iiBq%$<'6`NGP2Cag2OKq@0i07\C@=piQ)LfT-fBTc52sSq>"]AAslNngH9ulN_&?48r[;)gK
%bA(`CWUUla/Thh0D,fiO>.%P9<6Ngfb,[6RI0eZUY5jVKY#_N&1.l7,WGq&@f]?3]W;,J#\Q5m409S?p<(Z'tm0"^$fBX\^?B7C@
%+ilG^C"@#AQs+P%#"UNs=Y_GH1*i).aq0<@P[K4E6Q)U4;]K7EMLgj5o\^)Kj6YofE_7c2F%SEfBNRT.f1F*>LV`#KOC2bsAOmQN
%$E<1>rC5^4$:*F#TE=,'#>(!]RB;IE5%:0oKJim+5anVq[#id%+mC%C3i>[*#'EUloEsjte0CnT.\nlcUa8i%TOn01O]JDO>nCu;
%kQ0*5U]GH4a%<!_5TM\3%iQPn`I^,n"//]C=pe"6<&Oa<(M,>bJs<W.Q1TV<)M*He,*6"q1+\&WWutha:s]^R8/utp</I:rF(u"P
%d*JtHQY!2<eq,&BTk5(T.@H+FXp$]?)*:tYFiI4-,=o:m=c]1W\%E5V6/+bbA*]J4gD%0[eD;@u,:NFl,HF2VWk_pYlBste3Rg*A
%g,"hAT/P+YaJ90.."d1NO:tE"d$53aNI_<,P6OR`#4ei@AWU^8'':>"#is5ql9;/13j_0f`)27)8U1AS'13^mcr'o=6.+3B)X6i#
%Zss;D5(Rm:62-/]b!GC3lqiI\Y<r,QTbjNO)`Z%q&bHM:IDgo/W"(tf$A'qKN0Q^oiZ[ds]de]l'necLYr_Nd.eL>.oY2)P71T8N
%@]#cUT>4(C8tf"BQ!u7`.m\BC,=d\5PqjkTFfJQCC8IAal9=i4r"mDE8N+23q-d;2XV=nE":LLt9t)fs9hMLOlBGGNCo*#STL/e"
%.]&T!l;hY-\rb.R\MBd1E?XSbdT/enQfgtg^:`b]Oj(!Um@:8CUbQ+68(Qq8ZHc%qa;HBA-/C7HLm)?jH$B!5@pAYVgWq`Gq?_9$
%'tk?/Vj]\#138c3fVjRTDu(QR(sPd[PIQlc&cml'<Mm<ka],-jp1KXg9d_]-eK?0-Q(4$BBK35*KgcB54X?E_E2'4_G$%IL]o7Xm
%g'?c]^GYsJ`?_(+@KDc0Ik"3n=fER-<^G*ldQ/X$N,4?(X9p^SWGtb6_B_e*-e^d6ffNm'e3RB6o,3)_"6K_sW)c4!K%a[An&/Vq
%B&Gm15^A(5)p7h'ZmLE+9VAM&QYi@EI&(+J<'NZ$j_&NgDf_GDru^jol5*.%\Z'<kTNIJjVkSV-ZLke08nCUCg"psA8H`@Q?QK29
%dX&h5rmXIpU5m1NR$%AA8A>N#P5IuDfTjchZ+P8L1KF=*NP@FNN>1IW!u0(MJ80.(eO^K+JQ`/5Ab$sC8gu&AECq(6U/4o.P'=a`
%_[*KAA##-X;55NYp_r)X$@bEg*9;0k5E*UV%h/fi5.^6V?8Jec'!MN`+ND2TnA.j"#8$6V$uB*dPHY&E=7$\$bs/s;1!1l:=Fa7B
%cV;VTQDpt0r()#/#[1K%&L+keV,SVAYY:Ws7T%0Yr'O3_7atC2qh`HoPeJ?KGUcoUVA=<&7HGt-Ru-j=;-SmC$=t_r)l:nJO_u8q
%cK9Up\u'`:'[KE;E@uWVMCt'BU'i]^?[-<pF-HM/'Mm&#HN*hiXO;UD6MRa\G\o$=;q+$E>HjKZ0!QXJ0ZRBP,qFFT`JHp=%B2m[
%M>4$Z%RtJLe-6N$C1%`3%k2,9jU,<_YMM-Mm1-6.[;M=mV1Paj@[.F)k&AV0d;ukt<i5XPY-]po[YCht[%8&bBH>?WSl]n09ZG@<
%7F'(J%30IS"Wh71*2DX20JaXc"-Y12BR,kDc5<[RV'8)uIUPY7n1mGG)q#NrWgWPaII[P%fV089V)>JRaWFKWPUCs!qEIY.]jf.H
%-(pXqng.2qe5W:;RMo#(bt3&_T'N8lG>eN/_sQRq*Gf:Bfmi+uR,:7/HROB10VTCfpkD*`f02NV6>1dGs!e;WQ9[YNbN6*W,1]Ru
%JC8@@rbML*oRGjJ/c:q].8\7P2b[fZY<r7hjVg+\Jr,aH=q/@aEUds<CZ@Ckn_YTdC%V_bR`9]67_Ff^WKf4WV4_1Js0qq's(R?,
%N@.O(MO0/XS.U*e@M!Dk@U;/@+-geT'6]$1oSF<^0[U4@YqT#_&\!k,$VJ,J^CV!93pe`%a[h/BAQ34,=2]Yg\beY22.@G-(=<R\
%$R!0DER7lMbUlhPFbj]9`]HT,"(NCWg8R>q-pEJZXLbES=0qItf3WCP^gR/\emFuu=2"=-='k"".n+u.h,UPfigQoMETJnRE&?QH
%CQ6=eNpi@BLJM]d'j=]#0QT$R:T_HlT$b]*%.eiH%8[-[3<ReEK1-?)3_ETTRt(DJ;p>6d";EZ&9B0J13A\L9$P_bu`UV^t'iO6@
%g.DP`R7tnhYeACu.1a+NA$%FaFe[Ck(]b@'!qhaT;X5.9i)"21'_7C&3niR?QVDlH6'-%](Sr%0V^h(DW0#('iKSLB,\5]g#.'-Z
%2;i.XZl&,XW,%L+_:]In-]C<qdfF)^Z.hRgeWI9EI(AQ/m<_Yk+4T-PZhkp(0Oot\&9@f'[0%Tp901>&^M<W6VC8;G0I[oiDn7dE
%qKY[$ba>#;QUl-M!`5tiP:@A>ekhT;C,';_VK@7gMQ*4,^9nPZN8P$.&5C':%KBYs'T2FG&t(780fh8<>FT#A;BQcjK"TK@)*Z(8
%&W8Uu<?3=*(d_U;JWXKeU!tiT'"t(^lXb:J.`,^'*$\$-#(_m^I[$O*eqR(sNMX]NQ3-?X%:[a&9PUUH(a,-l'[lPjTXV$P_l5sq
%`+JnE0qaI3V2Zl`eLEr/hSs/s;i."kltpPrD,Sas2RS)FV?j$XCJqEq%;`noE]:0JQBMte-?=?sU3!'<5V^%Nkn:VREdQ)FquT<6
%s&4C0PIokshWNtfDmFODaaI[m*[\47WU*$\Wn+m0[22F$:KJ,\g8BDkL5^4#Ekf3!A)5hEY'7"KIHr?a`bGIONe>__?:F9.PrmR!
%h<JIQ]%X'RaPH)iDn=Sh::ns9Nca!5:?u'XK6tuZHS9\_+$-0N64lZH'Pkg$e>'$Q(h,urfFgmG9'+KVc_PcF^3O"2jB/BPmSZbj
%`2t6WW_*el.3BP@I3SEeQIW.gXC:L#NQoaKa1h<Wr<1F]p`<,B#fD;6q\H+c!K7Z`Mi>i#cm><87tJFNcl>VJ-cR"_o;oks5;ct(
%R?,M-mho_i?XUB1k7d$l9.W^5(f*_%o7rDb9tZjY!jKa^cEEC:eC%u<bVD5M*Vl?pQot<6QUI=#4CMJ%G\#FsEqs6K*2PrH1?aV0
%\iTm\P+[Ut'Tc>7L%(3_mO2,V:t.4`M]P#io?X#4lbb+%LJRmZMV!VZXq..0+$R5!HuaZ1jSJAfp#2,#_^E4lF%qdGXq..0+$R5!
%HuaZ1jSok3dt4RNLJP&`T3NI%\NYC]IJDm<jVZ#;9o@PX:ZQDRs$\idhaI"g>.g`2J'PK1Y7I71+$TMX6h1$Ban=VVlbb+M$&[>i
%:Tb5#>TZ0*had55nB(@^PO$+6f8!/)&"d)K5.Nk)Edd`D[+J82>ou8@5(%C!puM;@aoD.pPIW>9c$_>.S3357L9F6FJ+`;&d$9rM
%iEl]`b?Mr`>R&*^U:9^)g$a.riU]gR5O*C`GMh.A;)$C(6=QX)ZVm$a+A:uF+.A"d*n^D[$ibMR^\n/b?XDg,nihQr^%P1qp/YRM
%BL?LnTpS>/Dg3e?c6<0BO$=/6nT0!JNrE/kK(D",?ShXn"TkIj5:dB0!WR-Lir:tCr'/6<BDLu`f;nO:/?4q&REn\3-9.[_(I([Z
%V,]5t8=n"kWBkKL%7hRl%^WOiq.acYg$;?%j[LeKqqr*7k8uK,&Ua@4MD"qOnTG<>Wu-#%TpJ]]Rm>J;R:;]jar/`q,h6\H[H=iQ
%Zce4-@'ejbh%hd'*<-Y%L!S)W8&q3Hh\WoDc4o0g`)iC[^s`GMI9TK2T%b-0gZ&dX7?)_/&NeA[l65n&hKG>NDdh.3[j@@/X]1$B
%JG#Cq'+#$\Cbco(o6AMdG9UH%o2[c"Q\G.3>EZ3]Jm-(K=FqS;mp:8t*I;Xnp_muChjll0&=GIlNh@S[DL^642Ds8$77:jMV[(-%
%\F$]nq;aZM+<fW(e05d(8B-.&]]#KRnH^(IE__WqY<)g63;WX9iS1cX_5,/OP@Z_CdVH29&Vh_S>lY^`MJEHF9EJ>qZdY?Qa50+g
%f,V0[#\.`ae'>]8X[/MPXZFGC@+[L@FRMc5k&qMX(]%6Tg@5[BrCM>3Og%46>kAXCpoD^$=LX`D&DZnQR>#,br7"2fiHik?WB(7-
%V8"mWNe$$E/`CBukpU(S+bFkS9L_bHW:A9FgP5-m4!/>U9M_S/Cqe67[5g2_H/*+@Zt9M"E8#;9Fm`Q!'jeT0SMh"i^$bNZBm%u+
%$<grG3B3HbO#l.kE2:+f,A`[sE89lgkNEGDSVGVKpI\M8/+6Fr2U])>hqKuAh2S"Dh>=jl[eKRrUZR>e0>`'?bE_bjZi9L[dGWT6
%`iY"(pT*+^Bl]!DHX>mE=4c=mHh&Y4]"7_!ri>_^XHbX-lrA?jLn`Y<5H4U[*Bj&`X?ZP^HEb-WE&:^i]OWNhbke*Z>@WB[@Tkd<
%rap5"/aD\%]8rSkC8KAWUI&+Qm>k(O;JY&n9g1_0ep`"K7%]beQM\SE8U4fYHG&m'hju]?d@ItnO5Bgu.&M1O^GqTRm7rfb-L]i>
%r_hUTQJS6?Wf=LaFa`YQnTB8&;X,pc*o<GF(7qoETbrqoj88i,XEOA]0<+TpHQQ9!/'$-(EUkPt,kCn?XVG[O>[Mi(InpUWVC0o4
%8)K'jgV'5eNV:Aob&[@=:3gLJp-:>%U"Q#'1"hVAV,k8E^KIKV8,J@ub'1aM99n*>^Fu]jn%WX;40o/fhS6RKr2A.\T&=PCV>B05
%Yp_[&=.77@Hft9@pY1ULV0D[urT3RtQW\TTkMB"9^uG3c(WYIYhrTpUIpF]<>5.neO'b%R8bud8GEZQKEYt+_Xc6`QA2V^Z>I>92
%pE7$-IOEeVrUt!8]$c7$%UM;)=FSo%oTJUUW5H[#]Be",[G-'$LKTSE7r@9B^\oFW%_jTt]l/C,AI#]Z'&=pf]25=Or5!5dQHsr>
%^DW]CSlAH#q6K@[n(X=\nFcLUg.HGR?K9VbV_Jt)n\[;[67>ZhJ+1KJ7"6aNBroG6f(SA^"b-,QrO\`B5-bX]_&rTO-Vs"<=mbJ$
%@nCA&n_0c3O4W9f2)WE>DlXMO@K<J"6F613YRi?JIZ%=!Lg]bT8o:3=?0b1U7f3r"d44V9IOs"Z='km-2k0R1<;=;A2qdo\&+@YF
%e]N(&E2WSSrTDd40RW:hU5uq`6D0rqqbqo-=F+>25*WMp[3'bmea<s^o'!<-pS^qPHk:f:T6sFt\*]k<0\uQXIp(X^I.4F=>AV%g
%dS[:c6NFa6FB!Rmo^mS'Vl8#WSi51Bm8![0n%P17MNu?kf91f%N"=rQMUW,pTWK]t@J*F`]1;5bg=)MJpp(r=5?Rfseu1kVH15dP
%1<dJogWL>7h70I>7/(tQ4IM>%YVrqg?>MeUn%T.,hlJDh*dqrX*53thrO(HWD"5f[28P,"&O(Q2FW(Y^7Z5f,rq</%Zrq.2rX.]D
%j,fMM:;)W-FWEqQruP/-p1!^Y\3<J*[GJSK-_K$t^)aYSpYJ!Ms*.ROIX$t!CR4=_o<O6ClL(_H&h'4s=fo"*nRN]UKPKI/qj8A?
%i2JN)4c<V]]?bT2Z+/V:e>U?Yf[>srhpE2t<J,V*%NG(ES5f:SepGh.V;V1HLK&#*jnn7-ji=aaYOi%fLZR@P%sNQDb9]kj<.?lT
%bo6>BPL&@"LWB-4gXgce^9i/:<TdiYnG[J=r!ndA9!#f-n6B[L.,j:>h6=/5o_8ORqsUqFk]j</mVZh"inZ-"h>Q,%J+T&Y8@t:8
%!K/Z<_\`;Uj^_fLD6,l.(+`Jcl0X,#/Ja^X/Cbd9#IF9Dj.C[1k/i%j%_XPjNe"sk:&uO:^@Z)KEX;NRFZZ`/Zejm9cM&,Tq)'[P
%?XJ.d/HO#gpRi$Tmo=s8Zi0I?Cc=+V#oRk(5l0g,f'5EGAG/8oq7--?X#`e7Qd+:aMs9DIs5cS^%f`mdrl^s?(;IQXpc*o`5!/jJ
%F5;QS7hs0t`Rq+`RIfOW;,u`U!P^3ugEMj*Y"B7Y"LV)/n=I@JhgX&XMF8N-@Pi^nAJ:eIqR&EpMg_/V`C[Zgfb$=iG=2V%TOL;`
%M'TC7=P49?8WE"(`F/DPPVgkb;E*4'F;?;<$%I>OC1VlLh-'o^G>I1icXg=L<;sbDFX>,:2jP#.83bp[Xf-Ut)rY6\DJRL8hodoI
%XsHarm+*s=047f>It"+[j[_etR6O-<U$dP%(R[7b2A^'CWe:(@Od'4D5I#-'gRQ\TcKH4>DJe,#1B"$t0D[rQb`eBl/dXm:`2Y[=
%c]p#'&?FA[L.5kPMF/^nTVg\R@uXMdiQk;i;N[P!otqFtDG68)9e4/;,R$@;A)<<0,87EB33^"EQ1[MQ%3f%Xguii!P55D\3NK(B
%ei0#8GW`!4WA@GYa9i<Kd?qr%(\sBnNN.XH&Ttee`O-!oP]u$"*&Q78GBUe53+Va\Od-/*HQI#^^;'NSg:6gKK[ZCI3ET"@"gE@Z
%m$ZSLqVLU`8(I%:rUkL&jQAZ\[okUY4P`3Wh6CgZV*/jCcs(QS*b)O#[(Q05fS%uuMdO](kP/QdmIg5J(UE>rm-U_)bEkFDG*OQS
%SatN$D/4R_g\:c.gYR6@E/RjCf4+E\hqMLBrn\LS^TRL>p_b(%pS3'#iU0<l5@hs'CDg(]NbY*ip#j?U+p7,L/2OSof%HC3bOY(;
%b6%TCFF^](@sBEG[K;!j&S,)eY.T)XV2UA,!<ooZr98EqQOA$jA3g*jo5XlX7@Ae>UFp'<KOaCoaPTaO#F"jRj6*]ghVC>WB%)MO
%'s_e<W!o[*FcH_&gWJQ&rh]=o_XBhuM[,M+l^o7uhVA&j,u`KHnLR5nLrsm@W:rO802&^4+%apP%NQ&oSns#Li-Fn-\%,`"HM8&`
%4Ub9:7h$iDq&D_s:H3isa2,)SNurcshZ/NgmQlucc;s>cak[GcZSuY:rb0,d&#[`CIiN"Pd\H$696]tA+(joS<&W(F42(;5aF<b;
%BYAi*`R`r&b+q,2qk+&^3f2,g%^8_V\#[PVDQNu\qtmB$Hn@X<9;i"D-a/iO;;"-loKZPJ^YrDYKK[%\53P3!YI=<k+.MPLj%8i7
%A$,a,Uo>W!DdOUADU\nI*1lM7ek\a7H?a)aF.0Ho?W>luYA^bdO8[[ne_/!TjYsAehP3`H54&4RV3m&4r8_C3YjH@h9"el$Xj/n-
%Zl5OHdf8a0TbuTA)scPSn[iK-e_X4SiK=04d<B[4X8ZO.h6;]RN@N7)dB)=4&)U*!3UQ>3><.'&E`mnENII2)A`9cA+0L\)Gk&H:
%@.@Y.WbW+bTSMn89NQ-ONW$h#a&pr4II5tI@"%Lgd_42kV4B6_L=m+&mZt".KK>\Xf3XCXI$[!ufPbZXT*SCZOr\9R)odi'n'R@j
%0q7c(EbOHsB+JL1'-,$M/Ii;lh+<r3pgNtS(_u_9eJu[=6j#!ODf3C%Y(gp54KH3_&^"jMhKk/b@.E:N[/BK)ck^KopuUgbXkh;E
%W\1gN#IsA$rEAmiD)"%&%rXT[M1C/5[d?5<=$,=.Fekt-Dm*,dV7-I:h&2;+!l]sN?b]7Kf(Zr8r=&$7h-0h]q6lroY[cMd5R6mB
%G<m)!#0oM)on/N*?.ZA*rV`-hHoZn!*h`V"m(F>)\F[6r:"I1-VuCQ!?lpqc8#UbE([J1Ls%>@UaPMFsge3?L+Nk:6YHL*;GH\I&
%ms_FXmm!&ZD]W^:Q/D!^2/q@+IJ,OtS-85aD8:r6k4)&\j7DC8Zp<I\$L$c_SU'S"]D(a[2"kkFqcGo_O]?_lSVOTh$]>C'ne`rD
%k/Ga('Bg=e+--p#ll=>#21fQ8mA.JgJ03M:*OaR5^[c7?rLN1P(VL."Hut9B2]Lrp<oVr`ZLdJ_/UugPZSb<A:Uq1kIJ)XiE4(&m
%bq$$k*gRbQO3\olX.4eY00q=R^(*AW3=G0OKB.1@d8gb=;<Q]n$,t_$?QVGrefPAd"e[4&TY(ps^-:jY+5BB!+'R>3qU4a;bUp#Y
%KmE9SIs>"B?%)`0f0SKOa8"4u0WBQ9KpH'FBpjsDP[=Iun)8:EXe3gOLCt$FQ^g9Xr-Z4ZlYXY]5aDlTmIm[9iQh1+[JS"8)#AH`
%<?=9U(s_G<e2GtR[YCn]p?HTC-uZ6=?`lVnN,5h*o!Z!25$lNHW1hhdak-7Pg0s]'V>dGM]pBCHp1&K"(MnY@+3VR^XTp72\'&G8
%MZ3N_fE\jVDHL3+a^ZC;lQt4U\\;9CZF=@?mahs+9Q6.1>!qlXr-"i=rd*(mXrk?*Ick^T;9i3;b4AKQ%t:Uphq_s(enS-A*RN!=
%s&`XalQ!%)U[^O%1?T?MB8[;!]q@#q+()CX_Z"VUX?Gm_l7Y:lSit-ik3&X4+*D@QTJc$K%.V)`54[ajqYS1dR77#[Ike!hhR8d&
%='tteYq1+oB:&YG(f]VFN?5Pnb7'^].XdZpSL1l(><2,!ql[lnM/8#2hjW)eJ"',H%hBTO[Db4Oha*>$pp8E+H4h#Uc'pq*3]m.*
%#1TDU!L-o4(MpV;Q.k3b)#Q]"Y\suiNQKf@cgE]/]j)Z:r\gl!%`bD+rAK:RoOngQLH[PpLJL8nN0JgE(.3]4>@Dh8mX4fWoiZZ_
%>^Q2*D?oNgN/Pboli!`<VYd<sYgM;p#P8C=M\!5@g,F+!AkU-6eB:8=K8%9$*^A?\A*M[-nlAQn_&IlMZG-$CFP@k$auY.3g+/I3
%rQ2rQr5lRL?B1@Z^-S"rbUJ:NLt-DQ[QA\rqP1;UW41ae'YRaTS0P67j^dOS"5;_oG'R1R>WAPsOT*Gq1`?a0<;B%bYEhMB>BfPl
%]$QO]HG=9cdft>_g\XndcF\_7c^m&O5hGl#f39?;EGb[Mkbgar3(-,pMr+*mj*HcP+-jsQo_?D'(RBSZ)Z!Y%-0ocrduXs3**4JM
%#;]="Dc`89f>bD)G-']Ro0pFBl]&XAr-YQC=]>,^rP2dPDqk#L,SqQF]k.N$1iD>_O'd>tgmlq:DZ+B%"6sEofllKs.ct'No`tL(
%T$FHXURo2JT!pt65(C19me!9lrk3[:h>cEQ7%.U#]E8%;02[@30kV=AO7qj3>PFILL>S<C_L(h\`oG6(:irHhY@o=RQbKrCenZhj
%#'ulpcKPEBa7@RAl[&8q-CCVWP>@TDPc-XJ<f\'R/:Kttk4M@@p?J*RFVRqe^UM'G@Ii9$o&6NR:7k7X\<+G[=Eq+K^)FZM:EFXZ
%n+EC*D\qf8TD\&>GtAqNBrg9oc<3.j(`ca8"KC9SDjo"g#TW]%%VM>P?4d\ie5iXjHB">=%RrI-#2'J'j#`7?q@RiCS_7oXr,0a#
%1F>\dQgb@YclN96AaNKCkM\J/c-_/p;[i?HH>E5pIQ:[drILgicZM"1T*CiYFOG'up[>i1:Qq^,kLJV=m6Ar$qdY'A:&(jao&\RI
%HJLTR%ILMlo3QkDdFWSMOX>"4I.m&B$^CXg':=Lb8*.4nGgB7/bn'-(`=IIJ?G6]=pYW-4gf[)T'^[Ah'GfELUp0WXT+>8X>1Mb,
%m6Prm<R>)VF_RtS("O16F2@RJAG>ug0m[@@efT>3^[n)sUl34i=>-LO%$>Da>C'PW[pd5DQM5,adFT%FWp.)0a:p%,pV5:GH-uj2
%pYZPo.oCVn^=mJ6G#r%#4.%n>J"7V/mYCMUIFMV2_"@JJ]5gf]s.fRmFms)TaWWLWoArI;mB*YKQJp1Z4hhC$o@XLLR-#o&SV."!
%rfJM@K+FN^Poi5^4FafO&'hG#Vb,;YlHSdm-"s[EC@^fIdZ+ZdP.^L?8oH`BIJ,,GI>>u544;#U^g2BXZa&(p:!T'=DP2ifk*q&R
%p4tU*DS*R`KD41hf>WLo@C^BIO5E'L8hTQ1VtVm(HjgcFDaL(Go;_NW8#_Zh:Ua^9QNJ`5oVpD4T7!)'SA.1h]IDasQ"Vr28[:Em
%cOY5@4dNh5%P-!GKmW2>nE.p]`konk>2FT$?k53]FJ06$TB6J;,8/bnYVNqbS%rl-hd4kQ[=_9A1`?VbO'Z^T;<:%?:j[3Jd!#Q[
%Dnp[Ee[SDhBB/foFDIWm.hUDGs4-PHLI^I^g>mhH/]"gF7i1oN>BJGp<l.Zm1*Z"@Y]#;>/>f\d)784FXM4CI<]atGm+to:p:@jX
%Bi)TuZ2E!'q!9UAAC:m6YOjY"LZ>hANR(eoZeEgo06[PukI(7)W7+pi/#r+3<lqL^dc!dtgRZ'G?s`8$/"i-pNmk++[heq[rT.*2
%YJ0pn;'iu5-IECKbc_Nu!]t=dU$CNJd-$IUmKR\+)?.a^D3jIjQ81/;.mIEdNb0su/AD/aT'/nR!V9V+&%o"Vm^&C-\4p)n``jk#
%LBei<]@N'*HV6SX#=F(*mKn&.S@8HAcMkL"<dOsNRT#l'0Um54/%Apt9&6]1rkmIZYJI#kgL1Io1)Z!'SpR6i4R/.AL4:]0pj%.c
%_`htqSNq`Z]7Y9E/+?!5]pUa[m>ts^p=ZtOlcO?m1Dd';(=/B@FI(7ophDc*[Z8DGI`I[haXQl.WpRICKfV_:$4KLr;<R.0V9a'i
%]h*WYk,lNg(^geo>olfA)NITO4,;98AZQ<<dp`8K=l4C`NiuLImSN;Z?24>te*bNXVsO)K7nrFEL[RPS=@:ou[-d"gkQYf@*qK\C
%A-[@"b4rL1cM(8Kq?=@j?Qf(l]Cb9!ACPcJ2u)/G9Xi'[_euZ1!oG'm\ug$C.'qFNi6T[c48=O$ag*f/XkrE=)$?!uC^;]'`l!Gk
%FL1cN8s]9Jm9""$ob)PDT'\0(LQ+4=kT4n/j%F@(d=\IY3M,1HpT[(ge`KEhB(,#n>1btBCp,keGgk]5f+s-_4;\<j@H.6.g_k@#
%k+B_/F5S4d7EQu,HWVl'3PgbgDH3SX9&@/d&Vbc_,+h6tf5Tl3TZ;B*q`BC"@RC\iC3BhgG9HI%<coI0:p;9#keP\0*?q1Xa6QJD
%Mq@TI9p+l\T%dq=7aTq"PYGbl@q9go;!Ufd7fu+PPUt"10foK?LPLVXm_kS(:@OoZl#`I_bm0J;j6ju,b%GGeh/Tq(W]<8jB4=Im
%0qPQJ'`MFZd[4Y^n@!CKdgs`o`cbr!W*P12l!"kS"Y>SeFDFT3B9bhS]/jG4D"lP[F+G</;t!nF:J@q?`Du.g#I,V_Zdcq=ZoMeY
%a62s<6n:O+l<MPd'!d)Al2oUih<s4^.Z36&no3aUo?lH%Ybu>j`Nh3X*+"GFH-l&IV%q<6SL_tTjD<WCO*I5LUnFff=71[#e0h`N
%l7Od96"c<dE@-q>SDF6+S5Vl>C(jU)-*"<Jd$?_\G<o_aY-iV*Y:t.O\K8]E&m0Oa_ZEQ[feI-_cH^u@a^mH<k1E1me'@COXFDp;
%G'iEE/>7a4hV.98]^L%CdPe!\20mchj*>Lq)YSKJ<j!mfBa)r%r2aXd3TnkY=5H3kP</As@s%OEU$\;_DiT3;Pl(PWpIo(FHfl@u
%&gpHZYG/:[Z9;p&D9haKk;<@OlQqc=1u"F.#Ot9VN*reJ3ianVhW1Io3WL\kjG`4k]Q"1Yc44mYSAD%3K6Wt,lA<[0_g3&%0CoB8
%F(Q2i'XYK-PHM(23So[/[^/^V(OA^h%K*4_nD?82IM1i?K5a=]h@!\biqO/3!EOccM&c[F26d&5ik4>T%Zni0Y4SAl_@+NL3rciN
%G.WZi6"$<.LXUVKcKV6f"ldKI-L`ZbH1r_jb]a(b?Y)'R7cRAS<0t#rjp_njP(%sCLmu@02K*b(eA&T^l*3WMUS*jCL3RO(Y7%!^
%ToO!Yi0RLaGQ5Sn2KrP=c@KIZ'WJS4I%64>I%CdA=ENEq>^\CfgQ$"@`hi[=I5^9KG%ip".\4ho7/GC#Qh/TOX_+c3WL\tBk?7-b
%eu3eif.<"eK?9N*"f/,7@a4;/8,\Y""E/uR&*X'gOn4[MHU#\S3<W]sh/ce50%'m8,?;3u<o.LflG5=)4)6rQ8dBIVq^e<dV*X8M
%9YNa;XSr@b_SL=R3!ZE![)hGn40/UAPN+"6D0@%7/fGY\")qr!$<-n=<'!5\"\9J\3eMdp(lhe;o.VM(8UrMKZce+0+lbRmHJBQo
%3+dfoREC)bRY-1*p#?IfF4G92DekJhGGUjn#6lX$D."$b]e9aTHX#63(;2rcBdRN.1_SaqAQ6u/"l47[69&'3>hH?Q=+SK#Vrj2*
%L]O"p'h"C5KCcrmKKEqDI!UF'F"qF%93!g,_9>NnWA@ouj7],MFMo=S`TJ@>[<@GVpfu6WCX,OT;W?*Wp]otCqdRPb;IKJ$3AZ^T
%f33&jFKKg`%#jOpCu'a&CsYAh!RmEZf0'eP3B?:uqouIs$fVMhESd9JD$k2Yn9Kn8pmf;UU2"0[]Sk?DhM%?Ed4d[Y?ANk4.e@mE
%rjV/IVkB/fEDB2`$3i,0c-Z]2%Z,FrPsCOMB@)<'q<UBnAn;l\<dUEh$V`MG://p(&gSc.(t`N:k=i\ebbCHV2'K#!n]'.f=Q`j,
%(qM\G6<0q&9#_6t-X0k]!8H^q$QtL9'DFW]K6*CK#euE4jW*G"^c%]i!-rtKP+[`)f5mjWH)'ogE,ast-,W=[[*M2E9pi8Bjt@C#
%0ek:/RJH13J9l;\I>%<X:e/uDHtGR:=K4I/UiAoo>WYcL510\.S@/&\#)?<ECA!(IW<WmpE-cn(PbkJNm5W:a3?GAHX'Y56\@Va8
%4.C+kQe9^6T"(OKO>m$p^IdPk/G3*bMb@W0DtDoLN<R2mJjjU!5i+FZkCm^71l`<`!'E@6L]?<*I:[gK+^K3b9O&j4be7*i>jB):
%^sCgg)#5IBo`HiSGfe8eme%$JLB'uA`9Z6l&SGN$@TbH.W,q^q:]sn^!%##ADLgkLgH/='N*t&E85Y5hpF8].RR^He,J;A=dP><@
%.8+-CWd.5@)^"qOmLMqofL9,d)h\Z8V$1+7&RCKF*n^m^"]Q8D4Ack`-%(,O*c;HF"LbTYLD_?k$1X\(!W3T"eAXSQ@TI8HFTWdC
%Y>R)L&7hl,A6EY+C(pY!M5+>QblR+bB/CaCC^Y:00G93t:N&NO>>V)dg4FCeT%8MK[,;qZ*3*a>#BObjEnu<WmV*EB6uUVXJl9T(
%SDCjJ@$\PP2":LU)9&F+oL3t4Qjq1DZVh&<ARNkm44)ugK^[cC;&GO*`c+ci9V;Src,S(%50K'hYT2n`Qgj]c#?ASCWpc%0Z*KLM
%Y@'7=Wg90+S!'PM@.WSLbChT\[.+lI?<*2r`)rPIQ`tc-;dKh/*.8"6M'eEreOEOmM(39Iba$Trf,EdLNI>mliuG(Pc)G(jJ=i0<
%=Mo0T=^6i)$u=K8=i;J*pEW?OHj.\n0FCF$Pe!_"QK'0@!QT4['eG+YF047TWe/KZ"c$NYB3<"4<A7jX37#!ajXQYo0Ud'Y'eICJ
%R[+"o66&Z"aruYa=<iZj1g_^"LSZhIa=5K+.e+W0jcBYaXUYlI&na3e!HJc*U4k3le#aBY8hM^s"Qk>\U`b)(GDOqjX95<Y,7.2Z
%:Vqdg,Js9*^,A%C?JXDm-M[B.]Xq#0b'ncil?1if#)3e)KSX[RqR[I#;]FT]+hmq#h?qp62pn+X-OQ;g;d?E:gEZ37qA48NK)`fN
%q%l8H.<G5j<:]J!bo=:1)Uq:<_-<MA\$5(EfUGgY&/891TZ53;hrL"_(@,&Cps2q/aq`CrcS4Jr7Mi40+lbdd0kr`Jg\$KB"K'32
%o(CHLs3^\Jhl^=LJB=GSbL]O$r($&hrbhZo\2<-@VjFQYcM3IO0=kQiKOq,F7W\rT_@.A0)-AIA&2lUr$jmc#&`=U4&^1^HUW4"C
%TN4TV>;-jP!o&_I%>/G(%PCIT!RG/R-aVH90JJhQAOnToq,uol0JFjVE*/!,QZEO8jG!hPJK"ttjG&5_j`0@#A&7;l!,bGq\,rsD
%0)MnoENDVb5SlEhr)2fM%dOn3aEe,(HcRs43#9^aScf4j>HhQo_[P<0L;ne0_8(r`6p<#PfO`rl3>leec?!L3>hkElQPVZ@=Kj"4
%&Qg;uiek^,c/Cbp^nSdH@1OXnS5Vfac?J?]S]67A)5-h[*biGqga"EVh1?AEO3uq4NE-GL&dPTF9T%1O!=c>M"3*#;'9]T]MAg$W
%(DS\[3K,b/j`%k0K5A)n#2/Z>".-[^OI@/l7k,BSosJ%&PJd&bF(JHKWQF+FV7B3&DQ/o=nOmq7=H9B&iHh@*flBdrZKn"FqV'5o
%7a?:WR^2=P>0)_Rl;lGY:e_GO6T)rNMe\>Z+4ZX7mA-0jY*Wn'C:U;Jg%A8QA]mrYO<%-I+Bu"K6$@\,S6RUXe`:\_eQc*+GLbbn
%rDccrb@*9LY/b9*)jf*l[=-UGmm?7V>j]+;'[(@DBWg7X<mE\-#2SuXFi>mje&&KjbY)]R$e'60TH.-eD0`?pVNCKdB:3WF%1?[o
%^c@U:_c.@C"_RjQ>[^)N)p??2J.?S>mW('"TT_[0<t;A6g:5kLZ>hIhK<$OR#M/q`[FCM-PJI5>il\3?E"0#o&T(Y'c!u8mDR=Ot
%QXBj]%,.q+E"111<JHckCOcT6[:/0-0YdbQg9@k==MR60g:D;[(ndEc>?;<;!BRa5Y]=[lYfOA\X.1o?JPHDd;VAu?TS':=.L4Q*
%*F*/R3Of9,j6F]#oXg%cEC03o5edU@H@L44_/8gXL!E*-6TqKeC_W$=%lT;KL5SB4(B[?*RkWEI%q4-H^qWulLh!9n6/SIPa9*!;
%EtO:j9LKi>947W'HV$pD*:S=_lA)BsS<m]9`e:MTM=_/V&2M'S9M*)/JV',3!k+(BGG@jV!@a4I)L7QMdn$c1H;_u_TQl+l"N*`t
%)#t>O=YLfqA:an7a>0KF91a_AX=%'(V+`EBN#9YLkm+!_Pk"ggAL0V:C;pd3Y%ke[JJ!D:aN21cAJ=r7!1BjCY8?$sZ?g0b-IplS
%T`9]>#XDiHJ8lp))^*:@%N(Be#nt3%c=Kri#FJ-/6YNPH(AqRl'u3qn56rK:)h>oUg(&Xr:OZ:lODrlIPRDn80a!RP9`g'8Xtkl:
%eBS7F:`QSjKglR!04YromVDoG4H1fdD@gGYZ3CGT3"m>7N!WWI#0*\,pC:#$KU"=Wf.^kRdIeMfWbCBc*g&%,lZcms35A3&A?7Bf
%daJA6+G``[*Dl5lhEXK:X+B53'Whl\o7bOnS4J,EJBA=1;"IYgp8*nU\/8"A0buI"<&oNtAh;&'6%S63/<*XYTQ6Ea>3;;P%$6rV
%</1m1VFnZb<X:)VU!$>]h''ZY<!E*?S-hREZ5`sVcl^(B-WhWU:`0&+(hL11@4Xo"I[++K6F>dpBt&US.L$*"r_)[;.',4riTPhR
%c^^q;.?uRF!Y$1sno7`s7017,q1L>IU`+$FD\\]ISL[[QW!0P;((#\kBAi\HRT-,1#;CLQ09mSCJ;""33`[e/nl3pYH:H//_qO.?
%_R(6Ii!ToUs,A@*fcNV=:8l)+K"+JY7Vl<q=[d[&,guSJC*3W"C'>YONFk3)HK%NC.WKn4_Db_tpZ:`AL/m*RL&hr$-h'j@I!WY%
%=Pa;(IhLBX6BeXjnmiY2eI*^Vo(_i>#I$$$,q+..I!#!p4Zft*]`K$J'.ImNjhi:1)RE#:HW?rm=2G?gmY,S-C\i/C",ZJq6[UN@
%'OY[Eh[pO':rOP=jcl6;<ric9$Rb";#n"[O/t?DQf&6.WTQ-XAOXX$iAj8T_hRDZd!9RRdr&;J'jY-^;IWL11pRs+9n4(1pBu!#]
%kI3)IN2um_Z15X%`9rA.MJtsQ"fu0$ef$*`ihE2G2\DT85ij6sUs;G^.$S"obUlCG;M,-9iOmYJ+8`KT!'jc7(#Xb8atB.Yg,RVl
%6"NAC1;O@P^=:57qmid*`K-79b?bFhK%(/MAId*_\K"k._ZA%=ah9T.'Mot9iIhVlORu'R)0[/KP-U%?"Gti,,[kjboA9g<P3.[T
%+!bT#TI*Lq-rokr!idr)RTOB:C_fk](V'MnA>T3FaM`8!oRFl&0[uJ1$E1fMH+68.h16;aoO&(o[[S;):e%,[.e7jE74-Ls6Ol,4
%<4eja.],UD6n4jdH+7f[cK$g=Aqq=jcuu>^K\.hU]8N$sI$>ceAn&Jhn/IQj!@9N*3$BYio]M;\[A8q=6G<)0)cctSEZQiqR0l*`
%g^Z#s[)g7>mOLfB0o#dsRro+r#Tk&B,/,Tn/J>oZ'q7']Zl9Gj,nrO@N_'"-D@U0&K9$nk\W4L&'N5)66SmE#,Z.8QM:ou&iri4m
%%M7%95jI[:(`?p7="P5&9>Oa"$7KWKgaj?gf$g.oli@q?'dU^ppddD#l*\,`J.L0CZ!IF[h>k@Nh!ctGU`;&hq,*7"JM)V[mBbG]
%O4/Q3!ZGSc:<8:?m;ZQd%[id51Tl^Bj,RZ_?kjJB;@Y<l56/9c(Yoq]NneFrdr(*GapPq3/=V`jc$e<ZagaM&@`/R9'4M>DW[*Hr
%bUH@@Lu/"Gfo[W/!3Qc7!"7+?=>rfbGAAb!W[G5GbUpJaXO37+2Zp<.SP/>VVK*Hp&>4bD5lnMZV's7k]E$%Bja+-GKLcfM76Ai:
%,;_rRZ4[li%?P//-uc%l+_W"EO?q?T@V)Pj$"sp+Os,Ni<C;kif*cUVm(F76[Z0(NY;Y_p1?`/Z$gln5^5,s&E'=Ts:ZsqA78]BF
%rnMG#pZLPJhOfcL(]dg@/ifkLrPU$Lf.":/Y5q)<,@>PK0U>JG"TsVAJf>PQ^?F[@&);aC(h\;4!%j0#QMeNo/0sF1;.*6UIoAq+
%7tI<WWK.FDM?\gc12[gP!A.bVEhe^Q^PY_!;PM?>Wk71-UN!afXk(<F'iS-GgNr)CdY9cC&a,fPER.P?!c_3.\=ukn_Gn%"BuCkj
%JiI6E!0uMX+,*0n?t*Z/77IAi;'M?]Z%.V$+TpFKidk*q"CNk,O?t^f&6*\8]&NMGZ*_fM$Hebm!=(K.C^;4q;U^7A@%$k#-sXDj
%Yi?uk+u`VlWA]\D?KuEuP?U^j(0">OC]Ms)?ib4b+TVrW*cB>8/-(scU*,>H-/cs6%lRr2i>e8k,bRRG8qn%CAm(8<fBWbGJYoJ=
%e4A9$M/jqAhq\HbEKOa-^rIZLkj4'[`+$P<0S2EG0n_!%s6(n>%5DmoRD2T+3!H2q$jH$.-WX2_!#=#sJL(=!J"EF61`>qH9gSCf
%A2((r`3:`_([>LbJM86",BKf@:c'VbiBA:K8sp]poUS77qITuLda6]c&3+Y`q8j,!_)KQp^XA((Jh)dW>7@bjZoS"9/4i4k@6atF
%.n*<;*+fHV=#VmbQAE$S6"hDf0Ifo&CGHZUaqD61$nQ`0PqlmG.;d4j!6h8W;Fm6f74)BF.u^=K=!9:3;*p=uAolnZ$!CS>jL!:R
%A=P(W7!MPGTOS3mlsWurD)mOtV*X+'D9Oa;BMk9SNEBp=U!jTW7+C,"+H]0FJs_7`T`K10")\i!!A3;+0V`Tg)@.hg.fIY3b#/uI
%Z_D(noU.^laak*H;kY3nicEcj#(rp!cU@[S$NmOUXV-GE20:GfKjqeXH,V5^)^/Wt6guLrO-?mA_'L!ZB0>96.1MCcb)@5U`\@6@
%;Gb+b8F7$9KJI;^1n%Dh8Le)f/"-OL*ioG`.UZX"M,dqK`N\t'^0!L`d07S4]QCKRK,e8`KFY!4QQ0D%J450clSoNt.;1'Ji-32G
%djms^7)ZtWLPA(spGE3YS!!rK!aB[o>QAbH*X7WnMHjVk4SlZ9_WcY"M4p?g2"Ge$C3'P>d$^=N/FM:0VsO>oF&i"d(VtKV7,f!(
%ht;\CWLs#Tm,NhP5fWUO+ET)t$-_u(IE"5t)!F&7aRaurdLoajBT:h79?!-2Og6*/U<G$:!VeCBegs_/3l1s16j]QGRPBM.Qrg'j
%Fo36pM9@4[PbL3r(/_[d&<u8rhVq&J&IBO@p>,GNiIi!t\\u7"Dr<A[*>+-Vlr>T5CH<B$`Rn]P&HUhBa,Ym(PMpZb$d]Lo6l_aj
%$]BoP";W9k63YMj&r:E:o.3L1=b[8^QR;fu9lm/92!9`m^4'-;4M^4nAe!9`2-23$WeHGPQ]QY%Q4.j>0*WG^6m.#o",*p!J7]*S
%FNGCJ#[[%O&T\rfo'_lH63EE.1+88]:DONOO_)XN)AmGCCRPf6Ml2tKRY"@*`KENnl68g]C\M%C9^Mkt)Q@:Q]b)Y^F_h5&$ZJEB
%K]@d%3'XNNG2Pc%m"<n-#Is^a;QGll"sYo5\VH*.M%=Jg67@A@&0Z!!5[iYY_h_q`(AKRT'%iF*7$K(jBpd5@aKm:K)"hH@GnSI:
%9;n"(NFgX0;TdPYWmdHkPsogo$_D*q'nL(J_6`W.Y/&&/9_"X&nK[/:6q@Hip&C$a'B<Cn:aJY&`LSPf.RHV7I4PcTQlm)C6:_r+
%Ob'1h@pa,-2eYBgW0H&41aLI7+U:Q#,E!6PYpHG=Xs6aY@iEUlOX-3qj)9q,3#$?YXHD@BJAFdR.W4X`.)>3RnX/H_dm"1Y6;Bq-
%"bG7%S#[!6Nj0g#//9N>$k/+"]LE"Q)t`5G,tJfF"?CAg6J\@Y,^NiH^hYkc)F44VcBK_T)BoQRq(rLBJ]KX3FLTX$g:^/NA^IOT
%#ZCI:?=cH&3sVu.>.ns!aof+`gDddX,CV?&GU*E]KWuf(JN0"8=GNs\%SK'K,fMs,448`5!(\"^TYf>NJtBi!*]Ja/7$^@=/0G3]
%oJ@jVHBE5HRf'cDQkV)c*31QP9"o=IeYsDDN"st4<Xe8.b[$A`I\[sgLsbC+>]&+=d,32q7EPBt+A8qh*9IhdTL^R-_(fHJ1<3d<
%?pdbV!+[8G,`N"V$`.U#Z63*jA^is^?FV6.+pC,0!b?i`ck;:0[M4ne>gpern1)=&Q$tS'd<hT96q4YW"R_#L98Ge9[@K#!eX<]f
%D."94$kO'JBFKDr_;,RiQk;-(UF7h)(5:P:i2k0YRtq5Vb)S;D@$us<6O:7f)2P.H$#'\m,tf.NZ`Qg\CNn<KK:DSV.TE.NpC?<G
%?\B)5-l18DBIuk`g8MeEFL&'J5>.'S!1E&X#[q8B!<fn)Ahh_8J't`(?s\u3V_DL>-'Q^&ck'?E]$3hJThBFP,(s0.YT\*s'$q7B
%8qo0g<>.qQ?am'o=!g_W&0\Tn7W#[[V/DT;Mf;!pdL^D\0AB[?CQ!7"-HipSk+uIq$lC?5!^NicC!brA)iFGFZ3)&o_L,a!LG?-_
%TMP+!+f-?f5g!a@UB$1[84iEi.a_?A(1S9-e43EZ<Ubkt#$jTb@]6fep*6u)9`oIkgDo8s:ns$c"'Lt(1@SIV0'<spK7\j)[N4cZ
%KWb>?#jpqdkRRhTUa;%6La@:uL=^%5WD,uPYW/%D6?'7F3)CA2WB73@!keeQEM_&>kF.W6]AG?o))tdIC=@c,9bZT+W@E@m]n!i&
%8!r\h?+SEc.+Tt@Y'qdFKFNl=Yeh6*`GSIA8f.Pq=<u9*PTrq*\<LHr"glok&Ma>9:1b.nU^;1Lk^`;F_hD*\KX:lOJgl\Uq::f$
%e[pDB_-!MW[a=B.A!o)'_NK=LnIi.*j$-GaR5!P-/.s[8(..,1*YO,r/0IL)BHiS#Q8f;B6oL.S3>imkUbkIT-o5V2&!ii#OV.\?
%X$?]YCmlr0A1AhGjD+En6RE5,`F_k9l<UJ0R+pH^,,`Qp$12EGQ#(Bo&fV1%"Z6Nt@[F,!j@Kcn0CkebH/i3BE<:fE"X$BKka=gC
%#lkAeXYb-9#Se`Y8Kb#i/i$$kC7[6C=js)'8u$+G'raM'Y<"gTFA,eTOkq1Z2[L^*YI*Aa&lG)B(?205>jRA+6kZHPm;.<X3"Q2p
%)_;bn5%5,k6jRI5$UWiG90>l])_K%p5VnmoL<(!=7L]L.AJ%h(S12dQ$Op;Ic)qQi.b*peN>9Vma%/b'46u:b#gAo9.t3_PYu>em
%A<:T8bDrqh"-G>^>F((rB#@O1Y93l$0$I-ZENq!E&;l)j5YE)p'YJ0+$rc/fA;60L_;\u`#m9^Lg[5qGO]YpGV+#\BcJhE*BtcHu
%>jZu57rmu[REJP$<d(L;[1U(PQWr7A@H&D:XlXdOFtB>s_;1@1mO]OdIGc7oU0&j30rH^FEO9C6UoGOc9`U'tZ9cCGJCNmB.18Hg
%;FV)uWC/3,/5g_75.(b4J<jSBZDEX>kF,/[Jlf3/\6A%s,3j+[SfWst#C"KN?:+S"dkW$VT'J7O$^dRqTN\l*;OCVo`jHY<W.YON
%J"nD)>S"Yn-\VW8,bRo5M.h\rX!LL_CL@.fU1Y'9Ra[L5.9OKN7^MA(8`aa^>9bLePqC&,_'sd8K0#N*jq9"di?KAj?ue[Sj^QGr
%92AV<p/kZYM7Bq4!eI'Pd/-DbKsV7)@^$HmW'iS!.fbHi[`@?qY/.uX'el,?L/;lS9nQjQ`K_j0&2-J^`SM:V!A2-bA4g?G`\f'O
%G#t67dR9LEM)l]S%_No4+-/"&U`=rsrA_2\4C(\=A_KcWIn_P!3PZ>1RLm?Q#aJ*gh&IsrL.@OtB9Ef?AL;=LYgDI!7uNT8@<)[r
%!eOg!V9'pHi#S&5?)!"Z"KR\?NM`,qV"/Z@C@c#A1@.n[kY%I&dQhqa.1`<i6GBa*dbb?fKg*Sp:ITU5@4[7>^a+_7%j:ta1Ecrs
%\VJcX`%fOf'%"L3Ga'!l%?2'd@[O963YmC+PPHI8L1q'UD(*f.nfVUESq=<PT7SSGVE*8(neJfHS)MIA3X83/e6VJ,oG7*uCQ6_%
%g8.#3N_Gii=m<D3_[nbcd6]q4>6<mU-k/Sb2?7n4i^\q-Zu$uqJl78KcSVFDmr-&PC)37FMJs5u77fdEJMNu)qV7,p6V;&u;kg+Y
%2.$R2WfNs?YMg3i$p4_A2*tnmT+=h6GL2W&<s`5e(q'a)>[oC(#1oM5X@.^M7)@8+`[aT30I7"KPfuB`'JMXs'"(%.#_Oa>OYRJF
%T$/Qi:phhXj^fiKmg;=mVEb=$N1)DP-<\rbEn1%-!s?jaMA:=rNA"'OWhY1b-r9dVi.RVV;h$3V_UaUf%NOi^+W%8tjH?\K9Q?me
%7&@kB"W[!,_:;eDJ6n-CKOfqKOC/45TL%`JH")uC+AArU>!TaB%>qSb8Hii91g8J7-'8W!MGBjs^X[X=TGf((T%TnlCM\bM>U$(>
%[U/CGjqV&Q'*e`'=GA?&I0YQY)W9D*GdeC5`6F[JB+X"]fe`jt=b^=;i;kihKEc:$P>M<_R*;C7;#i5O70_@*K$5i@67AI<8Y]F2
%OehQU]BXKlYqPWH"k2ooW3`f;-JL(`dN]/f6Ao?-()ANX."7s3>W&aLj(]$^f3M8#)Ml?f->rqT*-qmS")^rOn95_+*G*UD_5O)R
%/^bTa&1G1?K8*U>6^s/=aPnV;K$dR#TkDb]@Ph3+8OuLY.@AOcRVtnL?bP>8S3.@\>EG<EF(+:56"o.4=o]4NX=fToCd7B'/]Z6q
%k<t6IngM*R9>_0[+^Q!NTl[k$&C5u`\GLu"AfrKn4?5r@G_=#Tkr=Tc"ebuHUBZ<<;AbZ7WN_%cb`kVI[fi%\.>ae/ehhDI]BZUo
%jH1W3A1kEO`.aQa[-khRTb<K*^N0r>D=],i[h7JK,L<f#^fVRI5tIC%IL:VPTp:_V%eM#AXO"<t:cM2S%Ds(r[n1:)UedF=5WY!9
%OUB($'s#8LT5ChMdqDdA,cQ/3YM<NR%*M"LoTMhFY;Bj-Hd5&>+fi:Q@;KlV\9,'RC9%rlZ(Yhg"61[L\*G1?$Hi\fV<E!Zl+6rO
%.g83V!\g;2]0X?T_GZkd!f5haQNH-:)DK/^1*H?+]IU$>$#'](,uY^V1Tj=2WqT_40hoUN>pQ:SisCtHM[T8V(I(e-r<-)9hg'8,
%QHRca-/>,a"nJBk$^cHgm"KOu(l$7%<*1jKLNqP[\IT='ZHQ-BLGfe5/LN)DaF[66PYVCT?jtX+9"=GH>#,q^!A2-bA4g?G`\jH;
%rN83613n-J&^p-AC"o975'@N5aQa%,*]XbO)^9[;A:Ra7Wd?s8+JAtu\?1\O!%"'Rr4I,Oh&Q7#9oA'[N9p+3:tEEMhU-o+bQpuf
%&R2=]goSD08..4/Z2_g1_[T5.gS?YoQ7+P(?k>TN(+BYbF1X[<BF.-S>7/KPNhhlBi"c,]jD1Y[2ZQosVVOuWY]!hBm%QL*M&*))
%BVS]qM'bQ73A_+7BPF_mjF@jpoaADm5XNY)/..)E]gGkO,BD]m'@B+[FOprNFtiQ<_E\MQ)^p_`j8##MGD)_%"R[p+\et`0d7Xag
%'g)L7g;&N=6t'\kZ63,@bUA#Z(M2C.84a3-.a](_(1S7W1TsC3lhEQJ&DfN#F[W5GPjpYAfc7!Y$l@lY*2tW1Qkn!>'gKh\,3\7Q
%\9)NHIF#c)!BN?-ltBd]9>E8f$V_*A*e2$l&mbkrg`co9M6"mTpLMVPl!S3l$6Y8%C^(ZPo"Ji&Ku!`sn1#>^S:\*NS&,Q^=B8uY
%V0qs=WeM_*gEtG%[mj5h)CEYbk"thBpmJYE"_$aVD[=3!aG$O$h6:\2kh'oDa)=eD8+J-4]VJdl71.HU2p;ZUae8IP]@*K+LcUi<
%!E3uafoQR*!aJZqpq%i^PYRT6;-[lT\Z/pY*/p5oB-Ne0l"pJ6q!uk:b1t0I06<ae+KQ`L$jMpl2@p%ZLA7h[#'9rBO;-kbNWE0c
%bEW'j"@chi8>JSHdl>uc2'!-'`Q<KGaRHWU6OAI&QZAJa'Vm&M'O2M4X#bi3Tn6>d1:[-HKVgN<q'+g\e<Q0"1nkF''QrJ!nr(PM
%0@<[BI?3iT-4&\LM$$G'9\cp)>]ik1FAMt@@ub&Xl7!!q%PJ1+i1E<Qh@s(V/3jcGMps!\'d,,P(cqHU'/#*.iY817plkd^Kr-l^
%U^@k7X][3;=.3hL5iRZsnJsXY3u-_-XNlmiOn3NYk$f,E!qS?S(I-%^nkEE)GT?0-r?@G/!9qSFI4QKt0/tA%Z'$3gaq\4pkf^#r
%7>+o3W1ah2Z<:;PFu5F?6l%3B8J;bmXtMDm,"gM%I[41!.7d)c.bHLiRF,c4;SIle*Q"eZ*eNs*fF`\&WfD56<tS3KJ[h8VJ=MBf
%A1f`**nc5\1/m5acbHecpa5Nb`T4a`jf8gX8'2F$lT#QE^I5d1O`Ek<WPk@(B)?EW/s58E>Ch.&Yr;%qjbT2!%#X5l0/3N+%"kFO
%CTG@7(6FA/N-Ge.(/j%%ig_5[!'N(Km#gq;<#XJ(>TP=PUbj@D-PRRD*FuNJq/k38.aV6%+t^5;P#WMo-XX\?%fgm=S^Y_!dhA%t
%o*Sl^.TJsCPNKVOI'&(nO'_"a&Ul-\a#R1@@#:>l"g0N7GHsW.njSDV>HJlQMDnG\?*89W35Xe*5[87Qc4qi8[O#7-9-0ThMrbO^
%6ct!7H0LOs6q<'TMff1P>VHVs?)!!K7a7;ie')T*q)Viiqdc[o$hUsLa.:3)kphMkS<,PWkROob62?Ri]Yfu%kPp#*1((\L,RBel
%KjpXp&i>],q[d6uk(V2MJFFZrpT5iT6@]j6_ds;J))W0N1h4b,U`m$/R8F#oMFgZ0(fEPhF:,)N-%PQ#[PX:^>uSntn;;(B=1H=+
%Vr.4>;`,fRDu8XhLkp8UW6(iSAGQq`'n?i^0'Qa]I0[jC<A&O=M[MBp]VGN\/E<FTT_JL8]gn':-d?mPPL:"F@S=@#VL]mXA&XNB
%SrQgDG)%WW'TuH:8LIl]h_BEHiX0CQ0_=(5TXJnjTXsYP%jto`U`enT'BL[[&K-Y<$EJgp=,8Ij1)XEfjGPoq-aOh$MO3oW"<7h\
%,V1ZiRQ&L4B*dV@CcW,aMH6M1\MQOYM-(=3:>,aRi]+>78@h>mBuZ@B=OLlOD+uKe];praF]cV"Lfak>F0/Jn'65GGp-e7k:1iP3
%J2C/GHuW#d"3f1]CchueL`.LqnS^Nu9RTk?:kH47-c#U#1_LjAMZTB,"ej?mT*Ab(-5Cl3,UL+^KpM.KGnSO<C^R$rQKDCMb#e&3
%/JdVjJ@Si&Qb8"Mls.Du#8:jP/2eI?d]J5r$K_13O3nnK.'J)mo4&L.#tm%$QI$s@nMa&m_PfTbe<;;&HAt?/&HcJ<<4`7._s\?a
%l"F7s)0aS>8Y_]B84pFmrK[f0`u<Kid8'gRh0doO$;U^>5#RD3H$I:EV2??D#<)b>Id"<Bmu+(rI5Qa"j?-Zk9;@I]Q\-r>OZVF@
%U?59t`8:WNia@4/LYHdW?PJ@GMD-WUEt]Ju[;I<-h@(;DYN(I.b!;=XF70+nAA1J^O=PdW`'Bsb[hr%WG)ZX(661QV8&b%hZdU6<
%&f/KPgOKGe+brOH432\,+\0]?G*#."/UX?6Z*Ls3*29VP5#Mln9Z+W?7qLZuICD^\T^G\(^9e8FG86'cdq2%\7fe_>p:&D3Oq>C*
%U]=GFZ='sKBKE_ski1ssUq+oe<co[eHj-]7PAjk5T^f$Cp%0D/GP*DXll60g+`!G!5o*1#pddEPQgNiFh5Tn+E^XXTRo`)Y,NX`H
%g$7Y.>'Ig`FX1g3h44sNFTV(S,.%+PL?[r/._@c^0(,nu=<*9saB!Ef@eD)f.!gHAUcOA^cg";\/WFAm7oIL]n@-m\cfPXT]RWWm
%*O`s:^_&TskA#Vn>U%?D;a>NbKH(h-[@k\M+";t+8!P#&"ZRYqC20<gmk3#L&l9XC1m>d1&9aNPbQ;%E!f4?-1rA'Z!GE*nK-Flh
%JRB;0`uTT6GVg?,/7[H^AO37_R8F%U[U:@r8BGP0<MBe'=c@&Oc+GBgYN'PD\g0.J5](:gM+IksS7d^iCZdok%XJRM%VmRb&MB4-
%CftudBr7MX9j&<gSkiSe=@.-AotXaY%_XRjoXB.7!^g29]P"5A.fIS8P3RjMPc=sW'><a"cYCYB(:DS$*q-@AlIAJl+VObI[oKS[
%q`>8Z+VjsQM=p^sId<Jp1Ctd]fZM-Lr9@E8rFW)&XCIu3_)!_pVLa#d:@XM4=!,[K?YQHF%l:Ctkm&Fe=t(F3rD'l6ah1.4KZeSu
%1+cDs::P_O[sH74@Hsk`9OEEgY+!p#nRLWR`>A2an+mN""KJB:1!ZMb+P"epg@q]R'HX"8jpk2"Na,nj@4qT-O,N:m2@ug*]uH6n
%o''t&SPV%sHAbd6GZPE.gZsaZT&1sI'$%%g`A#6E-6VSG=a^-QFtgQd<ik,-_5V4F?3*P(;&?A'.#lJ%'BUoF]WG+BWq";-O#"1U
%Eq:D%hNfUl")a]eUmia2-+S<)0hBfr-/:V:BWcI<jqU7285h4gotuFEH9lFT$8ct]EUt@shY/?)O**Z@pT!ac57anMmc*AS!<%^6
%!n@l.F'B>SZoI\fOtbpS^GAkXW^jh72@#T)<>k*#nsCICPoT(Y>&^%'a[aV+%MF'p8G$504\3F`rR@n1#ZUcXgdcp>+/j50du$-"
%Wj0IkX6)AhWD7.;jPs.JU8]1la!jOC&9AC&DkN?^?qqQfX#f5TEqQS\SGHF#k!U`&dcTFEO7>X\fiRjajtXSn,<7MLqf(4eel'8!
%*oeHAXJIpHL6jsD(,Eps;WiL?GqMZ/@S/G)P6;q-&u-!QTHZa9Ha)C<^0^7;\[&I?W;4sKAhnF9Bui*P7:r^t_h/h9j(2h?0JfU-
%Z;A<qM#64Dl&hPPbjKOO[Ygs=hje[LLs8-GN,)k^Q=Zbg19R[7gQ@2o1Tm&:E"fEcdt4R'94i'f5bM5:E.F'm_!Tol$`aXK`iYG-
%D,&:!oanVj<?+o[&hS7]c7/(Mk^eOTU#rXKY*e,o:FS,AI0"6D'W,Q0l7RfV.J'p2HVRT0a5]A4Qb;?J1Qi'b'BW3b#UGf\:lAZI
%*(-C!^Y608rQ*KGB4<0BqrYs*mZsQ?K0X;=W*M+`PhbPP0+L[5RJZ,/"55A4+_kEMX6Q'n%!l!0$Od_:>Rs<;b6!5eBBYm##`KLO
%68"erA<\rFV7PZ8U;m68.=-T]6sF`;P$4UQ+p+_WF$J2B5"]B7`<C:%U)SY]5cMC8dKV!i&pDho9QtcT'T^L6.OGWAQmkU/<CA\W
%bM)aF30eIg7m`WVIhI<)FjR0S^2+#VN5Q.dArdYt2DA/`Q>#q_$f&"gOjrr4+spHqH#SQG+^*'RV./E+Xua9%'8e+qP!b]m<6ZZ+
%Y#dLnUo$(SeJ!'^]3]J3/J=UXDU7ZPMe35o';8`ri;md4UsmXhkJ1mhUZ:sq2@`Qd%NnRertlMQQuX=u/etCX%?p(?#A1FVHC1M!
%G[NE4@DH#fJ\\A6@glMIG$l*E.DSQX?iso<adh]ImcX`6'Am^$e?C3$O&\\-+O3rgc2'16?;cqE;"Yk[F)%(>TM1AIS!?BJesQb8
%g$6fRBVMS`!m(UXLD@I*8Ml!$V'Dn/\l]Fj3_j(Kkd8\&!]*i<?6.ISXp(#<0)RBo()FRoHResg9E[.8P?/^FMguYU7$6+mW'">p
%Z](5AShjk94E.L+K.g[,Uo!S.'?Y@f'l4q>1r,7oI0H*1+.)`mr%"/Mf2]e$W''AQ-;bN.aP9'l:n:7;1hpj!`fm?@>Z_<\pumGX
%3RS6mYC[VgMK8>(/6BY51UeH>eBEBGg1;Qf09BoG1pQfL]<#PJZ!.rlk.J1acpn1D*TECK$8dN!?HSEu((ct@X=;lkqTPa%/fIKB
%16[KV1bQ+p/h&&.pR*O=K'$&b;U9#kA-&*"I-g1b%2?)Nc)Y$<\sRQ.Je#cs@crD6<No`I&rL#-W!YGdC+3?J3RS6mNtm&aOlbdW
%R+jpS?XS/^'eIt'cdtgIJH4R3bc)![]/0VM/FWe7T9Gh#c&i/Jr)ld<)J4(IWT2eX(+(5cGXF3!/IucDLZtB2E-F]@J#`:NG6Gm0
%YAWcG'7>0sk$9B`A\UEEot"un/#?R0f7e5,/`ZNYGU_;5+U,bGr,;>e6u[JD`nc%OiGRYI!9b$i4oO-HH"4\jilCtTT*1)/m_>^a
%h34<eG.2.b&U?RIDr0DedOA.YmP.=14`g/_j8;Lb.p0mfcW'DV'iPQlG950ajVP%$+lbdd0kr`Jg[tpV%!dMmYFj,8O4KBjG5Ym]
%c8iRcrD^dd[!ptPf.Rd<J4is>k5.Ya(L=7gAgs8Z>$P_j.",>%K&=\'cHcW6McE$fU0Psj0F)a'VFGnEms<!X12Z?iN2A4<reDca
%?aZfM$k.3)VhsCLr8Js7OO:%q3#mTE"#*?[jacc;]3=$`Zc!Y]A[s*[h.$NYkAf#Uj83T.[X_+;OO*/[W]sWH%+**>*gkqB,iI`;
%5W;3%#tN9,2F%Kb?RDIS\;b;*Mqm?]6\-$]=QH'-nrU;D_Z8kaJ_SV:S:iGd>D61nqIGXS$[DY97!C3E@=5JF=Np`9[4+l:W,tra
%7]L9u>/4T'KTY&ojlA,2@T/%R;!`NEE)%:=N*//$%'Wig^:_>.@0)9t7/1.rSgt34C3@2A&;.h0Z2qPXpu4T&PE5s<_`b/c,rAN$
%=i14m0Ps2pRgR%`c5VJms5AfEc6S>R-RcQ;9@X))15_j&W/iK;YrgmDA"h(K5aT-Or%6u./-<(Z/X>c]g4#sFO`NVg6_Kr`V;.)e
%=ZN"6=Q&>G@U^[>)\gJ\@7A./%Q>r)/&R7&R2g*PbZ*;RN#?.b1hJ.?YqZX>$'#m6.lq:(j5TH,-AN<X1HF4j=g"c*KZrLr6Y*'o
%<fG6hG(O6bL9)ekal.urEXZ)j16]TbPdt@-OYWKD%@+IMQrobB[tA8+e#0<]R>#O6bAu*4]Zabf!Af@?,%_&,$(9m)WFKNEh%#n8
%QnVAnKC4E;Eg;U4*:EaEYp3lcfaXJiA1Mh8OPShtY*)iXbiE`\B/t^JpmIDb$)!\i=og1,lpe33V9:\7(NH$!`J,lZ4-HI^j?dRt
%)UW!%X:Wq*L!l4C#'P[e`oXFXq6"O\S#cY%3<I7ZGB.BT]J>^gn)Vj2>T(\mGE=]/7Fno\NGO,d\C\1&P=#H8E3F,*-\hoO.mr"`
%:(@`W<C,=3ZE_X2F*Q(:Y1!\6E"4PT^ia[2i4Lh0Ja;CD^j0K>"4uq/$94plD;a,.$uerZg;%iOBOJ"C.g+Bhf"`9212n7E%@kJP
%12te=dXSmMg;pTL)dj.Y)0l^t#0mg;2Y*@X)L+krSQmTcn#$ZT`&##ieIL]ehuel8]f]7EO,;HC>Wt*aE8HccMTaObKLNTs+Y8c1
%*>j^B@AW\?U3WV0KN,\.5n>/3HC;Dl8%bZHnn,.1n^Q=eoU]%uA@c%$Zc[sO-oOg)Ed&:&OU9m48AJ?7(HuK"WLSOP^Cl+?5RNn6
%IuJ;Z.UE1(JM\^tW9!A>`A]j.Zk2.G0d<gS?\p`4a,tVje!EO@J>Xr4Bd[<:;@13BeW$!.dFDE2-8W>`+c,1k(OQTj>"(_&GG$'0
%B!TjII!3L5VC&ce-Nm>FF+No3!s%S(]G$6-%^h@fOFroL%Xi2F#I3&_Jj=%Gi#Z%kgmk#$B%^$f'*qU?`p5g5!CON(YR_odnJZRU
%-/j)u=l@]I"W/0I9)p*,dmrD#%foTWSs,A%3DYlrmcuL36[QjfitH;H<M#-:qfM$rO2(f6;<>e+L=`?b4;P>aS>#kVZ(d"H*#5Wg
%.==L1\Zl3E/E_/PEq;"H*PQ&i%m:(0p]W@GL9a%^\9U^TKJofn5`?js7V\G-p-TNY;@`(+V)^Us^hlq8jQ;Uf*9NuViEjm$6Y_?;
%&%'`!L-#odC[(XjIA$na38lF'Ql_p08]/MfciVRJU,@0p=@=`im+^fW4,`EM0VP@Qk7>7PB/M3RKKqmEXEN,5K2CtiU;u;7c=QMj
%j[dnh$h!XZ]%VbW-b;ed?,I>X<fF#Fs(ImZ#Y]8NEUb:8i2Up`]]U*hY'j/8WYu6MPA$&ZYW-"f.!*b/"pF)_V\DAhKi/R&T4c-)
%Gi<.>W'&`m:6$O2DsPFfZ4!#?WG!q$=n%SGQ&L'^<M,*/R1^4&rSCWW:56?`C?$KSi.NZK`#Q)T"7dN_8#SIiB'UGI<03RFC@2bG
%2`m?nPYq3H3TQlis.?rJld[RW[Y3L1b5\\PO8u8Cl+?oH/.cQ\/M:&mdY1l,eH-6I:"/;_#Pdu91#h3^r:\FY>T4iO8k4#EYOU;;
%^,m<p&HOTSj!G5i9+9uhj4`N6'>NI!SG#e"`2q/K\qM4d\ui+[a!Q+]O$C(6V5`a3I425H%d^[rp-:X>\oHT?bsNpFfZmml`u((\
%.l$0*QN:``!ZuV\QFNI;M=/nrfi_3Dr#=Ph&@mo74C?CEhRjC:42R8EJ'!3OerI-maD5Rf4BqG&*5.J6''en*$hAGh_]_7iZBsIC
%1gl*b6Q-5C&e)`j-03[GnN2KtmRHI+/H/\a7LW^gmjU&+bZbB)`&kV_)_W0*+:G@0gL!LI5.#Jf%d:AIQX^2M'6c1?LcXuN\\FuV
%#MF6'+\NN<+iQRuoa)G?pDOetWc2"bC:dA*Q(>\'bNI\JBegZ(8NcX$NKi!5k_3tRL/X%+asIhWHE<MbZ`+NVG+p<Ok?Ua]poP(L
%H&CGXBK*AX&J&(B;tBYfl_i:\,[Oh.j4UA,;YK;G,G"e-dHB3"L[+`t[j[H3!X9IrbATqD9hLhGO0\n2gQ;#Y^5K^C#R:cc]W<I:
%Y5m@%Mfg,YLbu;bIZTX_YK<*'Lg/tHJ-#A+%nbB4Yp[0qd+tj)pNI&@@+D&&SnM248pN8V8+sm_%gJNs]7kL"[/3DnPkTcOWLkRA
%'<\ot"n:A/Z1S*rE4QF1+^8r%TP#`E53+1Z#?E"93k5Sd3MKkk7L/BkYlTQQmXJW*$=?cn6`R.$o420Q0C%61:G/eSHr8u+iX;01
%m95V!?LE6F5;J"7ra9a?oW[t7`t+Vpddd<YmiY%fYRO>68]a%5?=nc\KhfHW%=F-rK&1#DKFq*JAPfo+XJCj>#<tV3m3"bomZP.L
%XUO+Q*nrGLbEIYRBM$McIc;aWBj,D*A&"5em]#Yg:bZ8L'8KFWl=VT!r&)E^B)nX#\Q8e5:kIO7?m*O;_TNaI>W]gj!(!fqQjdiW
%1R-sNIZO:+Gc`g[6:ki]:@WsoHq6]6?Ci^T7uM]%n?]19om8Ll<St01ZTK<2?[hl%f71=ebo5K#5.>VN=dj90fWfL<c%(?&qPLmF
%),deQ,3rP;Di%o'0prIG&@Ee=Xb9ZH.RNXY,rq\Ae9hbg-)m[_*'UpOcRJE.p!d/jZHsR?kh3Zl3Jk0c":_`MHr1B"ShmBu?Lb4n
%H5-V=S1jk_J+)#5D@R064E]i_)F9GliADJY_eoM6mZSLEE;#9=Lb;1S1HQJ=.<EM'%'_I#7L/0;Go&?93!7oB1uq$(.M^^[6Ar4L
%B,a(In/0J`BeR!UaV<P"VNK3fcds8<)7jo#7C]NC*5>\L]YB0)qgL4m^#e1R\$ujBN([W=QNTrAHE[bW3YUuVpCS*<V>IinE\&X^
%r8<>[f`\sck.FKD:_`n+<qr<h+&Yt<QDa;RHV)O!IWkAAdY/T;BS"o:9=O2E$-;Fnb[D"kV[3X4c[8GWjD^AuE9j9nmi+s"Qf"0:
%C%-p&*d$MI3"n6]8-"#E9WpZq%dk;:l[BE?eC9-+Nkcbg.uP4kNBocg-A?emJHSlk:`V!t5!&7cHp`9RL1FRbb>=EJqE\_8&7.T!
%gd/?HX@/9N77BD9VHP]MAp*j2*Y&&.`5A-uC(p&YoG"Yh:s;(WiY?+c@N<$^VUt-p?c?dcAH[NJ[`(L:jK=?6/:(q/.me+`8sT-a
%F<YLt.T/:8A4P#8ckkLCDG8X",@i4FOlEW&&!.qn6W%"'EeZ5ZO5:a(k/frJ[&@UVJ)lE@Coh,K?(D@3Xil<t0+.^1+.8lPcgAsH
%Hdr0/2!Dpjj`Cd7?OuY_..2E_jcMC&7>1B6OE]nJd?+t0nj<A6+^(WL`__g!qE8HFfTi-cgZ@5>[ZqFhVoXYC;etL:6?BN4B*3Ws
%oVT386"tMb6bM?[cY<9`Q%/TA3L2iZ5B?\id9EUtA+s;.2M;?Z*$.?n`tgY_BJ]8,U:BLp\eA]u,'NBR7E"=b;F("Cc)2\%lr-^-
%,`DO46.!BEaG3_oX6%I9l<_oFKg.DAn-ak9)l:YUL\!4Q+PR8Yqt3JAR.BkNnB%5Nr=OcOf4?<[SkiVMpPLbHOp<1]iLTX_0sKX.
%V<\r?I5@-A"E;nZ\U5`5(rN1J9sVi4@`&BE&0FRJnW7shHP.R+Agf#Lr1)nJYh_h:Pf$QqCA2@QNSdZf)80(Bb\QW84WF/@dt=tn
%7^$_W5"l4#9"2jMkuV+AfD,@=8Gp$GK.ea.N^7)sG7NPm)fL;]"n@NZ"+;BU27u]Bc,pW?-[ae02AD<#^*eVt%-W/,N>O:\TpR0N
%ipaA<=6EC/:DR+Y,s@al8K$fb3V$^;L,atc#'FpF=3K'Z+28"5@/tdVj]eB[5nmcB2Sdc9H@QYE4DuMjU'AIO6X*\*ME8YrY\X;f
%$(XgC1!qR0%S\8231sX-C^t';Tbl3)!:TnjpFs:S:7`rB714FMmY@*6<kjN^RDpt5SK07BdDgqfprdSL5La'YNddR..t>UTd1Km7
%/>r1bHb]j;IDs(1VLosY$GR/6&@34Vj)RQ?RIK')g!Pso36Iu6Bgll,^W;?DhIk3RHJ:mQrjtD)2sFU"9B7t>EaB[Z6Xs3g*X\ok
%fj3mUoPW\DD@tKBoUW>;rU/Wr#L(I^]-NEmf*BBiLBV,M&8mgR1mIDn/d,X(K\^ir8Vph@e5etJ%7LFGWN&(2;o0UDU>V"<>5.ta
%6^Z7Nk/hf.Xf.RErm6Ihj$K!mrcG1*&foIhmKI7_Af$UFm@?GM;*njBH$ZRh\F6_j*MhA"]DE!`s%<?<cn7!t:'!Um_L5aY/#Kn=
%(5N-f+@GLB+(@G%i-iMDDn@FTFR=^#B=;"27%lJAd'J.m4lr./H::b+bu:)-CBO?2o=Y(D*,=F-aRP.'@ObR7I9R<RMDK5eB4S4D
%UutOBqUP8bmp>uf]u*,eZ1pWj3"m/spVB:T'=%r^7r"p$Iq'ncE#Fgh-W.WgToae,[%@>)ne)rMZ9;`J/Sm;V8tO8-m6s0BpHo>'
%fhF:,[m*%AD?(2f&(@l:+#Sgoc-hMqgZspEU%Zoq*1tt=k[,-mJN2X$Pej)N`u%"1ZiS#=]19NomQK<"!Z-CBFM*]cpkWk8L1qH7
%6b0rI7XS:ZPBjRLW+YFFBZ0e02[KiY.OXn'9/2.P^_`@PR;DajHIYpkhJn1'i72@'mYt'r1D(TAC=iR;FI1/OPl>W6gCU-r&Tm+_
%pSJ9`F=4\3846/X,mArDe;Oa3TA('7T9aSW_?h.:rBWk9UnUa=:ZXICJtDB,lokqCV<fUUHeTH;ohG_VYeAsc4Hhnm!rV]93q*$X
%aEH4TN,h:0Vq8Q(k']PaHF4^)!T$@:YU;rfGBetAdX<LT-PdHg?BPE]29k:9"Zse%:m/nYiHrZK3/20nZJ?9Jl"o,c/[D@Y5>dfK
%I&;X.@gfc%oSSi7G1ecXIU(ueQS<0T'/[Yinh5MDd1tBkQ\_#^X"[7oJ0aF#%7+@(V"]_:%.U(hLd_K#?dt#Ai^6Q(m\47(h;@fE
%GumV%GdY5HBBqanb*IAR7R>en@TE)/.ZmW3SA=<Kbcshi.mL-(JOAcl<Ah?g?d/YNk72lRpWbXWF([<R(R=$8I#&m47NM>##/N%5
%Opo_+Bf<j9?FiH`G`!IkISQ"9naNZgnmnFS>1Bm0T,^"="BXQe])DmJ@o3=G-tDe)Ihc^qo'>Vfq6QP9]n9B<V<[YR!:bqtBYjH5
%hPfXmG;QsJOl3b%c&-n)=7Q^#q+c'*Cm>sMQ*_/%i.nm'(D)^uZI!]iUa!We_Y8r.U^>SWA@q,-dRsstA?Q,i;^K9F^):\NG$NQg
%SU8=5Z&1A.im029BZLOAO"-i2^E+La2;c#C:%tLoR0X)9_,ep`-dO,.fUW;GP"SK'(uQ)I]I6;BMp*$Rqm'&U6;dJ:bWb#&'k'S8
%QmIYBP+l::pd5.NrCU4FX.CTd@Pi/,l<[jFp$5M&e^FEaiLA7>/f6IH%:BuV=<P#\8VHfC2%Sq(8'mYA^A"=@gWB<<ZVV;,U)[lb
%j;Pf`[]lGR4Z1+npYd#?k/k:,?IZ<@5;[cLZ6e%+>Bd8cP=_2V?iTaMr+k5\58"?`r8gH2W$WU7p6i7Q+_EnX#WrKDI=N>6rKT3(
%q@&*ZJ#41L5KaI7!53hkZp"hrRTLtlOoiK218BI=MHd4l7G/:=*t/DEY*Q!VWd@=`(4Psf/B_SGmXt[]s7PO3%gt]6g<5Q$;+s)5
%EdVbqeh-uO;&I31I6GAc?`?qsl`3.H&HP8kmM+k&(MBcKkfau=M:r\;</&g6b&Kg6a*\B6:K1)-Td2^;p\2Ou]PHWN]]NPMZ[k?J
%83pZ#RBjH0(dRbbh'6Xp'h@8L9g%]*XIu\7i?\.O<K_eo^nERZ7WM:W#kXo-Sl-q32$)'l@!c4jKg\@gW^Ae,ki\<dJ/Jm4Tqm%9
%_;fM0Sg#7S:T]m0$dI(nSdkVag2#MTb2F8mg,(4CK5p:lr.l=UR?08"LA#\`f;i(E-1!thL4"LZ0>EGY_ZL9$7FEd#K+Boqg'E#2
%K8rZ;M'pL@K^U@U'Tf&m\cKbKR,:5%E85J,3oP^KHq6\i*m'knCMj;=g\:*3pZit&D'7_Z/3k(NB;c"qQ?riCjQ'1^0>DeCE]W:&
%/uO`/[eYKmi]]bJ9[r"gp&LCfWcPY2H*@IY8`WjU\NO[Yh90M07DR];^cl)(J=G<#K's;25S$L.o4d0rRO*Hql]M(qqr22*/Y]r^
%=of^.e;&hLre$I!N^EMAD([r.7`rQZYjGb7/<-l>7`0spYrj#h*AGJ^qKO^%n'nLA^p5u'DQJaTbbpZ9D6^^DPL3A3miH=m#_C"t
%1=G[G@OAi8?LiG[]-`(hWX(pCH+Q&@/A(W*2Y1a3Zsh(U\[+5Gk)5S'ZsMGZJo1C&Tc"h?KFY(8V-1.4c1HPRQ>Ae<40=r*qN_Bl
%gQr=bZdaQ\p,W9`.,!&&p.r$>U0;aO+u"LULaG6*(tfit5Oo5:^hDHB1qXg_e(Zdo6!P;0,'?B)>eiXUG0i/>!1@#5!b*!t%sOZG
%gS=g82D)XG\]g7BG4!S(`5[h6Y8R5.Zu8a"GZC"(d^ROFN&)Jm5h5<(hu*!R?7YA0rlE["CSLcD##f.$?M)"F]"jcf,.@<J'3l"q
%nHut0;'i+*OjT*8SVWsaaO8``PBE)W@tFX;F+DfP-t[CD*V?Q1Rfcc`\k8opD[P3og1kLZ:T`0'Gfk:qOu(:iJotU2H!>DM[P9o:
%>1oGDg"P,j,/hjW0O77[P<m0+XkCjRZ)n"Gf@F^1*Pfh$_./sfiBAYQ1q'O6^2T'K_QrW0Lt8R^$eGQM=[QYD\I:^rMu4>"kC2Zl
%,]tQ7@CKJI6+f)B>b%iM"6Re]O1W'DnbG[I+L'a>)KH]k>i0^MX.kGs6JB_'^L,:Fr"dHO2nYC2(SnN)+s9lYT6)ZVY4@q/`a;V^
%pOE)=hti\??MAs@?g^jHJ#D",Z'LL?2u:huGBZ8\7/M9t\5\OKU0')'ZRB978jo^uJY)b^2bL`fs7rQWgn4K$9\T;"DeL?W\4\[2
%QAEFI=;*h\eRFtbL!G/]geh?qs(hpB<Y=Zlqkg[Ah1,C\q!5]-s7O.>m:lhsCff,<$e%kHWmAcuEL:>g9;=5F/g5d[(/WM[SUkCs
%T\H)m.+Un+NDU[B!;gPp#fe*[P'[gHYF]4.k]tb;a/\[RZ1b]J3G>T`<DGs?(B0Hq6)EPXj3@NohK6-l6fRk24i5'4)e_;%Ci,fA
%rmj!"6&1VWQpqq9nPITPJB`S$c3b"^%A,P'H:V-b?Ii`-<B$`$Tm,j-Wh-)q=n/H0!4_i&*]):'YN!<Y+sb#s^L"L_[=*a%f-TT^
%$pa3n!ksn@JH!V0)FG127DJG45l?sTcl\B[.(^.#gEC(m/Ck2d,I,4="S`7t[?>[N;JR1EC%6udd6)Yd^969(m`P?'-YiG,U44r'
%7;k*^WrtnV=L?Zi3fM!k9(O&nib["d&Hm81Z$,R\&foYE,VE5pUL)Qu:C"kXU2'"4?R7*EKd:%Z:8P#1ke/nQ&co3_MXkn8<)NZ`
%X1K16Y"SsJPc1n>Ngu%4i$'S_OEU!dDR"OUJ9%j?aOV(t>qD%S+j&3ZB5;.cSk.T\p1tYeqarNc"N1;k^<ek'ESHMidJrhW,OkU,
%%(!uBUrohR!2?SP"QL4*EIX%/+/h-mp>9O83g8se%^$1_0i\Cg<f58l$LVs%RN%sJ*TZ3q`+37KVHD7NpcZkK=JGhm:^k8`QmM+&
%.InY4e4P!AYIKkiCu-P0-b*#"$Lr`MQVU?b>a47Wq`Q9HcqQ@jWZ?`c2[%UTbN"8.#fN4qL<)G'.,']/aN[0Mb>T^4N"74O`3SUa
%E)K1N2_-/q)&ti:aG4#KZppY2C[EF%G5[e6S-H)a1Np!?Fkc)PmaXm=!4S]=Cqn+S*7&JP_/A1pY?F@9a\`mVj4=CGKba)WCX2M-
%%V2rPM""R(OUo-R,^-[F90^T<pQ>s3mqF\t;TAO;bL(*:pm`PPkI'kkTfH<+Z[n`N/iB[u.12Jd^ud'i&_m#ISI2hX5'NcTm:BFo
%>?l^O2=G7(2[=@FRZkTET@Y+ZON07A_XCI5#fLr`?.)4;\IXgd'Z-%WScHHo>?JOWm-h,,ntDC?WK\e%ML.p-lTWedV:]rNrJ9t/
%-n!]6&UrU^d4M>>m0]<1Im(RNk/oi4E")drXMH;K<BQi.M\"St7m>uON7PB[fj-J^cur8*d4]s)jQYSSO-d=]'Q![\"?uj[+WjT^
%WL,&k/Wui7gA#1H6s2?<BT^!3j0boOA.:JUbJXh3laU7[P;0#i&EIiMs6YFDhu=Qu_(O@?b/&;*^h6i=Ka>.Y+Cpm$npu0UPU.L+
%&Dh%Jaq9"qF")\k_EH@83>tpYHqk8coNHMqX14K1S+_[R"&Vcf%.>1&dmC6.!U\e3rr)k"Ih8gT^\>\M*#R@WB4+M93u[:-61T*h
%^9uXR^h7QjB66fA8*k$+Qrl"&\>SeRVBVPIh@0<(VXh3]&>u['Vthp>A`tp2T.=H53l$u"Y2Ns&QQujRZi[daY8b==K?o[?Gi1[:
%IK*ZRa.`XP05<rW)2`l67O\\-8EILn0,jC)<L&H\A5`5/e?b,ikPsu)Nbs@sbM$fWE,lW&5I%(s+,W<>m>09q:Y/+B$R+eqU,ITV
%C.8H]$+hT.Yh.W:1rR,LMT'+4Gq\H!UU:!WIk,^'']0g*&*DHoWU@H$mZl]T:c*^s_3aHcO*a7(AKFue>]j.GhZtn2/GiBIhblK,
%^]cLU+7VH!^I+Vl!S@&"@qYe]q`t'RXTKI!^@,!"1N)uI<E6ECis>W8YVO,RGeqDc!j,$&Ge`Rkn+e["`kD_%XcW&WBKK`N_sP]B
%@t4E/R78f,pmANQ"JQ3ILB':[,-]3I1m_\GFT=&(FtlR)VtRULhHP#7I?Jioh)3d8fA.t]hUt'Gr;B$qqa`I16S3TXoDUk"_5'8<
%*<F[()rZ;8L'EI)Z-1M^H5Y'ke,O)?4Iml"h4?]gI="#Gb6]d;B5?C-:;:;i]rn6!U>p"bj+$oD^P!o@d_2GaX2j_LT3>.UlcF'M
%?AE:\gIJW^J\Gbf:\StJbu7E2M"/uFBa&C^"E:Sq\HA:O"#AZmg;ZOfYE$R]?mie1P+3?#Qm>2Er`8TBB3/aodOO]pc?@=TqtJ]I
%P2_j(ce&?;\Hnk)Wd0@"EgC<%?r9_TMddn,NfM(p5gR#tnO20O,i9=.>KMrW?(mA$WbfYEmIG>kYm]>g6?pT9F;J,Q!L`tcmiRrN
%3KHW.ci<NBJ,+k\2cBG?H?tQTR(n^-/)_iO\TOKma3f1@&tTqKFP1+&4mo$=X^S,714H9dpJp2^*c:(g2#Qm8g@lB^km-5*)UJ/e
%D-9q!(0uTlC%)i>2^l(u]rVWu9/n2[eJX6a5WNZnC*T"Q=@ujF+.j_g=)^^k27?tS<^$/W^Q5hGU-@;rd("!4H`mKihmrL\@6iVK
%66b*;688tg[Mf:R+I:HQm-"?s!cb8uM7aF(bgEH*[St$.)LS"Orgh2PrXJ3n%?Igj'0DIlr0uE>g.FT]A+9W27Gm'^(I2n]qMK;9
%/DcbM$SrRY5X![NO>>!c]*.V6)S\Z_XPK8b.r<2C2P&UPha9cARTZ7hiuZ0#_srrX$.=X:pF$9`*Yf?.s,"]SJ5:k^M@fb!9<"]\
%j&6)t*d&b!7VFMHX8^6_77Ao#kksj3b&dP6lr!B2:]%6.IugmoIhR/Cr1%+%,!+K_:'jN+YZ_s7Q;a7UW&23h)R_Zq_,)k%Q5UAF
%M:&Yf#lq^d\K%@`iE/d*(\.:&Up3U&Ke/?f=c.L59.'>h?ZTr0_K8@?IKtT]1AE'c0[-!oKDa[#fDjFQel7\eEuh)F+AM/H`tEd)
%`+%s%,CIZ3K#HqFRS[EAjk2-@YXGDQ3t^*\,SDfsZm[7[=EpB;Mc^NJf$NhZGh]bGb+NV4SO"d\(hmJe"G?S+`tfbJ]k%$I+".'d
%%gd^<gQ:,Vk6.I?,/CiMkQhmQ!CZ9,1;1Y9.O<44Xd6npn#fFObi6$IoBsEH,QdGO>4K$7r1]kX&@%uD;>/Dfp3D0;O1Hi5Ug7cF
%j$9]R#KT(hMIO'.%^,"+!tHPsZ-WgMKfZMp0u*`@\]$:)j;;sWN\OVZ3`ugH_k:@$LAV[a`ZEAMAr6i?`@*6Gkn[16OP^%;OS`6R
%r47P)=0BfN/HhW-_jDrnNk'b^Qn&sK:^[e>]djX`8uih!;d48bf%q'.YCrXWj'DubLQogU%>)%\GX/rXbR3."Op"fW:nm9#iq4An
%G$"b36A,eeOC=]qa/@cOZq\7&RV3,Hd'P"=C<_@;bQpN-hDOq6aZSr;GWcr@BZ+0u8Bk.r<"L2VJY=UZ?jJR**k<94&;k3C76t/0
%kMqIlhmmsM+9_EN/"ac3pt8,qJ\F*Y=!3T7)R6a_!,UcQVjalg0&XT_"Oa12*:%Ds!&3KY*p(MJQLWhGbG"l>M4^jC^1>W[]N,;4
%Hq?)q3>aS@]Reubae?S#(^N0j]@a-hYB]\].:.<W&K'VE2A.<Ug3+kqe(Yq5)d+E)+Z)U-?:Ht&)tPPa-qkPf3IVRCGB/c;_YhmR
%[H]qM@gd-/HU$/)pTF'U&UTb\mF^ms`fWb2Rt0i;FO8(]9(JD>>_K\j9@RMWViYD-jX,?O#4J_2PD^Qc&ug!`7?Y$PY;WMpf:o3`
%G7BibOf@pR/6N$AqM,*d/6hR33it?c<r#ADKP3s\[c'WO*f!>#BE@1JLr7uQb`m4Q1a;R;-KA,i@kBGFlR5Z5goBFNn9?JTWGFi_
%i@HFs<;/MV,8QN_0us+#HiB>Z@]_nW/3VQ(0%j?MCg`"QF7]Pe3NL37Jn`>/O"Q.FA'^k+kuOn*T`J&`,7*f(EM28tEV;@0*76cV
%)%Gs"bQu=$4Yjl\l-'B2kE=[3A3Bjg<UDR]D>g9mrpk&C`c]CK:X`\>QtaV6dN6*5St+B*WMh4tP&)DL)LD$Rk?AdmlX"RB`?Bo*
%h=/*N7iDd\Xm*NMW-QItO348LF%0=o>e?l(BCu^CMra4l"KH>lFaT2fTMmq51JM^i[M2ZYJ]RXAXIEO*SU>:"]mU4,k4qXB?798A
%(jZO)53GFk.UP++H]]-=0JqEXoY#%$+Ej>Sj$<Kjjc^i1Hd2b5BXX.GS9bT<H-X_Fkp-J[;Olss4nK[;PR'b6E@2$N.^bM;1(c.<
%9noe*(BT?c,B#pjb\!2lIsKS(Y^5de0^G.n50\C)Wf((.s5Jf1ibu(t"IG6!gh<Wj0s9JA@gJr^I5#%D:4IFY)"31ZFT+Rikd@9c
%08qiMXBg$@Yrio+KaMKOkm(!p?+%k\*^)]2Ms\#EKj*;aH;tn;Xa*1EI>7,qY`a0*4brMg"-+d`FVNMFg.HCsAqYdbH4@D-JRE,-
%.e`Om+j3u8g8F[.5Q_DN'/!QGA.t):J`LBH7)Fi'1^TGI<P2jlLo5n&CstsR+BE)sEjnJAHIQ<hP^n#e8Mqh^(UlB]8?g8elOJnG
%LmXgGk=?FQ8@_G66ke/SU":7.kht8b8TkWM?#1X>U%!?L2K?4:>/ja'?HZ5T.[kf"(^L;3@4%cFLhONQkD[NG1j,.L(^f:#>`rbU
%TiNlI9J+gX+M31*Uot.A,sqAQ+p\aF(@JWKUPoZ$,oslt/+Lg=QKr#W<k?d[&=62;Q?8We`F<7;FaN>SO)sB=BYN$i-DeiB$8_!'
%!+,q$Z#`=(L3'A_+m!hg5YO$HO+H]a8Iu))jt.rd__SBqa`0+7OZ?#o7q_Km1QO<PW=Y9nb#r>rW0]&jX12!AMudX-GL+]PQ#iV^
%Q_njWCeq3&UiuhnO0*!!mmF=F1h><ud>2teI0UZ0d@R-?G"@qm>SRhkUEg&ClHEG0k$2%n1R"no?CD/sHqR$nM)EQ6F.Vp9Q3^$(
%@H*te<3nBl`,_]X2ch8Emt3lEM,ro-"uPCVe!g?SPofuZhjVkW3i/.*Wf$b\qdP_-Z\LUs]=l#?A!UYIDoB5J0"3A9,2gU]8He<@
%GMgb?0*Q@"nN$JJ[<pqqKpDV6=5*6<-hHpnUIpfcT52MRi'+PZ@-LD/&KUjWog7laene6>\VeTh.X"pLUi"&QSM.ZJ_XA7!pS#'I
%4?8@Emrn++m:V])E(]1ammIK9,4tYpqnZ8Ug#;oY[i#$Q:<Q-<[N%$7AJ$@IBGMiNWeV&?o6fcrg/J`aWQ3M6R`111=.0V17Xolp
%,q;o4TEc&?;$h-aFJ\6MDB@Y':9c7@8>DQp7E7"9%Ffg&ambUsmuqW()3]EuaL5*L:8jIo4boA[cAT69'U'gt3+2QaaiRA+?91#8
%nrl<qI1iZK)sjr4CXO6;bY+j_lBY/Q@4[M9a$o6/F/=5t"/s2JA]Ji?c,>`[Zk8EEbQ#dg1n_3mV(sX.epQ[;5Y_-.,,=+#iU*Zi
%mA;oY=]op7X#BFn+tjP\D2WLL9suX5XrWsdbdmTtReI0&RVg_`%]IpR.(ZA9=]A#HLlOW.^)kDa!>A,=H>t@=GV\j,D/"o'!h1V3
%9?aLuoEpJr(s]m>kr#m'>.ag*Cg69u%k<!/ihL_M,`5i]m,Ud=lfTlOX+rbi6pZL*h'Z8@IIs_GmEp]\Dj9TD?`s"TlT4sob6Vd.
%Fbh$t$JIi4>rf/YkBJ6)c>_0(Oo^q=k2(Fj,_Hi>S8bD\dKl;gXHMY<0[92Q/k-1o<Oa&db(NU5o9T9okRR]:80"RiCqu,';:JE8
%UuR@=[&N/&`O[\_?$U\?e8*9Gj1WZpMJLo\E,9X(cs9W%bh]7e:\:0+k/2SYaK-'"h+!!J07oo'oTDmJkar7Z`*Ffj477uqAob@6
%kV(<mf._=bpE=d;dQLT0Tl^^Mk1cRaA]Lhi<>;Jt33IZ%0oS.s+6o50ir1$W\qa@p`;>0[HsMJQ6-.U9[I-4Q6PK31[[u,-hKirj
%N6nQc&sDVLH6>(6%=1Ei&3"94]o02ln?NahdhQEK/j#&nBfB^o3?g>qD=&@+9A8>s5(L16>p,4cof.Q7&AZg<HJ324ENXY!"L+Rl
%9BmmU1f\A')A<4a<4==1:9^C(P1*VlU'rQUA*f*%XPpq&IPjp-h)6!!-WQTSdFgM6=tpoi^[3Far7o_HHuMVUj\RV7&ortS+1FAH
%et\(S*>^cr#-&$Cg0$f<+(q4'n"/A*6f`eP2FF)'cQO9;\.D,U#Uq4H#"O9:2M.[;MMS4@,%>l&NL@(',3/4&leE[4Wk#2`E4>\(
%aATRs[!_3V^%"r9aPNu'@P7,qRdHs(/jEjPfgP`$,@_)'4ao\X\VJkfSX9aY<GO(;%`BV@Vre]bau$$GY@?eIRY(suB5#fD@Nr!9
%cXcc@`f_[i;u,rHXIPSd[=!+BeU8%L(A_5-NgP"go"MuH:QHQ&Z?:n^a)9:O*1S=;N6`YPimg2N[-q*\)Zm;m9`Tr\4(b'R,s:=&
%^iU=o.4`^9k:ZV3Z;H>BQgDdG+r`NJrE:XAS9.43g0u73Kb_bV7,"r%@TD[n/38!r,mMeqo-Bu9"*4(-#hFrOW4poJ[AJ$3QDp>r
%7J2tZ#]%F8</E0[iL7aFM3Y8El>YE5GC=I"]I?G&+aO7KS.X9a[P%?A*3,SM66ZH=23`>;!HL&GU#6T"Wg?+@@\'g]X6M#0bM#=@
%!$]`E0'a6c([F%L6F]A'WWpp_F2-baW>:SkqG?cXOl.<*BjhJEY!=m>'b,cHf?mRIbJU+WGTY83aFo<T+SleCpmq:_!iO;KS$=He
%LNq>ns5!A89\&3<$K7]4JO$Q'ZfQ7IK!N*`W]L+PpCL+djfDag#)edDmj@KaTm>TboNoW()KPQd-0q"DIq!%rHHG\`a$,ArU(>HW
%e;g<Sa3P;;GS0U"'kY>4dcj+9LqYja^SoIS4[aNE,aj[ZR0[m?o[W:`-q8A`TjbCe!j>Y*W$br&+tOu*E09fni>4`..uU:?&M6^X
%X+@]DLqjo!lJ@+(W3F0r8:_EArRc^$g\0_8?=iEYdR4[h$Pl)@P$!:n`ELlB?WiP'>c<Ld+u>"-V,2Y1Zl16UNG0tbRZFP/.E6:(
%q?Bjjc+2ObXCA%'-C<@X1/af7ko3K,0i7l%D_AH-"'mBlau\;;fgMUY0c*IaLi7"r5sp@IZER`H#>Naj;;&f8V,mn'h;)IS>sO.i
%"N"8IS5Y9&(2S4o(';lHW(iOg4^#M1?>2)0b7p;ES_#B?W.E,23KUl09&V&ZhMg>[=4f90h\p)e0Tn*;EJ\5J/u=UVeI,4)!HR'[
%<-M0%jgsP$)ag,5#Qq>dgg9DY]Um4$Jc^0SoH,+MW((BrTc_c7:G\:0ra;&5=@?=nM;Zemes03L(opi[<qIiU[j8rMH_3hK[:J*Z
%\nntP5-t-_FqH=p/$&<dPRlUqSci0D0ph\(f7D;^l4W\q+AH`E(X+4:!,9SdSf-naE=L"IYhsl)D^uOEiTl8WaUk"VD@tgKRQ<eY
%\!r/KI]Q?&.Fm/7;C+E<&#t`nK-_ND`RK+f.g8nojqk"CYN<A=4Vd8eFNM6a&6E*PW5Dfj,qG/k@3![[:]=Ng#5(uV"VoWLo5h"8
%@A.!\ZItT5]YMD+C=WX/2TcRSmN/4%Af?s3%FbdNk_&?-'b]qGIP[en(iOg^]-SU+=E?]oh_S&i>I77q^0R>8<0^Z9dK#C7)@/IP
%HR?\uc2'h(:NO`NrCL)$"\36[.ouIRK#SEgf"1n_AlGNt8;3CcW<Mftk=3lL.L$C5&Qa46emoM5Ee.$eA.'dQ)XtNCFsB)Gft]LJ
%LWP6"j!c_!"%lHQe&LQCGeq(rD(j+\G[XF4SU>.OHQqc=U6T^Bb;?XH]MB]lfgJ;rV_QVJJ2#K-.%jR"6nP:Y:1=E%cR`AOfkkcr
%mj9A=kEsN+VY6u)EJ\=G;hGsXG#shj]r(($P3uP^RrEB!YM_%N0J$@h`A?VAU8D8PM<NTY<RR;:0AW_K3>*[`RO0'!iNqoLKhm9>
%RZk#d<>/*L)Xngq(Sb"&G$#V-;"Xm\@ei08g(5iYl.72tH,sj;kg9KOl'g^UjdI]sL`b^]GU:gd$AuYIJRfbm93.lQe0LI0p,O$6
%n5>[]Sl75HTc#&9dg"Z?+S]JWfGDNbjHl&>qCj,ddL"#SDBSeG]t3U^)!IXt:6Y"LD\WA5T`EmB3I/l`A]2;1_c#)JqRP1g3VR5V
%B89f"VMhl'dZA97,Kmm#1l!^,9D/n9*cXU2:iGZ^CdJ&bj%3j7T3&)X)h+@K<\E.#:8)Q#K5Rr=a:qhC+/kZ/"LcCIqnQ<&2FR?(
%P#YkiHuUaE"U"<JKBgI!"Fj9f?=SUpFSMbF^KQY]li&;[i#N)!o_38E"CHb,'cXGQFXh7C.[]jroU[DXRS.IBMqI@#6^'^.FcE('
%E9=1H4(Zr$fu_dkRb\CJd7k6Rai3h]@;sAX0/lljVig;U=V.hEP#U/eA6g0h8l8h>#TKYu6^Tj&ONmD@8LJO-qV4RsC!L8:MpZ@f
%<re5)fF`q%aYb6=&"jKuTgR!?;;:H&;q2Nc?]&A':4!/lUWF+j@.,id3VB\o0+Y:i.e>JK'h$,BIi[3L<V\Hk_tqk;eQj?6H)]"P
%0BcTnYbM@&INTXh$tn$^ne?rt_5%8@nm'f=2G&R?9Sdhrlt+'U>lg6<RVD,\#fFC+oUO2tM3o'kGMsFU7BB(H"VsX9"QX%oO+-@.
%(n<rf\d&-$<VQsj)puMTOH(;k@B`A),Nc\;8QTJ`(16,Wast6E?kT:_fF2_qbBqc#^B[+$\g5i:4ClX15!Vg(L0aHb`BiJ%XQd_M
%Ld^e8f]6$I*K!K]K8O8S13>8:Q?tkR,Hk^N#f1&8l7t>8HH-R^'r<i[&+]o[jN<eTM$ccg`-!FqhBh4<$Z1N42+3oKZf8CgW"gBA
%/I=K(?,fFOd&dbdqV3-"'oa2O:tPsXpAG>>:FmZi!N^#U5oG=]:EWu1V]`,+IFb%S!,=\)4TK6EB,R^#JD<)2>r`J\2'9du=\`3^
%fQ$Od;O8BR=_cf7#rOe%J)otUrY3GtHIZZWJN/dEaLbt^&DF.KXPNX4=i[@JRq'+"Fj-I$RVYLNAH>^7jkps0%V@cnXt,i@4rsl,
%Vo3>S1^CG*?Ne$F>V!6uMY2ZG>rJ$j48[%[pD^YK^Q%iDL^bjV*8kVRHa6RfY9A*QkN*WO&NIRtaQU<D9E=W=.]l&E07:#=8EB;6
%Qb<@=g1V,&Y*AHid`9IQr]=el0S5@?3lGm\H,UT-5u'So5<f4kH)D5MZ54+'cq&r7/],FmYiUPa,e<NbMD.K#4H"Hkk2WYnRkY93
%8T.)#B;@HgkQefSOS;"_2(VX2%9%;HQ0eEIqu0+D\cS@`hMf!D,/*e]S>MM,HpK7ul-0J`Sg(ic5X4JW2hJN1=PJ1k"a[KUfUZL+
%#tCqq@7M]nQnW]kI=BXDXcf0jC@*tlC[DFoKALG#p,]]*%sg%K$aqFr);l7nbuYRI;/!E_a-\B#N4EEKa\qUL#6"BQj;QilO(K'g
%_\"<]6#Qrc,J=u"<(`rF".0>,q*sRi+kF*088gEE*-2:E0j!`*6Pb,m[8e?.PZBT!VRGPRdZ`O(]lFh+NdDf%cQ@_Q6>sRL#3A-h
%7MTs>2^A$,46XpJ;UUccHmuaCe!mNb[To<YI";UpUc2XL,'@hPlNJfWKALDM1E(sj-Sp)?0$<D&`u"-rAQR+>c+EPdr]StK,iRPo
%7O6j(AUJ"R;p?_tA4HHToO`=j/!8\9W?$b+1Mi#&hL&&Fc\0V1GO_If?dR+?oOc#Kbm1pBJ[Y*E2ri(+d[S]3`B1aN--dmO)26Xo
%hOJQ439\VAkh%DJ4X:\eo.J2Lc,UW[hRr/co]BG%S#/[`D)-H&fQ?kjnjO.;<(Y3Dhi5+Xa!MpU"<I,S[ZZ"b4;Zts\*2)g'Q^F\
%&$XW;hL&2J($Wt%Ef2.QHLh<bqE]&6&SUg-hL$oCBpO`.Aoq3;kfq_B.&rb@$%G\28T2TSe:ZVJ5T`&NboF1t]bqJD+7s.f/(0mr
%d!7&3k+,-/c+>*n2]nYJHLn;)O^<7VN>m4$cmZ95+,o'hqo\-I8!b.-g&'Uhc$O,_hL(9Td@9kq)j,A@L4F6g=@N=2B0.mZ#q'd:
%nUlSXI*e?9QmJ8Pp[P%<?X89-D0e"`\EfeH?b#)Zl-2>E,JBKmk<X$`"S/?Ihco]B#JD"EFZJ[1(ZNq/l-3;c/8ogX]V&@fkfl(.
%g6:B@JYj"CblCY;2]JDgS,5KB,P3uL`ot[fa,JlflXXdHf@uVLd6(d8h?uekhE>HBk+b;'hRraAkfnHfN8Ar@T[B8'5l6#lP9D&q
%c304BbNR2tl7&&[cHcsa,W9u?T'4K`oN,%kcAdNs0V@uLL_86)D`08<S,@%-X(N.*QqV23]-q/.gD?:*8BD.\g^e`&KkIWBhM`m[
%*qX&<JpG_4DhQi5n3N?'[AI+\]T=3,B$>c@l-0QK2XL`BjB^m/G`Tkj)(Bj_b)"6QjoP#G"\a9Z9Ce[#%cMU9HkX@NJ*W<TbSD5k
%AuqABd$mn=q4osEC?;*I@r:smhMfi(:O4h8ep5W3?*na;CQs@?hRo$i^"MS<d@2TN53^>E@`guT7Y@jrhTSGRl-7j0b!Bt.2K@*5
%E?2&TH8G8T*pLpN'+:!uD`1#T$,(U31O?BoV"Eg0F%1*)[5-V0Y.5eMTU@g]G`\EOHmA#>kfpUUbQkg!qf>!cc((_ph@-&AkfoL,
%l_$0=\INql+du3jbr_?@Rt8dSDoVP:PMV80?O+7^m7R\tq4`GpKAMR[g&o$VGLs;uKB,9\):#`qYCkfXUYoN>Mr3b(_jPD,,JtB_
%UhaL#US.0c3)d8G$tgPKj'XhcU7E_AkFKg6c7YqT_td2FNm:C.329O9?oZWko>,C#U[@S^3()_-%u0\P->&b+Cq:m0J&ZHAcSG&q
%2L"sdTWC*QRS.BZ"W(K&,JtB3k]JSL+fMOk_\j*T4;c?TNVgP2L.kmE%-PQam`9A07IFPChj;$'5C,#RGsa_3c7+T+M+rOY7#,+d
%c7t`K(O;E2(s]'IIkmO69:,t%R4UH:c=jVockt%6l.[H#q1;2[_/R,c]_Z;*@5qU47s]6C9t;)Af04$?Sk1ptS@Jh6L9hn6+5^Ne
%?V;e9Ol;6WXFoJj!NuaG)9@+ZSC=;9WAC&aM+S#j3F-)A@Z-J3U$1k/?oS6+#K,4+SJT.^hT:`8b]rdc_jPT;a`("JQUHQa)Uo:P
%1T#VN0V"gSkQf!CMl9+"1R?aB0V!'_>mJ7bj.-^8o/1+TT,EF:`GUDdVo?JkVRZM23(%hY%u0\PB!.W^bQieK_\nrj3Z-.-o"f:b
%o?2G8S1R^UAiO;8?3eC$&06++36,RHE5&nCptcEl/)6H!W$S[)*Xl[\/0>:5ZnX]]cIc/rA2p=hbJA-e0@)#`)'`)jL,88Nf>2Ed
%UMgQR9TaENS2$#+KAgY4n5o''+F?#/)WmR-#gQ!EnL=PRa:g-TI__<[J/AVY`#D8Y3mr@S*i8Q<N$8Sd:uLAfPc=bq2?h1eZq7Ng
%L4!/X8L8<,>O[;g?OI,qi[e#Bf9=V/N$U@?n<2_Gn)4k;q77+@=XtYKF]I2chMgW=fYT#$_J&_B)?%i6B&b."RU"U$7Qg?ahc6:D
%ZLQ?nnKL>Qc5c3H7%!KFTpFRk)VA-Aij2s@\6VZ80%mZd(k#RV>EoMc`''+$0d:TOTe20_N$4X.Lhmii0cYBcBu"5)H$g0!M1*Bi
%%9&R>h#jsP(dRJF+ic*[96lJ_lj%[6!UsVaFTU!1<^p)m;8$rA@oW=m+bO<.[5:L/lY?'LfhJLt1g1S(<NPVjM'R[=!]Gc\*G#C'
%3D@mR9]HW;Nb$TS/^u.8q#%Mgj`J[8;SO#;)_0mGUpPX!R\6[tD%sl;?5A8KW,<Eoerl,M)2NsZ,o$u#*U_-`EQZAGbo`'i[<>Qc
%n1F/qk1oA2'Z>o1n!^?AXI8q$[S3:LmF)Sh25hiGF8;+j1nW(R0img\[E9b#8bnl5D<,S/gKuj`b-"Be.$jDO-f$nB1f2sInA/7S
%=Sm!WgOWsQ94d59X-E'k^LB9nj*S&;Z`,RkP\^dobfZnI;HENT\'mf_?PA]W-QAq#+6%)ZlsVl6OtV/CUCt-;OsSK963<m$'0csY
%XgX@9a[jCXK3n`qY'8)oP#d4<jhSGF=b3`G7Y%dp;7.r*/>o45chTsWJSHb>9M$3PI!L<1qs@iZ8[8.2lA7i$oMY1,dD_KFo"%AD
%n:WS-$,2mU^aSE!#$&uK($;.ZN7;B>Ud_hY]mOH9iE1d50#Q8Gb):B"_XUqaDrb$(44u@oEF./C2n.h*1fI_c@S:r;U%3FVaH%+r
%m[*+)lFtH$fNEH>+Mfo.ku)rOmWu1?V,%u.;%W]ceMdANFWCl3)M4p[^/c*^`%OmuPWLR\90/>.;lD0!bYH>^f-bfb=d"p0OaLWC
%<ICFZ9<T_l(H[6e;gp2fG'+_4;oTFRSaZK6fE'Cl*QsYoadYE1aJup,0iCnd_\\qs6WE5UISud:&fL\_4:6"u@6R*)T3XC:!8*l!
%oa05Kh86:!f^id^lRb+5@3i=pUMlPrmZOrkcf""\h7f3Gb/`k[kr%;pb9`1i6j.CLe<,LRTS]._0ifE8QH"'Zlk[DH8K<,BVBX0:
%a0^g_0pC4:%LQbM--<9c$&S.?W;W<>enJ#/mMlpa8;He.@0bEp$9O>s:tTIjn>*9ei&rLTY![>0BiOI]Kfpar$9O>s:tU>`-\^A`
%!1^n9A/uBXpa0A_G0%JjTWh@C(b+fQ'rt*S[^FKRTWk3`l_(JWU>ngRLU>nJ$G-]<:4\FG^GD^1ZFOg0-m1P3RcF(:Y[8Xs6jgO`
%BQLg0467iD*?o2]..!%\<hure(RZ?ZG/uW0TWhcQ@0Ye!hX*mC`r`puKcPBRG#6i]TKAb[G3iij:tVJ1(^GaX^/&Yks!=.[+T!N7
%i<"]r-1QT&HuiM#cpPkI/W`@X'3l(sU'"0u];KZV4&'>t$@AMega8IdfTW<S2ME1%9F$9B9#)g.*Q?>PKcRS2%LW*9QVlBEdF-P'
%KRsG_4m#bB(\^Gs6"*9Qg69BklI7I_YT4F$+R,Q'6P2/I'R#$"TWeO?#DLtFXbL'b'g!i10rn.'JW,5u:*mlC_L<q.FAph32!0G-
%%[C.F;V3W;7um+5l_(KR>^oZ('0QIg$9MdMHr/IjGi9?[a<g/FYX?@n#DLtFh1LBt*g6naS_E3s@E/WEPJU'Pj$@+O1AINH;u-6^
%Yf#t*71)+EM/lGF@F6eON,js;6".eo?OmM@Ylt;-I+UE4*LEiK.I>*[mN:fM9o)WuEV4)PKq7pn:C90Ad-I@/6\@';KcLMRnYED\
%V<FSVj)Wm!Kq7eMPJW?>^)n&4gni7#!R9/63fGG?SN$4,@HUqqTWfB0'2>Sm6F*JS'6HiY'R!aKe!%XDrR*u?Vj?A9YZ&1+Up->!
%F0O30#EJ>MYVW(hUp+33SI%B3h%3lf6=JcnPet-B.fQB^c`snto6S*kAq-)_:A)td_N)H<Oi!-`>mH(SWYDGG;:mOMNS,"hN*87j
%m#WBn-\^AE`_BmVBR^dHm$-%l'R%VNOhsj&Au)XM^hcJKhl2RONmb+`_G9q!8R[Bb<Y#O!>$)7A4$)MM;V3]9gHf921[[P;=4;$K
%1C?40Cca'3&F-HO_N+#V5:Ps3*ZPl;CcD<cYk*S-8RZgAGGh[ogA[bL;ndQSfPtor#DF1FB8[II*-V9P@E0>B4=KR#n>lkKh%1TR
%Ts2RJ6=K%uhEbR/HT[d7Up's6%LP9=%n`Y%UOi#.@E1Me*>E[%kgDb*LSeZI.I<."gHf8'U+VcGaQlE+#?V%]SQ`j^_@EA*.I=G2
%3[j?]%)=2X/+EO:TWfqi:tT4S3XuKY:$a*Y*Toq=;V87PQ:PH)[_!"V4'':G;V5^7*@^>;64O>a?V[1,G3YA<Kq6EXTWfB0F%E^(
%+dqOeGW\D%4.#Q&_TqQ<TWn#m3@O7XKDMCJMrH]ofR^,V_J[Hl:P$B#i'Cd1n=ZufC^5Y7244]'h+mV:D]Ju<Up-?aoKco@mU@1N
%G%bme6".g6WD<j_KW'/mfNhkE'QtC;5:GmNAB$oDa3r3;L#!<0+A&DX9kG)_()8:bpg/GJfW"-r..!mY3@O7D;a2_te2SNaG'$bL
%.."=6Hr/J#=3Q<6:)ikY_N'!5GZ*0'r:0hX4XfZY6Ec$Y*Xq(Y",3<2j<oXEl)eAmfR_P)_@EA(.I7&`6"-Z$qk1/ldJ9TBo:?jK
%m.e15'QtV`6".g%?ChjS#QlSTfIs'cC^Rct>*r.=%6Q'*40MN6GO\:6[n<kYUTh(/T5=2hJc0mmfEiT5G$L?b6")/3Up'rk#DJ_i
%6")]?1Thc4)24VPUp(MW;V2ZCK1?81Ob:MgaSSba_JWbWYj\Yc@GeIJ[^pV4qbM]$5jqaOYTKN8fQ$gp:C=^-X9XG"?p,q)8So_3
%Kfq2&N5El^I8JS,!"K>tFoP5E4."D^@Ga`'.-t3):C=_K#<@LoR_IJ?L:mQYLBHTFn3LLGUcKpjHOu.QDTM]NJ\l<_6",h"Ku1RI
%2n$:tK;Aa5'g=&4]3Rm7-ZW&9D*.X7k4em%Kq1Nc+\[AK0ad_GVIiMI(ciSog4>;ZmG<\a[_7S*!5J33\_Y&[)XYLSBZB&@#^gH3
%G>.'t2NmdeY)e4VrqFlH'#7WtCb9!iX@m?N,+"%[AOLV>qdU;n@iF&bHQhA:VBH$Om#o0H?4*gD_O%8PmUC#Y9l.\Sb1fRY55lJ$
%SRmccX.<W.XEFYHA@4Mi^)>4V"bs?n_C>2ANHX[Gs4A#uefK18Z'PdT)B==2n$<Vdj(Bot&W>YXGl.IoMDLA1B^GplTX?k3*@j%>
%@%]J@G4Zsd5<@OKi4NU(VK8*;,mRoH4[A_`;3[Fu^'sJNa_Pg9M5K>NG(=`,gA,s<4cHrqERYGUUMcHBZPMm0@:,(J52e(AnCe2M
%^hX0Og<"+87Mk$gQo`ss/Ll>GTEFG0f1o_=neR]_i#$P<j.I?7oH=T,]%SX<8'7jB8(1X^+P,BOA?QtAZ/]-qp[dS-2gF^Y+qEB0
%V\gA:_j/=mFUUrUW*flb1`02t\I!dZ#'tBD;r%BPU.)mcijZ`-\kj(#(f1\if4pSl+llGBk#o[b4=Sj#]lr!7b%0U`JUt%oJ0!5u
%R_pcZ(^>m&(NT\[Y$iHR9W^[Fi#iL2+g[S-;\E`Gg]q_R[&;/fKQAbrZkam[&^!WeWt1omQHmW3=;m%_AJ@T=^F7`[8gm5.,=p][
%=q^6J>q-Mm^i]XNa8nik%(VG@&5[*PKUQ>OL4I;u2)nWcNh(e`oW0aJq,[k9"<(jS)kTICM=s)"#,@t;+eN3fWt:qWbqq>Lf>BUm
%Nj)$<R<Kq:,?H9c8UgY-AlLB*)DCN3N@tQ**>eoia(Gq@aGe.ZMHYgk(VZgeW`E+M#4q"K.jRHfQ/+nu1o#5J-hHcsU:aRf(R5LJ
%.]/`P;#,Y.2?m!i+r$m0oc2$@%6,B?jtKk-[a7,*Sj4QTbrs#_6Sgn!TFHW)9-a@;^B;J=aS9Ls%g"\,ELGK$7,HjJlp79Sc<8%+
%">UYgd-XP`hPC$0GG,J#D$Zth2nugF,PUSBaES'42?`"EGh%-[,1g[d?&8KHFntne6m%<"S@]?gHS_km6B(%rn\]MnEnsb[G9Kl4
%Ae)G76rJrT:df[IEpsnojUQ\D%(d)2Y0@r`#RCk&UHOI*F7"=<dR#d!]o;rHQH$8Aa(T0l0.TLb"&dht=rLHI<Qu:2NN4;CBPH7g
%g,;Hu'`mWIBc&1OciTrMJ/W.F&SBOC>ToM)9++1&[']F_)D*O?9V\G<b%ii=Z]2!/#[O-Ta`_lBpbM;;c.@6M;'(mU5m+u:eUSoR
%Mci4GB+!&7g7lX`\j*[0(bKM]WRNE_E6'QDTJ4#F1cVS*m'`,s/WC,j`FrsNe0nLqV/]Q!8$k*JIL5FWK7d1QA$e'_FRWk?@kpMH
%$UmXo[.Ang/M5IFUSW[UgGFmao\&RoiA9>;b83Y7<"!]S]ACDtmEpcH&)me1XERN"+'t8ma#B`hiQF5EU87n'HQkjN"*+p?L-I/S
%["G/$m5Zqtcs/LVB!aB;<OQlVQNi+\p3!;N0T80H`):a"7C2>7BFNB9B?MN')M_b$<AgPJ!Kd@+(+i5bmh%-'m.;2JNMBfhZnt9p
%2KIG:16%S8MNVXek6EkJ>,[e%;1uMr[&pZk_IEonU!_;3?YQaOZUZ<D>3L0iQ57J0USXMKW6s&188DJ90H1(Vdq1'XLhfM>QH"i0
%3rc?u^?!GRCu%Y["!$2gTJV0\$<uM_dg^L,P_MbZb6LP11qB3t5\Y8:e?5lr'sEZXBb^/ZLm,i\HGhdW5l,lH8YbJsKen`'V*8'\
%>*QC+.Qktq;8`dHMN0[0HLjgE0he#\3iDdmF<k@`Zr!",8NX\cERI1mCgC2oD=JY6ZSf>+6)160SrtL9B7FZ\[,($d,V9F`#"^n3
%:P5Hs;>-!lB0nlWKQ5?`UkSWAdEmnV)).,O<`YaFc[GCd?Q.1>8N,[n&*%[=cH$OVElo(H)OD,"cl$S'/oo"M\6O]rBO&9TDJ&<^
%h!iOtr('9r(Eu!\QP15Ij77U11uiVbW7857bE&]t)OGMCk%J#F8QgXb3G$e@0J8]>dC>_(X*JOAEn2\=R@Y:_;jNVT*GSinV)pJ.
%5(l2-@1LE/baBK6JoS>[f>G+gXWD5<l!&t^*Am(t+?O><)JO9koOqK)4W&%Abh=!Ah.&.6fS";dd(+q"NFTuVMW$hg=mK,Q$IX0C
%>F,GRq<-YQ\WIubjT$1&bUSXZ/4Jmqit1j#J@Ll=FZC#l/6dl^)!+_^O0%)S&8Iq&197C$6m"Z]FQ?0-;]kaK?-\%&Zn;U3qIs6\
%3g=;`/iU7Q>qV:MYD76\5F<PDjTK?:gU]Ms9<HAXdF)R9)AoU"O1`'71o7rVjIR!^Fh&LY&*n6RmV#m$UdaTi,5GYQ%T&`Uc+9E9
%fBkihYD?5SUp@7=?%-=\FZI4)U3/JsT-)YGR"e\#f&[UUHaGE'FJQWFbd`&$)tn6f"LQ`s>V6*4_ml5C3nflu*:2(]S.jq/fTu-g
%;5.p<h#*pa\KeZhdC/sD7b_r!Q%NqalR6koE$Jc(;RA$R$=lQZEjiNN[cJ2UW=(NBE_;L9S!LD,o4dG@!uObUJQt""QCn%M!:L"7
%R$IiJ1IErMa54fW5!O9XTsqIE3KUOmgSX'H(])%VS@`EnVWGH3AaZ*u>#&cW4\X&\Tcokj;ma)eBt4L6flo&36=?J.%9?3HH2/Pu
%[%,QGZLLlBEZU'F"hSb7O1uQlb8nuu7cX%a=dpo2NGVqGcaAOJ3T[qh7c(A`@Dt`?-aN$T\D/C"BLi&-OEQ9(\=DOsrRe&g3IuJ#
%D-ZLb/pnS(LLak!*XWNIErR+p].pM@Mer+=N6BWJfi?@u`oZQ`&rb#eObM5P)OIeFh.i:rjcftfWcacYHba8b0J973;'3g>/i("X
%3TUct`A?OpOk%#^LXN\;j;+1\MfCaGRi.1.*FQ<nf)SUC`oSaB6>NQ?\]C[\r2RcuXQYV_j_Wn3`oZQSqCjO7s/fs>c>LBpfuE.I
%I`d%Q>Y[:n7H8Dp+Y&O26SQs?_mg[/]n3b63=t]sBZB/H1_d:R<9*QJhJC3no&^sPb=0')NQZU<^7oU-GL%"_bB_ZE_0f0l$[%p#
%`oTU#1bNu?a.BIQ7ku!L'.M>=gi*-LgFcLroGW_4=n`MebBXQ>&*%]eQ<H*tkCYqSCYcLj)h1lr4u4g(cVoc[j'M0Fh<`,j.4Y9c
%9R90ebP?@B`oT;jS=?Cqj`6uP`oTU/:><A8OnYKVH+ART^7=dH7Jh+Nl8GI(gU%Umc+KRYl3QP6]N(;$[Wsm:$:RBt1G9ObE\K/5
%@jIM0MroNapLmmYiueNsE`ndW]\F*i7C7b1P0ppINi6>l/dkj"oZXsQ2T0BIo5Zioi2GARbLm-l@:"u>\n3cPkIN;l!31=T,O[j6
%o5Y)2H+ART]UYTrdCbu?NooGPWkX&L./9*R\LVEiGr^'VHDE:eEp=Je0"IF;F5<3\V4!Zk$d$f/S81loM5tp4W/jaGE\>lVc-(t9
%BO:+_9ou11^*ZeME[`K*Qh,RUg3eZf)NcP=QW").dCbu2jEd2[MmC<\ak'@IV^n4&Mq[;M0BX'/Y@($Vg2K3F*2.NKqbPt0gqbWS
%O;CJI05()<R[6MZr*MB9VkAK%bfb8n=OFdOaII%8QP15Io5]F7R[4]H]98SK'.FI`Ek/,do5\.R<\uHW!nZGq,dT/eYs'6&jZNK7
%YV2o)5d+L+?g`^c7f.32UO@F/X7kYKpnA:*=pYtAp>s`+%o`&fK"XA7b6<juj[;_J0,N\X?VW:Fqf5"!2D7!SZ`P:3W,]?J_73a#
%LN,>j'TL9>Tf%;QWY6TF5AfG$#D7#Aa=>3k]2EB5mN)!"diT(H]@:Z?:JboOH%i7/gN&ibrNIk$32:?$>aM4&q=,f0[cK9NUM[Qc
%rb,O(:Z@h([cOf\U2>0XDe`K/CJm<<21O.m@Q`qajkb)<,Br5IV`u//mgn/nR8D;>I#iiIQ5f>me$^ed//jhpN"f2XfkNkA<FAr1
%A7_NAH"`DqPm\5lb'bB/`if'*mE5H5U,]Oo()kH@RI$REoS<#2:N,KDq\O2N1;2eYs5A;$2a:a52N9dk:H\@m3gr*p1$if!T2=m(
%JJ7gNhYuW)PQ%c:3cZ,c3Or_=h?ot[*6?pI&kq/-PHG5E/^M6r-@TL)?=EkoS3iLuBjD_83[WaXGgMZ(+f=_T(9[@)5H\k3Ce7,S
%4k5Zo#3.rF(!HQ*HE1uai[;"h:Jc`[%82.G*V%Go_#u-n5[%q9.@R'd`7Mr8JIfjM^;49Y4>g6OQfJE:W#6=DWmKWl-0V^6pn.\W
%:TG4.C"5RBB+$q;o)3dhEf%L9L!&+$GAuQIJPWAjZ4BB=fmm,!d_Trt<Ei+/8K0,%>OLFf)&.s#qJ,7:9`&[J="C*;Wd@<M$U;kZ
%s*FS6^VqDD7BsEaX22.+/aM9.s6iYSIi`]^5QB=<s,UO1qWGI0s-%s*TE"eL0E:N[rqOh>nR$eALQ=A2hST73c8!Ao+5u,m&a]Kj
%;tIVgqgX+pIou>-rq)!Gi*TnOq*e?OT>(s:n+m"PlMlWh8ZDYYDh%c$q#*GWYBQQ:/+0k'2GQHjRDH;&A4('ENjG9g`;J?5f::`5
%k'`qMKDuJW+ShdGin#OsH)9ENaBrL*mC<`d+aor?)oO\H&GB*lf@?_a[:[4Z\77!k[BUuIltmnTi\<BX7'1%u*e@g<a&HAd0Bm0-
%F&Vu5CNe9Z+L0USdEUq43A,Y4Zi/tm087+J`Dj-A`KD2Ic/':"KHDMJBnqOoO2/#m`DjH,<moC0^UftA1feIcg!2/7hnjQf(2i9,
%g!2_Cho'](6)U\3l/$&&B6XD4*L6\U)41dT!,*r'AX.YbFn8/S/9ngmUO[efZT/:aU0UM,0>-7Zao1eu3e^Pi'J&?_S':<8f/AO[
%6mRF5jf]2VcY]c'l67&sCm@C*TuIYE4p/:5A@.+VMK6X_2kM3:[3%hsq>;EKlY!8c-eg5YU<YZGI#!?B1JCDU<DfqtDak:17=obj
%#LZhbO5;5p&6_7XEaO07l=+Msi"lFC>TkVJ@PT<h:L/b[?Af?9G=fahSD3XR\q0t2HAb=kHJNU%2W\_@:.s5VL2UX[Pc;4#8sp`A
%G,;MJ-k&gKjBXf=4$g\9!bu(FhVFf-qX4#Q#6ZEJlUA!,&Gi'*[N'fUG[o;V]--FNQVeO#_T('9:Ob*agU.3PD\6Hf#RIL_G/FbL
%7c2!@qOZ6Lg5G\;Z!)h.:J:>%HX)-;V<3>f,*/Z-3:WRU$C\HjF+0+KS7DHtes5-%^$0Y<BH<4F!Z6/U!7)Ur</Q`"n$VY9o?-pf
%H?1:iXcB&r:+T!un7A]9UJK3XoLjD^C9k]JZ.-gsJ_<Ca,k]TU@/ueq\i-&MOFpKgMLX%%k_n\p+N!"Md:!)mN.?cs3,mX]KWH"7
%@!/e&$n)CUNOXMbFG(/00u.2$",+,Z6qW[>ju*=9olZ?[N5'%?(QTL=1T:eL+:EiteeIPR1/t'D&-]L](]d=7a$AgR`bTY-lSUF0
%3q*8="4MH3K9^'L^F4nO>7TM:M)b=Se=7<UkY!loiHV%32jc9&#X[?<Uaj5P%4;2ulapaCk9OK'8f#%amsmIk?R5MB<sga:25t!s
%^!*nQ:<KGr!5R*rW)!Fp'7IJd4?T>5c!5R020+73r!F0KLVT8/b%J!e2\2U\C([<'K:7jC6t#Y:$q+R=Urc-<"+Yorfb@YbjUDAF
%H2S2EdsY+MC9<da>D8NH#Pue476[M[Zl_DupQZQV4W;)fj=N#a$l5fea3$IVRM[aC#;=01l7mnJ)sNe&Y:bbWLO)M80F*(f5e((f
%Z;_>Gb]P+gfDl&_)*i4G3e`Kjs)XTM9Z-pc@nBgJ^?/"idAVVPZhCKWF+DUN,`o*)o`4\9M43fQ_8TsENZ:q._F=O900`1m6lS,W
%i=?e+FKGt`1V1?D=X"jeTiE<KWi(sk(67m5"q]Y+#V^/4^$d<c+!!o&(b#^BE<6bE9+[OQnq2l0LL=huGfI@6"O%-;V_qbc0lq>=
%L]YRPS)2"BMr\AU"a1?b;qtUiTp+:;QV,n7S+)0cc\TXkqeKn>7A!hq8Vgpf=)*"*+#9pM@4ZRWbXekPJnn%&8\`l4h#3Wjan`bt
%63+s_<7]u$5^KuB_.(!ln)6UMIY!8u+B)&i5(RRDLq'V@$tJWPQI@;'(4"O;dc`+fiCC*4T;0"s"J=tB8AZE(\m(BE9?8VN5%Kr*
%:c0L#=W;gT]VM7[gQ'T'J.&2]YEc6!?1WU5p,Q7:SV9L4SK4OA5mj?Y8Il?X87OX)%SB!b.D;Tgr"d=kLf>nFlrqsr(W.ZZUqJ'<
%l'mq`)97Y@g@PA^C>Hn'86og9#r7lMQ])D]Ym'Z-]W;'+:1UL59=<A(:1JAq$q?#DcdeId0:@!b.<\Q2F=%$AO^'Xn25TRXbn&JV
%-/KZR"u3HoGL@5"ocOh9VjI(,d>W/J_^Pm.M+$QV%T4JrM[5Onp:LW$VcQ-<4h(oflLTXMbDcC7AH/=@n"Xp]P%9Mq`Rb2#"`1g:
%O=Nq1WERWpTd9A0(q4)1fBR3.,ORG$[-DL`Zq8Me/_1U=paWlZUVLl%(Z>\7qPe0/:I4o`F%-S'Rk)?Ls.\ZVXE#?2_kBV+6j8.?
%fD:$=Y&B-`nN8Ng)4;.*b>4Hu!-M3G6mj>8Sr8.2>;1-^T+sobZ3eif71!OqZUs/$/pY?GB4ia/l`a6$,pKca`&OG6+lF**Zgb7N
%`);+u&]BR0l[X%VKb%!6#ct+oYbDer5$rU6.B-N8$%!(F"0aL(_UB9U9i7ST718:E*CWOE'>oeqPM)HDN/&!=S(*YLkhrP8/fEq;
%Rhbk_>LLQ9%$WOV_toUd,k5//N7S4)"st@,`QAaB?>+n##3\ZXS8s'L4peT^oWj]i"\'T<C"e1'5?Et0Y;3MX]>eN=:CUFQA/Me9
%U<(:SC>sEk&S>ht^NV&X?\Wh?<Gd'&0/<b0MUa17_nG>SZ`SiNDIF,!nY%1bq0fWa.dEO'4-\FVA"i.]Xf,6cLHmD63l3k<Hge&-
%:V\MnAYCAGH6A::mhN+'e9YGE`q',=CQA#!?9'j(ie"3%C([q_E[WN:>)QBo;S;Yc,tP_PC-=%:Se.Xid-O-<7PGl@50uAo=(d@r
%&gg;AO3_rk\@QH5`5gi>\BWBqGrCe/0A'Oe4ln1<FspUF?Tn,[&23$OC`J:!(dK*U0?PWZ@gRU#]21>Kc5o%,dPfKh7?DNG"VGa/
%G.@Z"B`suPBs7'0:*DW/c,WptP]<?i!0XaF/p/sG0W@Tj+,Z491ZgE7'hn[Sihh;p<Ik.\4^ni2Ue2&qKqf]OatNo56_SSVCqVZm
%anN9HDn$D!';ls-VG=&E2kp,d+7r</-1Xk\WClNKo7L''q!EB-d4Xgd=!@:-%E-LlY8#Coi-h^IHV,#:B89O+(S.hg/'ka[1f[N_
%`sA\u*X;I17)S#*+WsKhiZ95[H6!8+?ie*mK,pNam"eMe+D%Ws,';U]Ad#ZaatHo[\TY6&HK?:uN!8I6@@B_=]JWWK>*!i,-\UUk
%'b)"dHB/JXl;hL6^k<Qb_tP`#Agd\;f!5h"<5ZM9'.-N**fXH"db&g_^L_O_85nO/!X5jT:d]>ZC/!iQlot%`-*9'Hhs1]-YUa98
%CY.;Vi6aYkVRmWq0(&)+Y&;QQGA7]bd-'%07Ld7e]qjc1i,oAZ5/=m.q%RcncBJ=oKL4`j2;HSNf/<Es0fL-F.1E#436e'7k]cYV
%1ka$mo!W:*pu/CgKX;kfhZlWK$:O#U5m*FHJm9Yh#`X`b6S2-&Lm&2P6Y!VAY9A5>#f7N9hV_Y/?m1qk)Z^$>*>(1F8CO&U>8gP[
%Fb4Iu!"OS]k!4Qf9IHNJ#og6@8bGffEof3u.$l_'P9%^U\)UD]dkN(69[0XVEI2J//J]''TeHVdTF%QqqX_jHW(211<m/R>0T!1B
%!O$2cd6eCsSZaNn1fY2>FX"?g!NEb-*A:hCj9D0!dl!%bJ_YVpdImQKHtjdOLLirZJrAnWWEX,iUmJgI5V7-]iYWTN]\:I-Uq&7a
%F+aDkUM@IIdc&Z+/A$.E0Zu7n.&uJ6gg;V,[F6d$]s7j@gNCQmH?&GVM=F"+T#aY$!P>f`X$Hur3u(VhHe#j8^<_&._L?+7_s#^6
%R=,VUdEu#U0-m#'\!SdI&Bl'?2oC&C[<Xh#(hnq.b"8#%-moj!SJ-3(<EEji,Hcs+hh/P'08bUN$o,-1,%G00:ou#fJg4Hd/6N'l
%P7VHWo'ZHFrJLj_DG]f^l2B7hE6RXS8He;ALBo-Y0P(&4jUeDkJ%JZk"cRp,Zec^)fqI"))X<%A/#$m$UJQQr6_knHH0KB9FDskQ
%Ob!k,Wl]FJ>)(6r;-IDSJXVgd2[BCKm__h3:V4;M)p0LAb$+DaX?oY>Legs_f&YR^>:N$ISSL]IAl(VNbf"nW4%[g"Tq$:J2c"!g
%l^We%#1nM]$D:Y(Td?GF&;)QiA/u@J^!#?J#p]tF@k!<$MP8a^1+I4;XblLT;=-8EC?".lD6BmPBXhTP:6Eg'YsrAEde35l70H"?
%d?`OMWT'@?#*C9'"T^o,1\>&dOLPf)cp"CD/W"q?887p^:nQXo^s#1`GrT.D=GIWNWX[33jVDooN5A:;?':/Z![;^NA+R9TcZFU8
%Tem!"8Z6-!^]Q%PRABgC2.P*:(RE4[O_E$=:+)&Fj2Bu:=>kn>23pgX,>O"tjksN[E6]BAPqtg@RqR@_Z?9_=WbSSTI&:ul6>)3;
%^$jEQ1/:#Q2%Aq>$*^7O+q0t9Y5;d2I3E0l?Zbl4qHYese'f*rV6d-R#3QJ&'\)c3Z-p1EgF+!q!@H?YlJ@n#cSLg86(V,pFFI%F
%6Noj-?3I\)l*i^p6i'2B:"r_M>s!?YCd#IiCH(r6\eRbEoQ?&HWf6B^'J8Q"$4q\8Q'[/A1"+JaOqoi3iOPEd$%PE8$7#pN]JoA#
%/Adl_'RQ$_f-8>pL=rWKdR<pK7%3<u'k,*s(BdOR/O<r#pqZqS;4K&?<k1!@+<=gnVB&Q:=/U]A'Nk`!^*B:dZ4:g!np&7t`%DEC
%Q)RQ^4ILQq=[Hl(aUIdW\>P,aD;n7j#X+OEC4SmJ"/0?@c0-9[C_9fbmmW6h5DUFC]LX:_(K%BZ,V3+;h+3k',E$mV2R1K%!gde7
%2ooCI<!(;gI7f).2c@.$"]DmWE<=JJI6+Ys6-4pg?!kB.:7)M1OI8&%6`<e0Sd_eL6^1Sm)@<48AWjpcP:`j+LL`BiaY?b)e1R0Y
%Q^N6K)7E</@WknN@!BT$(eX,pO-*)5g'M_p@JSQfEeB!L$cMfW1iD!^-*=J##*RtAUtG:YV%r+*NFQn-_P3dpU7%gKC0q'EQ<>\D
%o*4&_)!E$nYV1ma-JJ%oHUK&`27ea%8VD"73),Xj.0D_%SP\%=1A%_i^]auLNL"gZQnfMBTr;-4k6]`$Yi>l<B$Lmm<meMkQ?-nh
%FtC;?p*q-9AQ?%6WbdBLBL^Fe6aD'2R8uMaf`:Q[MaUC46rU:*Ht)2rdAN!4`qS6sPHJ0aR-fu(?VTTQVK\"@cKCND@oKae$+rnp
%)(u)Ad;cnE&hg4)-Dnk\Dc*:+0X^ZeF\F\Tg>BYf&d81s[pugpT^)6O@R[b_Zt*f&@N2.mV:_.*e<@kt]_3>_;k)BOfu03_=6s:Q
%b+*4E3Kb:T@(d@N7Z[,qfr&SU-XnocNC"5H*(=]p4P;Sk%l+n:8@^[-I5pFhoei+o_iuBEkAY?4b-/+4MCClu\?W?]YM0@TpB2>#
%Ng@860J]<bE7AWSCTGObE8TP0)1ro-5Mcq3Jj:[fMO:,LU^_c5^a+IqM'NfmCMnID`e"(gp!7=FQ4H3#3Xn=SeI1):dbU1`fqCa9
%/GH#$0UuG:"4\qc!#Bo+a'g\Fo2a,V2^TY=Y7,N9T_[e=9lAf!,tCt3+V9SF!4tZ6Ytl?2K,1@6$DoHX1(G^nHtjH%?DX^F$912"
%d&jr*>$<A_D,<m;LU`n#0A.U;q=5G8e_o@[1[8]F6Huo$jA>^`fO`0P&WgqO!cg'6fg-5S!ki:M)=e(VFtCJ$,&'NVKE*4d:l.I+
%hVeiV"QVp#/2+7O=\W&,)SF5c.:/7(ZB)ct\E's)BT(O+I\`]1"Gj*TLhQ7YWlC;,g#ci]fp6j;_GKL%:?.M6k+0JRF"he'&uV-&
%3$A1`46>9&6H(!U33gEm).;'NdB80/NuhVsV]^'GN:]V$J5e(@G!hE4Ht1XJ@5e63@7/:G;_ukc;jNU]c_VFY*;*KIJC;'kdl5Q!
%*ZK[+W],Ab*6;,\R!.q];*jEIOu6H11NGt$\f]2Z;7]6tD\LaTaLeN\2%idUMerZ>`Onp^;MXi52IQA6SK&Ttl@'>Lc8B(3RQ)o6
%U^M3\A`)/84r_9ac\0nVXF#1mcq>*=^-=IE>t,t,JmDs<!GMtUVne'uPIU!7'a*I$,RRpEpklmhA]mQ8%`$$8BO5^T"2]T:5UaTp
%fY!tLRIQI;(-k'uNb&FVE2J-naGmQMaX5\@0ef9bea![(.=nul-A+SaOU.kH0Tt:j#2BY>O^VoF847'LBf.)$-X`6;5fDAjRZU%$
%$FE:t+qF+BMC>YF`.(CD?MU\-]QY#`0<?%V?D0*$G@s3!Fl=nB5(ub4W?IRO^$gA54SN)5Ld^E9R(Km(eNoF^cKb1IcNYT"loAR+
%k*)2J;i.@Qm]3pH:8TG$X@G%]WG@NSC5K#bWl5ABM3sjN!Q*;G&O$lb#TOEgBWAg*5KNos:jmA=R/smV2WW@g?V?JHq3\(lhPM[u
%moS&]_lsCPI>maq)'1k"32=Qn/i1AVa)Ik!G<`\/k,9mI.i7%UM%hgWUP;>rG%2i7D)$U9l5BGg$V6eb!T]03Qc,d5]G:;;YV&u6
%PE",07;+rgi)NPkJ9\Qm?AS@KF^!Bf7jL&?HJ;_ZO?^7gmN,)iI,3taFF7hDhX83OR*)C]0grgR21;CM#@XPB5t^\#!!L0VM56`h
%8V:kqA^/<l#GfuEp:?Ieco1j\^.qe<73]onk.\RjN83#D7OEJ7\eY(;5N5fHqpQq'^#^n1o06<irc2B:mf0]0UgEKh<Q4fAmS*t:
%s)o=MH"%N$EF!^diiZ.a0<L%9[ch&d)%K'9/,:B6:D+fL_O9J"9["R8l"^Yt:TDBfecGi.l1-__[jHWQ!_F<8&jWT_D'^26RMA=u
%?>3P:lut3E=1$$+IZ'sd1la9fNCc5;J0h2b)ro9Fagm<NP*WLDd\W64<U<H]?F'sj5ek(S=!EO-B@%fU?DI4p33spE+JW-03sjuR
%UQf]'V-O^+354;P'EKj6b=tpo]E,5oTgMSVq]%oSS$dC-5_LAS,j6TU55B23<*`kp8M]OEIa8$A]?CiI5.FE%c<m+sC5)b*<jg2F
%lW,.&';QNf?+^bLP\<MkWCp\t;\^T!0,(G(<4u5a%D7aMd?)0]Q0jbSmNn_?dK`E'?n+aT6W;U'PP`3ufRNW8&tKoLAKWMh)[s+d
%2M<O$]/@P<+QH@(<B<mnm*PL],kn<_R5,8\/9cjOUmW69f'#TfjdOADl.W=QeQAiRi2qe+Dd9#N/b%Q4HE"'q1pk'*G>s7t,Ssqr
%^a1\'4dT"RMCn(NP2;=Y[O=I18MVMh.rpZuVlYo>X&T@i&Vl"-3pK]4<=>TM[1o]Vm[;hr%#0`D&9@?;L%iU0.;u=;qS@@.I?i)V
%FesnVSM&WHkb?Ud%amSC1oQ6dL@N1W6%@*/CU\8=(lF)&f(2dLp4A&02GgQjMJ,1Tc?QYlL6mp`b,&]6nU#!D(2?:qS1E/Q,2U*E
%AoWo;b^V#;$H]fJAhitE83X,0R+/1oGZeQM3gl#qfu,n9QdfkL_q\j'Q)lsWd=GS&p1/$]5,NKAI*23NmSZprNdo>=iAVJ,OS1M2
%7-Ac/Af)Z4+Ik;X+M2T"DJggUP%CF4N',P7-Asj!KCh\H'-PT][-ScGQhin=O*7*Wk1PUZ%Y9SAp'#0-mRPj4a(%8ED@oFQ+1+4-
%Ukt;jNF=cZ%g(KR*#tqleuf3N%<9U3DNZj8<&d$Zoe;rr%$q3:ZL]+!G<D)$np8PQ%q%2-_3=ZqYK,O[E,n+Ua?>CQC6D@D'3Oui
%:PA1In![$;I:;n>AJUG:^C=rO0+X04Iu-!DW";b`<<E$LlL1rQ?_X7iWcR=fEn#&$PO16N4dCd^[o_O&krYtAmo?ZDe6d9CG;]?[
%bi]U0MNh(gDd3'M_hB%Q5T%UK/aSXO-RtUbg&R3Pbk8RF"ebT'fuLCNqEVrm9JU"',9fL/.*Ch`o^-dgL18pc:!TDKmp13eFn#p.
%5"+LYUUp][&mG]WQPj+%5SMm'RQg[T#a!9*Hk)E+],p'U#3^jP6T1Dm8X@SHDUOdVLMuD"%m:?d?D1DD&;#i$C\(0TS1PD-ai+#7
%0BOr=j=0LI(EPGjkYq%M?B9mFqP$?/pR[C/H4_l%%Bm,34%94:b]1;<<P?k[5Ch1Zn.lE75Tf#]p+A%DE$`*,!smhL&2[_s]W]Uj
%K.,!H#B)&%B_f5VP]Z/ARB"LW#ap6%'l"dT9e6k'Gpe>sBU7&)#jtW!^.E\D9#Fe!AEXl;S3<?9Hd^8kN(]cRH5km47TLDQ0PoE2
%T$Rt/2^T6ASo7XJ>(^Xp75j@.po*bbF@h[M=A=WCa5S.UH_)^Q:S'_U7]Kq\M3_L9>d9@51eDP/+"-aI1UTGY5El8SEhF:K_iYHI
%e)'_Nc]cnZY#soB'hGLmfPhOg@#*C=Z(fma$Trg*8D1M@[4^4A]XQWN_Lo>_oOoc[U^D#r0iU2b9:sU$ZeHen\5f%L>\rn;FU=eK
%0-HV6")U^:qTAuikl=BI3+9CCnNNgMhn,4M5.K3%cO2Ko]:>2M2""tEn$B\8Fa>]s%]3'NXIH@OR(^-t"4Cgt?%S`oO0T@'^'\b(
%S;`ilfR!qb7>%*]bo')[ccee4Q+&:3P$Te^;]]CdahB:Q?NdFF&6X:2?NdJ+>&cd,'"'de7l>\?pEKpn=Bi`GV,\uN6li@&Z2SD3
%_pd7\>b=-TpYYIa0%Pf3RL@c=W!O#0]/<e1H7n#(A27:&pG6R-7`<Ld>/!+/<D@e/'NXjs8*40J-c."Zg4o`-+^UK/@98k^gPm=N
%gE"_8g=/>Q?FK@WhHJ'2k;W3lOFRd3qUF@on!6h^LE$E`0Y?j@8$[K0S&(raF5:/aHC6N*113@TX0BXpOCPM/jkEchD!JT"`;VAs
%f@'r5"6_8,i6La5G&<_/IJ^%h]upbmpD^g%ap"^/4Jku?>rIJJkB@:Z+M*nT9o?KSG/SQ<*n!+fVVII/!d2WY:6A35g\V7f5QkfN
%P[sW.RDjRg-%N'%755P1qUnW2_+f4n9bI+=7;>hdLh%`Z9-M_`U*<a7nrP*#cP,8%hDJBc7Dh.`jT4XG?`L*Yb5ne(FZ^GaP5B6$
%>>$%Gp\J+knDDE2aUKf&k,$38>O]!;2rc+:(&Glt97-,X!N2IhZG1MFibb"dnh0_PN193tQ_L^fToo/4`L[^s2jE?amg:U`q?fXK
%Y6R&+>S3U)3L$O8Bat;W1qa^Qh@YQj#1?mj^iD=:,n>V1K:3F@-pW)VV7CA"4)FY;O3(dNI@28m@X6:7BV3ciPSnH_f6^snA7-NT
%Y:_O#.55utH+/n2P'RltI4gUr(7(bg!thXZ/>elm:V,d+GdG8olUa3en32SX30:0.71YLJAYc8BUfZo!pu5NheIj>Y$HOK2@6jIq
%>7HMC7!dq1H8OFj/3&hl*48^F%0FKj"9o]Yk$a-30uLtD>^PcR15nZg-#CJM;,g9cgm;DF<F_c'1ccDj2HTKQ&_)]Bo=Ce;E6/H$
%'&2,W_)P5W8sg%<oWFC%WL&ns2?X%jX9-L(eXRmNl6e?EQsA"S^kXLpX:L9"m1;k,X=ff>X/MAIVY2fN/7Lo\Qk!q,<SJ-U!9N4N
%ZtQl=Ak+\SgbMto(K=:^?\sD=c'>g`n%-FG,ST;VWOo65A*Ft@;GPf0#KU'U@]#Gk43VT7?#S?%C/iTeEOGG@3N7C0Th2$9UWrZ>
%5^G8LNMJ<E:$hTV!c;S8/k9NOk-H!G\T%U=DoX2^!,D,9M)r.08%n>;_5*2X[MaIDlDDW67A;t@16]gFk4F;r%gR&"dt^\*!2U17
%-tFeRgtTdR$]"YnG^k>@i0DVfC>tMt5E.3d]nt,r9p[h,(s0nDDTQ@P+R9.8,o6GUV/3Gq-2,SVh;+7sak^Eo&bo%WLqBAA&&d70
%c!1+"p</2k7`A?Q*Cq2rGX_egj$_*M,@$/sK@EUCHIlB8MfH#]=aUq:iU[ndUOokk-JF#3>&'A.)>UdBG3V4=3^Z>L_'.:Wa>_jp
%+AM`5f`NC>Dgni4U;_.5ogiBKSVC,%)g10HFI=ma'scnBf]JN"A's"&](tUVj+NEYStsm7biP>O0lqhEY;:FhOHr53qC7k]BF%8u
%^1piDff;0f,$j/<7\*t]AiDhHk'^d\26=cOP%FU%*a.T#5H[KloBgs2O1_$\pj#$.]k^AGL]sZG<S8ft=TDig.sHBYI#*TYZfbXs
%P-9_G00?<]il?0E-X8f*;,roU)ObXkFZR`S>+4ss.$T@Dk`Shf2(bNP2k)e4h4\#Y-F+2n`8Jj,Di#N%/XG(h`^a.;<#^h&e3-6P
%h%IaUp\7L8@3"f/KGj+%<(+Z(c02J*JHSAd9Nnme'A:S^;4'qS'YA-h8WG,Y8\\>SaFs/e80/h-7V6,)Yt5$0,qZP^FaaKjh,.][
%XTDU>5-?bc,iM5Q+*<UA0iHF2Bo8p8q-]>%Y15NaUV(-a(KH_R<dUpY"csm%1nT4b1o&q>4kV,"4"mVVi146).*&#jjSBm^&'/X`
%K3>jOL8$BJg597]@KNN/]j-hYD,;^c2f#Qg[]um38S^q:UKt[AN2!?K3*E%Lai:l:4e&!qGT-c^lqE\Fk6S!ISi"EF69U`S^F0D!
%1&s2bo<Q)R^s"[H>'*<8X6Rf"M&Hb<?$^4]O%A$#W]n3NKG+N`B53T+hH[*ra'\Ho&#^1`mkJ@<l[lhrT':gmSL/lo7Za@o%"^YU
%=T^e;7X)QLH^/,hYE]PAb;hl.*a<=(,1I$9f3IH"U\,r1MSF,W>9ph&%"/k\/R-4Ym:?FmGT\hOOgbtV6;l't_Ik+Np%!!WKV+]4
%cd*&2FJEoWc4EXoNcj'3a`a@%/Y\VQn_0jYll(IE?(]VOAV,rFk,#`5E?Ck7AB;An>ilO!9'f,Y64H7i**5"hk;VA3j@"k4"J^hJ
%B-(3#]k4ZOdcSI3bG"jIRld_BbghF)gc$XQ=hb5#Q<r#XEYh9]bd`L"2/H4Y/XHm\&'65+K5$O&]?XO<cS:s[CKkRk;1KqCGp\`e
%>>c84AP@FiKQ-G\QM7i$RcHq]i-,4u&,46I)IOj;R:J(`qai8u]iqde]Q/?R^rR(5YBhMJpT!=UCW>(8^NiSE#Y%"eWmuOb!=X4+
%Y,URualI6!$q?c6*'BcO$r.E$T$o]$:30eC@M^`Jo[KAi)!8kPH5W63#O!`s]uXF``6:\)lh0$o&=Ib6ld4LUb.MsiqZ:&H7ekL*
%5oJM3LV\1A*^Gm@(ue=KLf-a='fShVFq9Y0<6=5.^r9ab#8;Y_@Zf(7PcZt=^u=2"h3u@f!_&W`:)"(pSfbDS6>\Lg:.>>%lKTF/
%!*aiP]05s;5I1Bs\$i@`%FCI!b6,h1J4-9c3s45Xq#-b3KQrX9NpD,"$./WZcu,8(0.jb"*p*$A6SaZT9E<@XXFiI/j=X_<Om=&R
%`b"+VZOLC/N@^+Z@p00(gIWJF\S`E)a_&qi/naNGRp8,I0P%C'=`'',ad1r9#:XVBR-fEH62,c#q4_jkf==sk;QIp)0C>%0r;r-4
%o/%sL,#cd8#AcSA#Z%KCP]9;!9K/Q0#LLc@5YdjlCrQS)jGF6Sm+C-sX6Z8*/\O.*;0b)uo,3TYqg59dGk=_&a-uP&BkFj;.?@4f
%b",GpA6[:R+DO\n5-Qm,cXNb.[lGO<euN?.oI<,C7"T_"+M2Q);QKk>O&[Z1!6d:Yc_@aN<i_`Zc;:ZE3O@.tC6]HBE`]923'2o8
%K[Zn!`3n2V5+G3^)Ch!U-C)`C%I"OMcg+@$P>-oD\A`LGJrW=ON\l7e1AnhNL2&s`2nBCG[1bqOo-%8hb!f2)-=]<[bQ([<r?b/C
%+ED^Yi?WU+N)73dMuiXh%QhnESMLLt-O[+1@27RMi/e<t?_1E(VAH8=k_lRQl(j?\82Zsi)q'_%44Do_R4Zos2f.j+_sKl;=Z:hE
%W`3E"ErflMI&gq)F&uPJ0pP>+lK4?J;MX-"kV/cZV+5Wt@c%h^&hV^Y6]0@gc:qRoWYUa.^u9r;Q%pC+9/d!2fFQ,+H[==lGlS@W
%&J/YSDt_RYfT8A[h,`&:AlCa7'Br9P26B#f<Cq*qkR1bZp*PIl3o"hR=KCiB/\_U_l/ZK<6>'XQ?nFR\iJrPZ0>7G8UX0n6qSS"O
%*`B%''CF?_8)*uf?)i_h%!BnST^Bb5]UkHB7#!YbfmJA8g&(pGhJV<Tf)4raDlqe<kT1edc<WMspK5!nW)MYAq"SZSMX>(?gRY'@
%5N6Af%GW5fiWTm$*WEou=Q^A_GM?V:7cN5d_#/)a5^t^?ifSW`DU'nM_hiU/W*?p(T1r?'nSTBWcgU#D5OiXZ4m:MdkiVe\*hs>9
%jtU?8DB8nLhout)*kos40l$,<@=X14@=H:&E(<!V]\r/K/u,I3=,lo\ZH6j@*7d?d]f"F\8XjW2IHeu_]0b2k4kUCKa,g]eVi3)H
%Ve9j?_f]b]<#hMh[klt?9$#^"&u_o74DhBBf(O.AoKIDuRq5a8qrTkr+9$[YRq4;WfWI/k^C@!`EP`N+4s\T%7MN9/`*Y'CDk($0
%*jP9W;s^,i?q-k412)"ZOOFXr\2U.$=7F.o1Xi>Np;Z?Ujfpb=lFRReedo"Pn9qJghf5H_cl/jR55)u&U[cu9Q)sfWcSihSaT^n%
%VPWt"2TNAI\8#rP`h.\:)lIceCN"l/]H0tX2pM\U\$j:*/]l]b@H)6j]JV#][RS;T>@R`B28X;t4.Nb!8UJ;Nc8^e70("Tr7`hnk
%:8rnbdeW0bGh4_p5&HJi3KNSj@a!54J<"PXUci4*lOmn.b4LJrH"UAig)9)IPM!Na6_I5ODfE<GV`K7gg)-$*69F3V;6tGciHDhY
%B,o*^GO:>V&od5skHZMec?LgnqJBk-h#tR'``%mYX&hlBo3eS=@N.D87154A0lO-@?s2q<Up2f"&3arjB0;;jB3`7+(kpf>7E8kA
%"Aimj(/M:6]Pi^7YI,t!&6=IAg(qBL[r(Y?:/'@W^&)8GoM3-fM`qnl?Q<k%d_=q_HJ95<bkpCA50geo#+5/(C!/-rM_hq<gYuIA
%qUcT=Vi+K@EaRl73OAD1P'^nQS-m$=;I)@Uh;%+G'"%S4hmZ&@8a[#*D/nS&@Iro%k8d^[5m"H0piG6E=W[:K:[X-r.r/iTD/Y[F
%Vq_/\:EP78aB$S>_=OlZ<hWNB[X@e)*Eo&fXgq]X1if14!HOYZ]cPMfV2N=sLg>[#dlG$#Jn9AoKQ3`uY?EDD]W#c_"]7CuE@qX+
%GT*-bCU3nQ']G'>e(H^4Gc5\AFSF4Reb#94#6l;TX_@fVJ/nQm0#g^qI8bM*;JQAKXnW8eSfKR!:6QPXBdbd<m/6([c`\'H9R$6P
%6`"tnDC9>/XLE-!jG@@;ghUiQXIX/kVW0\='96?'#a4u`&Rc)S7Ha(@;5nEkb9``Y-_B5WG%U36(NPN@kHW_-P-bk\'gbrin2=Fu
%"m\^$&tDtN3UZArMO@Nt#ZufHrZi+7nYCqec4c[FEEG^%Ra=(rE/Lmg\mdVEAmX0\c3Rt;*hX:S=l:@IkTEH.Lm[GhAm-""cuaFt
%51i-Q,FbnRa$_aVHZP[`HDrZl2B].4Ak%c[eGjbJZ*?OIBrUl"#NTtgq+qZ5W/$VG*R7n,_rBhmdVX'ASN?#b=O56!d%h>pf^JB*
%iM.)fZhk.+bLKef.oCAG&]P@cE`Cj]\^)_^\S^aXO/H4+%rLBL0o'"SYIeuQBcKu?dg6HrbtYN&9d$p13aMUl3B6(7\%-%6XFuJC
%gXhBLLoTC#GXe4Ei'EZGF>oimG6[5]&Y9C+@/7YcS)B3#7q'*l\`[snDFcmQ!MoNGWX>WW<;\23i]$bNF0a[i5?@U1*9_ig(>J=,
%\b&de@3GmMbK\!$1+AT'o5T[5MB2N)*9A>m-Jj\9"02"AhMA<j,pX,Z6nt$_[Q=#E%T/GV*\f%35BhISjY]D.J9ZG?2$FQLrc.^%
%Sd$8mkm6"Jg$5i?i$u$-Xe):\,gh"#lYsB![;j+Ap#Jt]AZC^MO"sY<Bi;IKm`)<`1,euOiO2YF^G3jo;AQ4Q@X]WEHQG*/AtfNE
%ep&Wk*7muV(22OR2AeKbn[,s[g/e,H+qVhE]&jEZY&0Y4J?;au!ghX[nqOT0+:rU_0Cl/Pq854#jaI<YNb_&oS3RQKPL,Esa9W6E
%r-\j^iA+.'X@52/cuk/cm`I,&0I#(lQ]^I<<3E'nUXBU6hqGr1hqAOP7_oG`>o&c2X+B"LRrol/f.,.MJ8OOg5IkP\jQme&C[A(c
%B"t7tVg't;>@SaN*>7.ENC2[437X_aOL#fV.QMt'<U4gp)!Qj8W+6i`V.FlX^GR-RX`2$4J>"rTndiOEbN?h"f&h(Gh;l"&h5d3[
%gY/1#]T_+(SE<4gF'G-lj5/kc:U`2(]@78OeWg_j>77M`\$_0_gY-c4%A,@CNjp^m<JNBT5$#'`QYXU<5c3kph/NluF<:U+>XLH?
%o#`Z4[5m=XI9S`O,GD"=#-QuInflkZ9P$5e-#b:<!1&ECN(m`?=h(VCb_G]!'aj6kWc`)b4'aS6-L27&q5mr\<o%oDrRU,q%`7YG
%0i,QT\=-idpmN]N*(h]8M+^EhW<4p%(B#qgm.Hh1f9=ZCT9iU@e<<h0(abVT*q_UnqEFfpP1RKJ5#.e\Ql\jBWu*1rS4@bO!TNs#
%dkPAYPRIS)/].Wqbs93c&QCRUMjkfeIGLGeZC%']8/I[co>,,.IMQ[Qkat[-6l3G'+Z_Zb).G]pbn+A#C'G,`<\cY!<"*H$>nE1B
%g71pNP4T5%>hK3Q/o+_%1=.hD[5mnJ<TUO+ePTUF0/YOe<Z.o2V.:+b!nDsep*f1-^a8X*gHA\$K9U^=d;B(9b@;!KLfNN@L:ocW
%=(i,ch;:*9m]m$N*7F&X#)"m3S-,[N_r#"cZplU<2W;,7j:mqFrRPkBqlMG(l!\KQ-TdIP<IRUc3f't^6dUer\@dWVf%(H:&t?Y>
%<.M;#Q/T,pao#76*^C$U2[K\=iCHE5!@5)Raqu8Ak5N@u`$R1]g0LL7l_%7K%4i!!O(YmsSFE]9X]Sp;WFCW'mY5O5$f`Y/^;F&J
%XN-2AG&$^H5$Q%_mhZE+"XK$K8WNp@NX3P>;_[6_?l*iglg3<BD$[!(!MWaLPn62dM,Q1#*/@\$!jNOPO'ob^I@9#53s$$u0NduK
%Lc8DeGlc^P]GQqcNiKd6-g_u:p9^$O1)>(JAdg14cF-a>i4&bNI"/A:S,Dk,a?B]\a4^/XN!oC!Y[)1?>0P6+8EA]dC!r3&W:S]J
%KaBeWO]hEq1W9eu2lk2^oQ3J/p[4^pbGcQD@D=]6><ob[T?0?$)6%PYE&sJ"PWH,gfh+TX\_Hc%0uak35J)J>;VM=lrDR+laN4?8
%0\PIA5Xq(_;PX[G""b+o-9Ac^h/6at>[P-2*6X)>F-.G_0.b:%M)2cer.,YKc@.G&5'O*i/3OABdPd+i,1Z8Vm:(n4L*c<-(NV$O
%Fs7eNOXYl")@1A/GKDS;W1t'*-#$86N*lmjc,>BYeXU:04el^Ud="+NaU:sfAO\Z(^fhr!^sE0:5n0s;bru?g7PTJUg(sICTX'u`
%^3Z-/T+\%5*AW!p0WKjaV<mp"f,Yn4WG"9h+S#]1K<Mrj5$PHYFD(r8!b@f"D?arR"5de6[#E4R\F]F0/(%b1M!K'i<h[.!Y7P=4
%AiP95[Pa0dOra98*E`kMQ5\9h^tgkg$q8W;Z8/,J(._P-;YcB9/"k)ZnpO^qOufZK*cli[k"SfkGK$?hPu^LQbuAE>R#poCgcBhi
%W,;u'bqs]sn0aS=X5aD-CuD@AL'tOML/e[Q]PaX'Jd?ZqNOLJ#A[I7tq18<^p'jDd:'-1p8WA@$""#K=Wr+Pp%tNZW`g3CFE.]<g
%I)9!'@4+2)^^\Y)S@H]B-pTl>4f@C'S$R0^2UU&q?GK,N86g9SmjHAu'`eRRG!.BZZGX++IqdmnGCBNE>NHf!B13kbY)pQYc9^X5
%<OD!BLpqe>Cn"0^<rB1cTfaPAO<Kn,%4&\OOa<N]2"nb6LhDZ$If+hAf&'0K$Ub[MRlr/#Tp)9@-u8@lXif1X0gXG[F&=HgZg<g3
%qSOo]Pe>Ck9>[D*@_2lP*+1b&TPt8#?-I7)=]#=<Sp&^PBJpOJE?9lVc4RN%`M3a;d]UdK-<D`l\?j?UKY\im.<fEqlrjQE9XX^\
%@a;T_W*(;hdc4KmZt3Kc%rtY#Pi&"1`6S3p%I]Z9`uUR<SWV=8X'p6,-Gi,(i`7sEl@Wj)B'N3(X9o!DZOC#ILS/OGQ#,u!0(QY<
%H+t3h'-^4Rlb4!o-94F;o#bCrc!$RuH3*d4ZPFmG+9<4[#$>An"!!+4VqmV=1AIC^`e@`Ze)l9Rr=<r]onbL>%\4Tp5cA.i1Hc.:
%3-C_2:FN(AK`KuK@*Y4T#jblUb$#5L6*5H%]Jgu`9f>lN<Ed=#LqF'V"_DrsGD#uT<LQ1lL4"7HpT>71no:F?g<7+l*/Jjq2YhS/
%oTn2f:O/cHh<B/U5ZW1>AY\qT%tSge,%<Ym9uf0uP>`W*Biq0iZBJ>Q6Ol^g3#F`J@c49'Vq.m.)l,u(C^o7l.4D'K1G(sAMPBkV
%9,R@;])tPa:9e*`2^X."UmWW!;ck]IOfWgA]?r*K0hd9Lnb>!V0Qruf-^&=me37';ojLKfj;l6LTr"V/C']T)&jbL(q)"Ifo@3&N
%%-"gX^TA[30C:j5jpFK+q3mn43-reIkFs,Q(1V0uOJD:`o]ENc]4kX=Lo#<8hCU/c>'#Uc&RF'cJ#qh9eX!$CT+iCg8ljeuYTYr<
%5UtEEko%Y&)RQqG(f6?13qlNg64NJa?INAS>M[GMX$0sOYmKl,e\m*3!XiV]mMSU:b]bPkfo4)/T!BcU:L/#",,%Y^hOND:YOVOa
%ck]G1Aq3qFb#B+3IEZG_JpN0VAD\Bg5BZ%"^^8Uq?g!;J_jnL33Z9nG2>2eZmQn6`OHeMKfE.Bt](&Bt&dZFW4\V@&M4C9;YNDOs
%O8<WUSc;P;Z!?!7"+Y6U37gml$Od':>4Cnu8G-q@#B(g3p;6^^Tt(E43"J#c62<gu)U4<(=Mm-aQ3_;N%F:ne;!8&2W;PEKR'RlY
%0P^\F88CmC]<pb0TLn4Wh9@YTL=H@%-BVVU#8K1(8kM@mip,t_e,o2`.;2c/do[.KbM]BM//u&WU_8dXi2,V1KjleY)PdL@?r@%e
%20Ba>2&mn?E_$0Xf0f;2Qt$LtF0*Sr%)n*gR5eZc=2>*kam#QhgEMZ^G&Q]^YHHOo:WMb:D+1b8Ibs_b\;"JAK=?immePS15QMeU
%D.t.($N,jAC;.^r`#Lpa9q2@7X)4-Ji);5X+pF68Q";AB@Ehhl)ec]q:!Kh_!]iH=*1V!9C\C'[5ggMj2>&ciN2/,td3*$GX%:g]
%H*g%@^hom<bfJQ*)_uW]Qq%PSl'B2;h`uSI`A!!2;_<BKHSo:JjL3!1M'g8h>2A2]mac_N.P?1K[=G:l(MfT!`ll=%7s2<6g:c5k
%=F4sW3NHad=k4L=8H$c.S?_Z`kjDW6LlJMBiRn#GK54-)8S<>n6NN'&"mg+BFO-u,f[*#EnRAJ4n:FPc1(W#3Y^5dnW6A@t_tsl:
%>8,Gr;37PC))iZ+IR;4`h2*Y:0ce;^11b8rVQT-P!"[V/5FR[O5QhVhitkIG*\#;G*K(;AK#@a^[$c+[k(@!@-Eo4ZP"%$bZZ!lO
%`aQ;[.G=3;>C>s%[5?9sX]_:3R.XNhIF$_l3;G\JRFCK+7o-ntW:Io?Y:3Cc"N894.#(hHDGI=26c!Xs&p@S;qCsKpRV.9mI5.i"
%hSI)AHa-,P6Ob_b[`K;9[mjB"3CtC<(tbs[PV!;Cc8N6?bp>_$hm1Sk]tGK/[\pF0iUP!TY:RKSQLXU4AOkYOT/oB+F5$s&bT#La
%68a6$@ro4#!Yej)[hIJn:3(](rOU.$]n*+R[1.2\1*puQ89409L582'LsZF8h:_h\+%V*1be@Lpnm"E_<L5QdZ-sd0H)BDAf9Dn2
%s*N`>EP<]KiUKYt:LnZQA]WR6%)fdRTR=B4B^D''[/Db;p\cisOl^N22>54,:[FFql7DJ=Ddm(0hM]&l3]V+50c%J8`GkXANBp8_
%/n6'a:j6uQ_Y/6!Y.`LK@f_CnY.[%&7g<7<ls8#`]FNcmgK#nQhSd)Zh/tL#j<beZeLf#oE:0:KgdN@^po=1QO"C@3[\Pcac'c(h
%9Q;RHC**)%E-?V*^*,oqkL%HTGc7WCqO3LPM;,[C<S-STbCEqM^`/ir8P?FE[[Ol+@_MG^rq0:U6a7E1#&C>Z+&POG_jgm.b`Ff?
%a!=j0USR^]835OMc9e>@5%&Ib^lGWp1]@1rVuWl:9)Jh&^pRJ]&%E"b"X[[1[WRY:c>&1ba83+WUFs0$qZTIE0+Q82X<7Wc^K..B
%:8?T:ncIuZBP#jlfR*_*HcQ5[<<1'gVTB'RQF>pg#!s44R&+3qD-99s^2fq\H$r+e@i7a_@\lPpo7E"JM00p=(U>3q3K&t9%2UiU
%?nR=G=Hb_g=GXjqeg!;R?`VI)lTiqb8f!1"FE,t&%PUMT`;UmegMRULmu;m5J)i2Sm35D4rDMJ7,'RC"qK;IOPmR%##pU5!O&pJa
%=s);[``t7f#mkko@$ZQc4B,<2I8*;`iAP]AEWFYfp=?<&:_t?WX;(,l[@Y&.@``mCh\PARGaO?8>&1dQB=&5+$VUUVk"(<CQpqI/
%PW#-HLopWo\ZD,sC3O+b@b=sm[q7aKX%>J21fqSY#E!Y"?S8tU_1)"&ok[:Xfk>Kt'X&,7dVdnGQ<s?qiU;(bM&DJ,-'A%ME*3f&
%JXVs4I*>m"`,18'`Moq]d$M\t>4GYNQBZU=>'YNZF_PuuQZ$YAN/#'lg\n>jj-cakJsJ+U*rF/m:V)u4E4UZl(.JT=@<B(RM-"+:
%Bjm8H/%5:haRH,<dG/1,ZIC0fDM>Qk)fd$[rZ0;R&n>l(qsc(nL(rW2SqfXRX<CB\P!ol;A5NC=eTBP<Sr6p/gQW^/SrdQm)RCdj
%=Itb^7(d$\6LrE[[H:bB>EL-:3a9'W<bl:DLu(NsJ6<T^$sA2&-db7%,g7V^dHS;S=VREbXDH"Ql#o-cj!gbWeZ.R-bDi-?7uT'h
%c8l`S3#=BVpGG;<VX\'H03@ada:RLXrT[j&)6gI/#ls$;a-n1i#[nET(.K1KR2O!@jGcdm)'3p[KqR"uV;a)@/L^(T[I1]rf%TaK
%^+Eb8M-/t*=<S$!8@(9J=ND_oa%pjm56u,G^qBc!PO7=FPVAFn]t/':Wk^lV8R`ls=a@M*1*0U_(\N0WA=#!Mg>fHDk@5f"R.47=
%Hs]B2cLRW/"k\htT#ER^1#rWI@2*)b7N"<f=2cJGalo#"buq79RbIQI@FMtBQ^h/%q$t5pjSe77c20K(7j!Lg[4tRaZ@+^=-jhLs
%U6llCG@LD"8b=E>4sc'r%tWq6d'#BI"Wma^hXM"<dZ2RJB*pg(Uc4i9'mp.O>[%niU`k$k4Uf3s)Ne?d#P2cMZDlS1("d*RYoig<
%+S+f)*r>qOY/P.lA%tH;T&T4,LmE3FeZPie!$9FJ95XbQ:%#?0,lurld2mT:R,0e;H3B%dmJ=Hb%<7-])p$AN/4tuS#X#uM2324M
%^a#qF4+/mR#V1@omX?rCj/`S0jFKhR%K>M8^`u*JGFr#5Ab^?`GEA*G3[36n&M@VH#YHc5?6]a!A*:Se>]P)9a@M&Y4(_Eba<Nrl
%&mQKfS68-(9s$$[T6ou]nd$VBLFW#=,70=M,71]t,6W0KZbfqR:&'f7RR[@9/s2)T!i5T_cHKLQZ:)Ds*[+WjXUbMC["h]S-=TbT
%.<.:Glk/Oj5MdUX#S;^DFmBoei%ER[U#7.Sd"@B9KQ/[U_%h?.JRssShEW.FM.esu7j`fTr22:tAE4$,b1#o$+X&`a1!#ML`49-j
%(B(0Q<9PSn#_;$.9AMgA6nI44l2D8]@g"1,YZdUs8n#kl7ZMFg,ZjsuE)C2\'mqJ,L^h&79mcLERtC3121%,Q;eIeZf/8?1\Z$'-
%+5nVcEcT2(*C+W-3-0",$nLM]$nk`&P`j3Y,dV-OWph5u[W'Jkp^sT:]alRiL^D5g'HSre7N=1mYk7E0'V/NaSd[gb`40eMr!9.?
%P_Zf)+!Kk)Z<RqfF/PG/1Ao3&naIb^OC9rHW(kdN0Ppo2mKRq2OgZI).f9S<^+8+q2-H/]*lGk4O0C!T2[!g\<'50r)4UV<kg[kj
%,nth3@!/=ng=@l*=O&3/K+c@QM(&UHAAtu`F^K_$')0XqlV[iu'7q8sXj817W!=,.+B]@873Hk;HbV-6a`U:`7DW:CXUdZQ[4S-G
%!HP\[P-*Hs<oV6?knn#6`4")4qLC(eaU/sk"*3R.N=#^pNKRt'J=)="D#XoIF?^uih6!"f;3qN!S.UdqiY9EN!RY2=[i*Hs7n\O%
%NI+Z0K^@"L"#*ub3'.^ZVCI`8=abgZWHc_5kJ6N"%q>2T@_uHQ4u^D_I;[tWS'^Sm]nh+3_,G.!M1&L0Xbf=FI>"V)S8BYI@1/W4
%c\[(=7DjBX@NY<ok$k8jlXV538]3dm>=:ld*P*Vek"5)fGd+!_liV4Ykos#nDmGaYer32E5+G^ra94/<S<+=O%E(H#Z^VU3MqDZ:
%D(#&9$8>d?,PGill&HX>f`tn=?]`rra<AK^>mjfZ4u\R>01:bU8XqsAU.OCam)+rn+JqQo6Z>S(dNRL[mZsf"LcEe@;u<qXFs^rG
%NiUu$A5EMA9'eRE&')9Wj"R>@OPM#Iam?o6kODbl/EnePYn1s-i,=#Uq/AWH-qF"k>K_IA3qPU'@NPS[3ZjG#8-"AsK?n%t*j2C`
%[1AAa6$SsSLQc>L;.18a%%_')*,6*H=g!tc!$(Asj??.EMVNsmcao%iLY,`U)g9C_l1<l84[eGBPP]<JF=6Vk\W>"Vj!i&tekC.*
%T,ZeN5*g+6Eh?=DaF2q5$IANm1_cTrEVg:T*tH^Y?j-=l\:&nK04Jquf])TnHC3b($<)!B!/[(\hM,OfrK,chZcOF=n04!j9tjeQ
%c2*^,0.C=6(8uo/S_T"Ta=]PeP5>4cEc9\2EW&:5?7/N/;P79<10<K'K]sWRiI^a$j%f#0Y_gAdj?>t(9B8:$#'ToKj?D@P8$[Vm
%&S@>-iq=P$T8D=cc*2X`B4/aa#/cSsCI<3)<s'C#6X7Ca>7JOKqna:r<68tXc^%?X/WgD<!bLMWMSb5F#FTS2Y37PqMYi'?\8DT.
%7[5Pj3s:T9-@9jb@/.XUE6jlEi*cW3\pHl8]<n5@7of=e+B/"38@HcZW.sm!cBHt(etGX,7RS-S$5gm.2k=_d*i"CnbB^I.i?g(b
%_/mcOP-*TVC`6N(enicc>bE8QG8T%9Z@d?\FD9_.&GJMp54U29TRM&'0#%#kZ&#-Yd_KQA,Fg&%Pk!BIS?#_`IM>K$e]@0`ZJL0Z
%fm7;XCq\4)^TO$hO+rp1lO@eNPZYZXKqJbCfFht[)_+AH(:RqrOAr^B`i@(h76uBu`H^tg;qug?!Ue5bh.\ll(2pm(\I2*B6@>N>
%Y)r&RX0V/&0Q<+emW9T=kV8XM`_GEPl.SunQTMESC_'S+$VXU\`t[_0\u<r2k%Lkbn`>=c*aj<XfpO=A7p<);3o\pUs-V!la#H)0
%KXWs'!f6`W#/(8Wl24.a!BK:?EZ.kI7[t6,JU&H600K1$8&-sl=8%],c2;op*l-eaee$6B2iF[@A6Rd:D?im180)GR%*\OVRHmQq
%of3buSd39$eom;ZpN\XKk)b;Zduf[=`V`#uCsl:K^@<llK2(bY3t>.$b6P:!.4`f5Ot#0II/T]iBCs2B?NcXPp6">eJ`aniW0O9\
%3h'^9)(qG>M)$X%`oYXrgeEP$8$1=2D.R.l162#r]=>"lUScWfChbn>D*\KX:/u_WpW`&EMuAkQ+*"^di(iam=+P7bE3Srq`GT=!
%*&S>VC<EcRk^:<&=0BE5mV%P*OYF-BWnG^LL.)/r@BM_]04uG[>e.9a"9WN98M=!P>bD?l;_k=P6:)\A@]Sg)`o2dY5N!dARgW>>
%58re/6+$bM_NH'!5b,N9YlXB/"c+,UqTT/:n@D[/QfWs@MCl0W1^<5mcqtpSVt9.@Wh;g@kr_,IH4k-Abd`SkZKR=q(sQ&&`5)L?
%oiL"p<>5]`k](A)69W,gmt>OWY[[<KO0mp-)k;GJP=ln(<]i,L#tGdcm4>;SNpUJc_MqV=f2&t)N%0N,Y,Gp>Nt]_=/.QHed1bN)
%TG\r3d\ILACr>[Oq_/e!N**V.EZOQq&Xfji7GHB!DR*V+$E6=(48bV5.:?^aFAWr$IBZrWP#U`.!?>(U?riDfKRk1fRmRd)P>RuP
%LZ-1FQ)%EIHm1>@o-5d9`&$2LoUVb(h^ClC&:*mE7:nA@WMTL;B^7DeaWaiM?1uX?9bHWnPK*%H4If&a^fHPlTmPM(gT58.DHb=C
%CR]FlD<F3/\(D/@6MLP$\pKt'of8fIVKRB$R<W8!mHcVR/&K:8]IrPO05Z40:uV_(L$shA1cDRA*1:*_dUfH2UD[;"N:HFsL1r,$
%k=B0&D6"Y7j*CN*Ff*ol<:p?1<'2>)I<D*-bGI@dr1H<Z2Q[2R1r7Y#l7#MoCA/'>@+*g"ona-"C3u#c_#`lIOup7?03`^h"eHX&
%mbqH/1tE4\('+RY/&ULQF/NTkU6q`J"j"d(MXmWTd+WBc!V4m^W1tC?DMS[1";=(TlDiSWNqco6:7U.39P<'@Y%+CS(EA[Ta.fE*
%N!46Mf6WkY.)&o"Y"de^,"aR-6uN@<V&q8Cn-=+(4YI<goqY"RO@meTDOF8.h=_bPcp!?SC>).k*\9jFK^IE%:Ctnp?0>_'f\<h*
%NQ#JB^,RC$=Ku`]]m,8OcbSf;++[.-k5WXZMZNW.9R1"5(b%iYFPiY1Nq2>bPBBht6K:PI)*8k9MjZ5:(>k0neK3R*Mo/#p>,5&)
%^h6Bg@1U;dkjgR_bVZ!XM3a@_S]=/A!^UpcQ\A318b+$:c.8)#V"HuY6I^t=VHqG`Tdl-L"*i^b[20&R!t\&]m\^(8Fc!UGhJnA#
%Nj5'bnH"O]8k2*L[+9qaWG2rHGe/56QTj0j"C]%&h=@E+jVV:"2kmius#t4E2WI*G09#F_`_B_DfLTV,b]B5Tr[gGT4#th&6\QP.
%G<>;Je!N&^I[`fs.I%F5\SMk<]Z>#^aOD)B2SGbme$hiZBlo_X,-I&$aL+gOLLZ)$laK(3+[Y8X7Q#(lZbVAZ$uC,j6'fd8#aAQA
%3])Ml4?UQ9+qHWPa`J><BWcl)6XL)OZabp"3q&YX]<RN957%=@LB5I_-NXe\;lDVY*c?qnW_%bOI:Ie/KeDr+_Z3tJ:X1`rbphop
%G.98UXA#aN0Bd]'],$%NR*$8R4RDPHnZ]n=X=NZ,%4jDC4T9A$&69uLJK?r]/&>M5[#KFE8&)/5_FhalF$0kGMo`H:qYWH#LtKOd
%IsSW*'nd=[YsPVQ.;taE04HY;!UNOaI1!i[YSDg+"1FaA[R4$'$d:GQ))Sco+R[Fl^r%.@=2r56'-kH<Z4EuT^RZ=[$qqkF/8r(F
%SAFj_$L>Vh#p;^dm;Gi1h<XOEMEKZ<<j08DT8@OD"O:.Nd)(l;B3>aSOfT@9U@_4c+u-h6%g+pWYVGh[Y/I:M1@QtuCW+s#^r'Eo
%mKLeL_d)>1"k3'_iQFJQOb\LmgEQ2B&V"V+jP_';ObX`T=6/<ZBNB"=r;D83*f*UqR.RJ7ecnJP'<+%XgT5$aguDhoUYWfi"EW.h
%H^mm'diK*F,I4aRHNrfd98u[COD[8L0k.D:2!l*FVu=?(26CT]?qFs1))SZL,4=Yc].+pu$0ub7^mkmqG#\NS`$F<KhrQ1kP$QVK
%Y=N]@cp7M#f<OntJ*po,UA6]1gC,)Qc)MTn1PZMFP2*4:E*cp-X*V*,IEG+m5q5A_b'LaP8U8OYY^P[!i(a'F4[oS,g!chlC`27b
%RG).=B^M]Z20$)!,mQb`$o"E_;1"6eYtZtD9R@3/OB['FNrau-RG)-n)I6ZYf'gs*$VCV]NlYH;5>Uf%R(4EU;]j3uUIJ[p#c-Zu
%b01Tq\_14BH6pcMUZ93r1&<hs/&iuj\RLLsQn-1,Aokp"L:Q=.iGu67@Xoc<jCD*#HH8olofIC([,nLMJLSFVK;dP[)WsKK;Rbn0
%/:G9F%CjaTZc&7o>LrEc3BSs-kt"[.D'k;`S(AJ-82LJKP&n339\<3^;UufX\>DHd0LgRQO/WiCh#M"6Fca.\ip!^mLD<0#KMsRK
%,OVO3M\1.X_OYVo7bg/EG!$@\,N@p/$VV1W,?1W_eG\TeR!K::gjk7;2PhlhmnMYVK^<44Z''@DcfsdtcJ-V%S%9T%[i6IlrB_)c
%D2:p>gqe_gR-4)P3cFbHCb\kZ[i:u],9(RqGrf)R*/,"<[)<"-LEj`)4Qj2(6/IS$MbOd\NP-8c(_>;P)gaMr;smP]3.:OH8u!F!
%h.VBlC!h,pdkcFH)2(:NhgML^MnU-9la?g[h[P[[AO545+gLg)D@3V07,O!>VF:n[6/TAkoSSB+Ced2:"`n%rV6G@UhG1Ea2#;(o
%>1L=4#SM]1SR-r_RuqE-q'(5G-`WY;EN(4!dFd.jUK%P&Z?KdfGiAQ=(<T"/1bP\(k:MfGl0R5^;!F,ofXkdBW&DL1XQ]0&a"a'>
%H[Nd7![L&C23Y]mLqh^^HT+>`;;o@J%Bq:)RB^r<+WXD+G@r0:8q<>1)Z_P&bj4,;GoSVR"PuCe4e!=?pD[928YOj$`XXPRS%ZZ^
%/=AT_*=$J,Zcf8!K)fNuKJk[,J\_eQ4T_r+?+.kf#t,I1L\WqbJ0k*d0FLtD;sYJD#;@qO>`9Ul2r=uceP^2j9f40f"Enb>I:ks*
%BMto5@3fVY4t*0H'a;;gBFd0bY?nl34qrgtYm]7(dgL-dA?b]DZcXJsRr;X<a=tqV$0.d6bAdY\*CS+k#8Dl)[+_6"Jm,`%X-K[[
%MUO^3Jt!?&*m<7XdGO.b!rc^]-m/r3K]0e#(C&(Y`31EEl.LeE#-FpQ#6HFe">o2LG8V1I.Ii;"FX@d!hR@*9]7<,+2+S"PFZj6$
%X&.Q\2g\EK?t7qt?d*En;)(68W2b0-h^qIpC1H'o)6SqL&[5CtP\dnkd#opU'IVG)dq!P`hV7;F[";C$13AORXO>A6U_0(Lm?N)\
%<3]K]J0n1FN6sO<jrOf/2P3DRN/*;e&moFGX<"=j:o+ATrmmf_`)hg"JetAN@]Sj]QRe3>eml,IpT?#N/8<IQnGt&(4c\%=+=uc-
%1OS(iiWd_"fqqJCP;CjAZ*,fp"N&kR@g:'fD3sp*#W=n3/GVeOCKY?r%-QkPf,;GUYoL^hhKEdKJ_[/@J9rk+Ffd&)eW9:n<oSQr
%2"U1jdm*aW@1,+9g7J<#;#INdJ,f!Ah@fhHQTtC6h6(VZ`,s]!`pihTd2[fF/lb0^G3pW!46b]8^bbPPHL&nVbT:kkPRr*JhD"6`
%D^BBSo(NDPX.EWJV+NUH8It4#o)7nSM46(sC2W]r)#&THTQqW@IS"E$<5CTS[AWV3:.?T.>>]t4<X3f=J"CO(nHJ4O5pG11?EZm8
%XmqQpo;p>hp=G#UiX\e1Y_MmarChM1.M1#?i.gt/+SK!_82Sp1(.e1;-$%,BMF1"f+;&uUYc+jn'`b?5=7K[akM>!1nSJ"Z<=C37
%r67_a`4=R(PO]a!D=iQk)bJ"&o[N84AA;$FW"R=5Ehti=!,bLUo"d@:3hbl1i7:tq2tn[mcb1BB^pRq+Qs!F?n0maBaac>FL9Xs'
%6.U0s7bM<c_KVc?]oW/1/iK[t87,RBI3J@4(O-mIcap^AMdI^'>3+)gNR]eDlY`R4GN:Rg[04?iiAuW]6-siLT"ij8Eq;KoblUnJ
%H8i?qQ952$ga@WfqZQE$X%U/$eaoaUCZ)k2CN-sI$V@J7JaAn,P]u&TZ2VZVVsYLq!$QB_H-^M/9_iH`#Xi^@RO;RH+TI,'@?X28
%HROHPYl@Cn;0VPMn2,4[(B^iC;DSki#c&NlP#;&$RZo#7Y#b>a5Yqqu%&*`to*DmtB#Y>!m%te#I0EA-,/'p3*)6US2pHmg#S&De
%.?7ll%/2/XAfIsKMgUB,AZ,kW]KH@jcRf]_f_JobE8?0[p`aZDfBD-M[u>rgK>mq]*<<\N!SQk)"jhiZDD6IXrWK#WJiAQ+66D$p
%b%P0$-BMfa>!EI:k[,n<=d7`S#]%l:,^M8u4uk((/Gg#_Z86G80Y4,9o/P-F)AJ02NU%?*1GMDP+\fQJSBO[&<`.,+TDh.<.hr6j
%La0H?)=PfO=ogocOp(-1]VK@pn[P.tJsf*AI84f\)-*`n6A22(,HO;(\Ud)=X_6,oOY$>YMM`J"?gPdMOXepnahB6sOD&*2h@EI[
%FOe87IVP[JgP$jV-DGq$)L/B,'5-D>`D;a=Lu._/Fpu;?5k)m(/2XcnFgp*.@gEGbVA!P%;Og5q/g!g:@@H2emLq].2V-Y=JP`lZ
%A:pp@&4UC@6lG7'RZ]rP*CWDjniNAm]*^d7AgOh3W[]k2Ff3OB6nFnHJ;c2kl##$c&$_QZ]IBZ*%Z@N"]miAB!Mo9D.1[>q8J%_L
%nOL3f1)!"bs7(W0h$$E$c)`<qe>TgHn^/5qIV@d/e_FtC;oZ)sRaF7%6!Y@`Wc3g6)M!.2poLqmVi4MT3=tf9.+dXdOmF=El84ZX
%<:`@q!u&c!-P9^X1`Z^.mU[3o:(=:ZD-&J'"iAnp6ssoVf'HQGEu[[Y50-lC!>V(]pA>:YgT+?2\1niQ[RN`DIY*8RSRs4o3APQ6
%bk%'Tk%X.Vhig>h@3t;AdVs2PGb7aGQsJ7Z50T9i,Sb$"8d)fbCuLW*D:$a,l`Y?bEk(P]fp[>Hm0a3[\hUFk=^DY%MPf=WPn"Ii
%@\^GaP5L(();I#/fHZe!ea-9bIBf9HNG#VU?#gX1dSf2G@$o[#9rHu;_n#o,g!c+`]3m\6pY;b((e^+@\mD(De*%eFjYVc[5%o[L
%qsWI$J`^FOnt%n3*-Mr;d.BW8g8M4UGBa2%4Fjdn\##t])cVEj"jI<u%BmZAS"^J12<`amXYa-o<F'6GQ,eX5*f%Aofea.\pH$Tp
%HO#]/KK&2&fd&?h,DI^cl>%#4,$ZQ6c!j3la2'7_Xo*H`=q$<6A7J397,<7W*1*`Z"CVU4@+UO(4?5?rT(X:J!uiL.&O3L#'gr9U
%S8!`dn`bh@dp?gGZsb?0l[-(g,aP<QHn47@Fp94%(]3Yt._bDMW?Xh,Y.8N4AGG_pA2"k_^c&6E`so>b2!b?l>rB2b.UJ(2;-d%d
%;6dcr@qGC^(:4S]S@^'1T`[Mg:JmDmn!=nIgisdbHWGH/Ycs`\`uQUMS.GMdYgA:ZWnSq_1=SFek?,llS`Xttg5,hfh`%$+4-(:n
%@,Zhc6lAQZP*-7lG-@W*ijCpuOX)G%=)8`N7&kSV\VUVl:CN_6ln.+&/Md'D)B5,#*k#?MZd*,^)(B_BeW(Y6VIi1Y@PmFp%2[9'
%6Z%j,]JlcfO%i];4Gp'(K%'K03':]c?"VM9-0"6>46A\oq4==ZZ28\uF:FDP'>SeXejR7&!uZG?jM80XLI79adu;hKmAOaAq/)QH
%#`sIqAHteZ_^F:G0QF]M<%Bl$S@r/D34(U;"RK'kUbf:Z7Y&At79KJPkTQ'%caK=)c*q.]^R1naC7)Dj*($?3C2Pi4M:GnbG%hsI
%Np+\6V.6WsD9QKOD"B*Xa8W2i5KjTAQ/VleG;;8_V'@soV`/O#4"*MT4Lq*L"\Zd9MK\(<$n6t]@2ETmZS<pbIa^8jCM"?LJ\=Sl
%QEY5dBcj/[l(8OEna6;7P8B?i]NRE#iZ[U;^t(HV2=]0$KV;q%fKl%Tg(\SG0?C6I+[77-6REb#.(0WrpJB;G_n/k!A`eVjf4bJ=
%=pP5`O.!0pi(LLYRB@^X"8f32c//)o-lf!$9_@@/5.YC>qFUA6-cTqg+U%(jIBo"9]NMA>X[_n!@15mq_W%rYFtoEDm*"^JnV\?l
%];i&[5\/_4E;BSi\P84BeDCRpC.oKIUkJf,C3JP(a&Z.CC$c`FaD3gH*<WRMYsAec_qDJ&7^MH#`;@Oa6]hd,^6qW/VWkX@Y[Ia$
%>d#J5bZ4=hX;2!W*J'rRFk-T])h.=AWisYb)<n;YINJ@Dk%ANE1:oMDJ<UX/@h*f%Z'0gtA@%9[]hPo=k\AG/j=R/\#A-A&c]%9n
%<SfD"4H4,IlXp!59=>pJ[gnc=!kAGuDYA-@7T*Kq)J?<c-YZ+ReSQ4F9#n40;*<mgNKt!&>^-ZNL(<!!EV2"OWDRb("%_a]9ccMe
%>a8QTGm?=eT$K][<C8UNHK6T"iSZflrHm?qH\P?@FX*G7RGmlQ=FYWdqT!F.[+!TtDKh+<%O&EKloKkX`pf6Q2c[t.h@Fc];&<Ho
%ajJuB;m-XQDsDI+@UdsJOVC]0hu1f2L1k(=Hb1E)Rb`5Pm.$)KWnYcP&/T2j&7<P$lf/f9DUVWaXP<^+BD8X$k_(;q!RpU`1X4jX
%+SUd=+"SMY!!7O&d#@pEhLjcBJ]u"7T_[HNT7'sg?btQCU570:&j="]npnMB8_"A3,C]S#A-b@dVB<U.8O`7;_Z=KC%:WDg<M#tC
%8H_YMFk-ULkJNDj]i"WT:H!C\bc(sT0N@TO!E!L]l"`M"d-.XY_^#`;(i:]NL"qu0Usa?V-/h\-5C@D%$sduW8)_Mo:*:h8\[?=2
%8MDMJ[9W>;FD7j?F=1pW;P+I;;cCZ<@]#1$6WU)fcdRs$>]W/P`'/,U\g+hYMJh@lNF@WpR:l-]:sXU?ka&gWaa[K<)J^K<iL<C`
%l3-GXHgYkb)*5<G&d@s`/_,R]e4JX-nVpt9j.:(r>:a'!C^2a\<a9P-d%Up;Y\577"uaRFnh>%rfeN"N<Ki7JkoH)\WNR+?,s1/g
%$3[`=5`Dc`L$q3bn=Y6o,p+<>#U^LdcXA&([NTWlc^53SbJ<MPkss;1/:%uc6W*Iu\m6QkIqS%oI3_)O4DYaUfh"a'2+BGg9J%#t
%GMSf2[Vl\_T/uWd:9a1WSC\\cNuc\)h([LL&2D-58/H7Y-DE;64nUW:co0Kj6,JK2!qu@*Y_V!1=*h:UJ*n<N<,nQ7ZPij*!MX7)
%gAhX6VS2AIF4UpQjIiI4+[<)(rn7HDCtkS^)->@;b)1)3s%k(0U';Z*V?D:5D7sM6Jdf#oWn%Z#*<8.2<hnM_^>U`Peb"nfBK`a5
%nXpQQ*fg*qJGjkEETfPK?8SUj3k5%`Y0f"+X4gtuVXkX"*<=;$^mbGe]'S\?`K+=G5"A>n"FOJA];krND<q:.'3HWU.J'4HRlZAS
%]<WLiFaVn/jQb*`&P4-X9]-btJZPT#B&EIE0FbV-W-Y"\!EaIl>Kk/_KL2_.f;L'o0gi+hJh_I"WCtEHrh.Ku4b&%T4^Fg]2A8b=
%L(7n`Y7np):M#Kd5i?++8Rnj/>=9G9VFZot:tlsIV`2<rn!;4c,g[5rX:JJKoi/%9QsKo!fX]6h@u(t%<`Eiq+-$ntB$8^j(D%?o
%g[g0@.,m_1+`t]uE0DijLlu*d6'1XLYq8Oo+VE2HfTtpQVDM6%Om/F%*R`Ea9K5T_+_oJ7-6WH@6bV;s8uW,/b\7'*%T(E;L#;us
%H5Un)'K:dY>&j[!a'n><F"@Vs:YR>+c=/>#UB0G#P=&bW?kU]kWTZXX`q?)%:K84__("[!I&cDi;s"r$T)M!^923mn!SKId*K^Vr
%><d0aCAmO=72@'i7]c'U%pCW!EF&6LJu\,N6SA]Fk/=s(7M)Y;7LU'4[GL9?M._W]$J>p<[3"/U99Vhlpm0<4_;_><)-IS#5e+.'
%kuq`0gC+a\@mB\AL)uuQ``Pla6rCJYe\`kEC_=/u:+=?edV5(E=2cr?iX1<E-'7=*"GK.r<lZ2ke^O.0#e_:(Qeg=ph)Gc./5S]Q
%BbT1YnTcl-mk"0QW=^u$(2.r]O!'HKg(VeHWFg55&76\;A\-dVMpG7[at;<%gf.s&[Vm)_(Z2LDlB?S(U"Cr%"GNL_@A)C(k8iMK
%p'8^^:tFQ<o9j3nW@'n;G2pPddIqAm!DpgWm[PK\!.r&G1@D__2LfB.;]`K3N"Ii=4Vbro&T(l^PTU[-lLs@jp'Kp:$;tGbhJ[XX
%Gr:\,*?8Z.,llmITA@Tk3k;hESoARGJAn[se^WeJbYTD%#JSuEG.10`>7=eW%T-Ttk_S+cpII(FXDkE3[Ts+pBXsC&g5'JR+-dQ%
%S*M`$(EuS^C-[Fi)]27Q::?WUOpIHPJOn1=PH*<#"#P$[e@sl9L!UM,RSk#*$%Ob'dca*:MoZZ6HD+67,r=k5.[6T865Y^IVNF4N
%bQE6J]?L63rW@gd&g2T"^EJ"&<^qYr3&6;WR_,&)2SZanRr]W3.7WfeYSBTs%bj0TXNE=\S@`nu\uobr1WE'*4aGCYS)*Dg!F#tH
%[X<)hRF/!WcIa\j%Yj.-l5N"b"<d>f$UgaL8o$GTp^pZW_,1>@g@TI'\Y`R_WYZ]k3%N%K?$k=Bb&;@-.jFEiRc)f;AT&mH]sHJ9
%(oLXXlZHnd,5W+fh3[(<BlhNT/5NZ=\r2!L^Fu5tgS*d<OQoF\He3T4WbEj((_E5bJ9@9i?KWE2B]&IK6%'RVf'<B$fLYB+\L_T(
%KXJ_!AfCHWM&^Dbg)[Hq1h_Cb]K+PA>%m\='00@)%j"%[H:Z#ld^^:fJ^2lod=O99X)mKFF>h]VhPBjqU<CqM%jTca2;F0GDg&87
%_o<GFEa<?@n/4L?+%<3tWY9'0nSSPGHYm3@.VKlo]3FhGS+X'a5'*(L>R!:ODEH6CUgsV<b<1f)"b9k@GA38%B&g5PCTEO-Q;N8]
%n1tOI<YtJ(M6hKqg.S#E]51q4_EIn9a**+M%Yo)XAp]:66F6'R.lJ;P!fq%NId]%a-bVV=F"aiN.'gHp7"K4n8"V.&[jkU-e(l]A
%LMT#m:>lS1f)^25bh+Hn!KgOZ]>PiO'4f_dIO*[l1kI!LSTAZ!6b8ss:F2BkY"h0)c/k]r'*Vpfjb@3IeM:b,7534OHdba=ghhR0
%7pJ2URf.<!dkg:ahsEd!>Wm0LjW4sOiI8";mIjF$nDs[ef[YeFW5KX3Dn<EorIk$&`)@CU>"pJB3qU-)GhkPhIgPcUGdqRJR<CQm
%_]u;aOf'qM?1oG'dK$e^Ql[2J<0D^pqEPumjYI-$?GUWe"QG0[#>Rtnk_+^AKac8ChX6.n;OtH;32V@&Tq6g?n5>'=;%,irEZloL
%QWY@a'iq+\MO`Gs;#"(f(1J:DGc,Q%Yu@isQHOX-.I?(;0#^1I?&W4>KlJ^U.Wl'eWePI-gCW:ie$*L<"E?,t`t3A4!161t:^"<k
%*I1[k/XU!>egqBOB)HC/N0F^#k;m9q#Dd!RLYSj<BndHHKE1\(=ZSRa#32#Zm4%A2raOsO?7GBIT@,g*V`82shYM=DJklS:38O6=
%LD<2c0;+bk*YsmriMIhB=sC7J^HS9ER+FRQ//!R8CY^kQEM`lThGO1_#Pn_1nkC!ld.CW^AHXqPWW:b_XgR!P!2e/@-sQ)fRu,`>
%&;2rAPRRl'[IsELAWmV'cJgGD-"[fIaQ,?4\b"b`>j=X>fV170)[B_T!mHu%Fq;e4`Ig6AHDP@5C^]jG^)0BCMUWbgi>?SPEYi+*
%&U3-[B/G"ura(V+orKLIY:Bc_5jVe\&8tDKiHRZl;Lo,@JO#\-KiK8AQB?+?[q#qDIRJD`,JdDXiOX2b!t./+@-!9G?ls03inqs%
%#)Fh1[da+t\8C$h2D_E8,FZ;`?HL$$%)a]d$e\OJCJu>fR\F;9"](Tr;^T_%.N.0?050@UWo3V-gGV49'(N<-WAYO?:#G%M*BXmJ
%-P_>jB%;:>WD3bnW7N`$q,I#1:P!2OP[_e4?BC^_lDSD\4/kHB=bEb>XkQ5,q9T+%i!pe1#in$&9clZ]o6#(1Ra@E0L7J.014^hu
%B@\XPB-5;%[9?7%,2ts832EgN#]i;mgo^-(PJ&+bNqSD4,'KUo,uK_)5Q\ZZS-k'ValTC*MkO+t>LUZBn-Uu]d7-7c^7\5<]3^*2
%b6u7%8+92D,>!j?+Y,[<8S].j\SbhK\IY1-_]4Ge)5e'$7F#=f-=o=;\ZrrQKLkK+bAJm40hhack'rK8BuUgR5,W%<T5IR7!A]&#
%RU9Q2=O1Yg[A1'S7f@ktb#@T)@]/&3Tps:6A[?jC2@HGu@fl`u54BCU+K_2Wc'`$]VU;fu-Napc&)NH/W4+cS&@;KnrJ86ao;sG>
%Dj&T(e)t)s2IkVB.%KRiGV?`/rJsYF:Ka9=rpPYkrG=PZ^I7uqJ,OS@IX_+kDk7;F#!LA6i(ETN=T.3<mW70Z[O_CNhrk"]bP^LX
%5PU^TUS=A`Kg1&1r."=aX/S>[<@RlJV3gM__uB[:YQ$iR^N*aes4,]/?QJf@a7X)]T3H6P9"iYj82L8=l1=qtb('D_Y6Oqg470ZH
%AW<QUnu\S/IPl(+FFpB'DpV=F>*ef!Zt2;i('1AgF[5g0&ED9g<n""3k2C&l8<#)%*hTiY2-OTtF$00)7T6Y(k8fXd9A:]mW8qG=
%-*kc!I'@F_`sD0'+H4K^=\3uR)`eObC<2U(i(u2SBd1p>a1T/3=rql!X2p0eAZ[f?@FNoF(M)8gee7;7h)0ItdFrKNo_3>=!<AsN
%QDA3d%]#8IZ37o[AL.^(JAqu_EX@Q8Z:T.XjK!AK0&[)IT%XHK@1cY',qBe9"DYq)F]1:5bis1AI]l@8b,9Q$-V2Kd)b0)pm450.
%[.gBa>[,_CFl1;MA7E$+!R.$BN3dGn0bn/A]d)6aDr?<)FA+kBh<0lR'3X(=9]\5S`,q%R7')82ZrHg.kEo;-.&0^AMa=+J9J"bB
%g5.[-LSD3ErSWpY_`D-N+eiIK&i;YL/SVR%F@g*/fU(ZfNeU.'XTN+o>FiP/1%s5]r:,4O]ch1V#,m`&.S?Vr[fZ=&45T]'bNf["
%/G6l>CX\pUn?X59@"8%9CFa`-[m)DLmF7UL<IhRPP48^Ol?+HC)V]c1>JitS,Z2iO5;a-HmZ92!M\TkM5DPLCQoKC"6PPBr]"slD
%0T+4`(@mECLO$\;</6(pY*&jkmjXa1bp))KJi7]"9V3!8Hr6q8(,_/9*np?^&s_q<m@3rc3]D*EHr0J/f)M4#+2jqDih(JY0?h$Z
%\5&f'cXR.FN6VYi/?)?F12oa#7kQ9Qeb]aG5$K=Y^TJ*EmU,XEA5W(LlCiq#l2HmBYPZ$1VotunmY<YPSmO$0@NA7&.LKbej8QDM
%rQ"<i2ebi\%m-[()sUg^<pY<mTmQW+k,&1Z[;fHbC>.c"o.KC^'trYMgVJT_Hg8Yea:4j@=Q5&5mY=$:AAfS&_k%_E#g/C^Bt;-Q
%rp`&DWc]?@Mf:f9'OpJFhlTB&=t+7S)cuA)Y93aO/qNZ$3+MMR6">%oEc=C]VWbg::;L;@o5t(70'J`ipd_pL>.)##f<;sIfDfjh
%m6<b9b-Ia*`j"Uc6NPJe()RL5_5Hl)Xh&)87U683WGNC=5%]g#ck9D@o&8Shpk.,,O`:/0k:hdd%1:O83Y;5(JWhs&1IH#Z+%JCT
%EE04MkUO,&7'T'iG(<0nZ3\2/+E/FXoZ;N$WmR2kSeD#V#U3tj\1;\h%d_UrBqXVW7EpS,'P-:.B)5nPG#02lDa^'5:Bbs'2^3#t
%6^4b14(P0/poC@qeagT@*(l-V"kIjLWD_Kah8R6r..&;se9(5m,OqklFFguroC-'7(4QE:%]A6ED5h[u[N%APEU*V`9K[1("B`@g
%f6Q7X?L>[kUh#'g;ZnR)flj:P2!.-a3_U4g*,1k9gA>3i"8%YqZ0TUAE3?aoL@4QP_pL7=&NSc^;;%V5OVUog^3TU"P:fD\RgHM'
%F+%GDAt8onB-"ba,8et`CXu[;No>D[Imae=$^]ueCJk'8U*Efr=CS;cfV3`7i5N-B:nTTiSt"O.&SpN;md?`:X>Bf"F%hK7;b)bU
%DuL2-p,>-:B`^5^Qa'+@3G@r=9(gJ[\[KoAQXOeuN`l3JZHd'nlE+4`2iAV[U`[@tijNd^(&CG]fUKhmUfr/(mVi!pY3:%!5[l^^
%fR+F4`9m2'JE1@kmc#92CXt%SZs@MTB39+A>-8.M32>@KS(jB\KOe\j;4F?$9eop<Vrf"=KQq,$(RqBo(=.q]?u8,54Hfm%k3.rH
%Zh<7XhYna1oX4]DO?t=^A9?^dpV7%Ph<?`=(6'l?4"`DA"!_>u0ATl)!;8rD^%oQVFE\);b1N94eX_@nc#=KFIBVMiOi;Bsj0uGn
%%*@;`r+bU^ZXdZLGIT_:]?_&7]l2ck1Poc<?AB]$[Jb1bh-hREm67k8mWa]"VOo$,4!"g4l"?=0<ZMMp2XChih&3,T>qiUD[e`86
%DTd*UT^M"%r@jS2[P*.8gD8r\Bt]Na%U'@ta8X!DB_/FAjj\S#"PGS`XAll?\hD=]e&),kLO?T<m"^kLi1@,2n1^ukFfI5>IipEG
%`]9.A]+3c?I:;3\=c'`/MG3+7U<bQ$!pQbM8nph5P.i;s)5C5p/2]pd4Z;dmL]$SGDB9rnbMf`:XkV:<oKBecJ0jMnrMi.hcnHr7
%67Xe'd*?(VQ3F-Qn<=Fd]g6-c]\BW#c!1]V;1\4`bSCb;m%701H3R)N'Coti<2CdA<*TU_g\.4f5CD4QLUN0tHo]H6GCo:]<p4SJ
%@)!,^>\+JHT#0]/W;^N$XeF-MjLRUJ:!HNI*@3#d/L]O,-is5co*'A@Usi;k@H:MSK0l03SlVsa'budm*o$EA]n5^jF0&"FhL^K.
%s/>CL3/B0gMjue:LKp4RCB/M\HNV,Z#TA]=B0\tY:!LLn""@B\kP/"U+<ql)DBQVZ;Gis!l$N@,Cpd6=P[q0iANVg:?2=[gdEH$S
%"l;*q*T\usqYNYiR*fWZ0MdU1qYC1Igb=hIaAitY#(=7T3NJ8f"nHIJN^BejQ)n(aTN"lWpdJd'E*+C(<7EV6TCbPqcW4%G/<WH`
%USu3k^1RSiAD_6%RERr9D=]p^Om)[aJ)(eR)]_CZrp'Z"n+\^^hr`D%.?[uUb6\mNJ`,c+=%aCVUgt8#-C(rg9p*a;G$6$#-jL#l
%!TJ0O4BjsOX->/M*^r4Mn/Zpa2a;9A"jCoWGYGBuGM\@=hkToR0)-oj_`7QOJa>egs+"nkWXRr:=NYl%5nKkXfH$/Di@>XkMu'#;
%E[3iIHialp"L_5YM,UOlkhWuiaKnm2eOmrX4^QR+(;?^DMdKiR>`'&F%`'KN`ncZrhkU2`mhVK7.&17*^-7'[JZ/YpX]4q/JH[nj
%Ol?:_$0je.+/c[>Uh#?<]Sai;^Sm(o\OpQ1j@'(uPWA`^5b>*XXOp/-Q!ZtnC#aP0!7@BXjZju<KrA"Ag&V$Ic90JPd>A$;O9GCP
%"r?7H!=pp,d!uO70IB`.I^:]c2EHk`A69tV<(J/.QEgZr5fsiGYmVpSMZ1"KQr-jUa\l>Be77h$e+]LB`o.,U\8D\MZJ:L$fCF(a
%Hh9H\bs6f01.]%MH3:4HMni:!"s"g,:X(.JXnr1H*W&.OZBRnM/ZGC.oKD:LBV\t8TM;!qnML?k'm5C5;/\,NZ$#O#qe7Dt(8>:L
%a\t6SDom=<n(%0*UO[dIY453#_58Q*$@%g(YVp/iAlCL;SnJHNT9;'A=%u+8`:Ck8@aTj-.@Oc2@mZP;l4h@7hGI6efmC<CST_$d
%\[tMa5V'<dF\c%>IZH,MLJ\TKI.Ar>[Jg595\sc%I8\M\(6=lTV6CL>"?ccEH%b*Ka`_`r>U9QHmkJ/Nl*[$R.e'/^q1D#$1$TLq
%;L;Bm@gfF=+.oCDj$<6FkF8$n&=TNXY[B?R9t(3ViusumNX1<@+s#+nmu3#CRtSKPJ+q>X"EDjrmu1ssQfB$@4"V\Q?T$XWnSD=_
%HFgfp!db+7hdN1BP(>5o:Z\\8IT'P)Ykr5d7^UP,CEm`:X%nd,C)nT`2XVRnV[YeN6r-`5XG7C<8a6/d])FN6J_^G#^1IdaUH=+s
%:,&(9i)qbN!=+4j39AeYP#[F6[n6umT2Rq)_d'*;8am7)-%Ab4Z`2)IY=Re5O-1QQpR])`p!goH>^\j0ciiid=p`-a,"Wi6\Gi^Q
%".[At8Gt`B97S"hgm[;)ljJ*IJ:R9O8BHaC[S0*nU+\!+J6Q*.6kqR'/t"n:^pBUQXBM2D2+Qaj2XilC5P99AjVuMbHF+(LqfdOf
%VtOilT&<1g]n+Xu04.E2KY6>-%M(!2f;<L>j;Agoo9`+kE)8Z<8Ijs2b3%?:OJ/]paP!W;f%1$elP51tMF=Eq.d+'Zn*'Y_ko#_>
%k_.GE4b$AF^/$K59@<PEAO&-Eq>`;I1EN4U,Zm";!Wh8*d/is\ZpSCM!bhr(!*2B'iV/R4i+]pG;%dIp4Q>CB%QrLHQrRmtMMcaH
%DqarWhCj1Q7Nq*nmI5OKro?4?Vdk/cM/JIW]k.h*_:lkdSt-(*`IsF>&3D^0_Tk..Ln9b=SNg1QNqaEY0gH;C^dpJC_I(+#^:rgP
%ZTU0L`?NuMOVd\fNUQ-2W^hC$C%bI!9mGO^:;0Nu:EAI,&9BZ,h$)5GloMKBR2!RR3t96gE)f[S*$%=X<)@:?Yh-d?nP`;Fp_T>Q
%JJEX;X!i^R^')IPU*J!1^LbAbZIC'5p"7:YFT9)NiF\sB@[T;sEkUqAJ4F/X7%9iUE!!#^jP08/:e]WsGC*a,!55WZk(T'ul,bRn
%PRpno/s***XZrq^au"NZI*dFW]njuj-h<.uJf`\@Y25d3hHYcQ4*m+T8:^0mI1d!X]XW:.elBT.!sP?7'_B:S63mC&bm6A*FYfae
%al%hXHS-ckr#ddVaJcJ40Ngh1f##4OIF40iX/T*8,u`W$8Il8X:[bcdisc?8UBF`Y:sufH*I2riDI\tUQ#m(c.?ZclPklLhATK4P
%'SUi>Pr-9L4S5.[^Z=Bok+Vq16:JQ&1/3tFMXmgcqI7$EXGX,j?MRUN@iO;]!<(7^Vf'W)6cMij>jm#eLC"7hL.3&a2c*;@Zo"2_
%aVF)MqB=/H5gUSqpAncL8lgoW0GP=Y^;u6>,RrW\b/NcEU*Iu>JXICg[7E_L[dcL*E-.XlE^pQVMkP:^Hkq6(cCl]PY6#T:-D,HC
%P;9b=[_E?_Rq)Z8!Fs9Cond5@RWN2c74#lPoEj;HPFma';sa?i3pWr+75D&nPk<><p[gYo!&]b[#-AEhUMshqpDn_Hq!1ft:EZhO
%i'_qr+D%=l<a>*B(@r^+;l&jlhbl.SVdu8r/ZYh'n;GF;n2`EM7Tq9VZ_upW`@YDh;oKq`<'H1cCu]m=s4mRC;o5WET<_,scpls>
%hfB>U,_KX<^WIh+g4K_D7MQ.ppY!dmVW]tN"#9ie2+hma;mo(3!L.gPaV`o4;CS*K[A6T8nKa=`'?O->XJe'PHV`PFlDL-b#0L@O
%(SLGL[\d7]&O5V9bJ!^-]RJY.iStslmB)/^s%^Uis3k7ZJ,.\:4-j*eo'gUV^3sqcXYmK"I=#J7grT$h5sRBl#P5h2eAZO/I6ZjS
%n_h4lhh;Ep)sjJEU%kPko>dCJmS5,f@NY,_Ie/Q2YOg;1-Q'=E$2qmMgihL'hs9R_IT9SOeM[B0s-h`5%s)<Z)`3"f9*9BOUcCIj
%V"kTBSaBeMQ)hZBHG9,[.p[<G+7$VL4n1FYmYN%cigVT-IfK<t*Fc.aC>&<q<\m8mGg_&mR_;;m*QQ7%oXE`*5MW>FD-m#>_>d1c
%g3L;7fUEmnN70Vg2t2@44:qAE!?&*L!j]W\1_AIq-J3?;Z=YAcWMkJl=6jFZ()aTU=rI&F2Q9Sp[6.=9>ie(+ciiD/g^OM5%e4D;
%L'Q@R$+/_.ZTA5bB-:LmSdTQo&jkH4>0&%-8d:c-CD>80lK7e',5sa/<[<U'X.Xh:XPJA4F:$RMZ@Uq2Snhs@r@':Ki7MX^pBrMi
%/.bX]0fG[\W4s5T[5K^seH(+W(rgB&h^eaEmBMhjI;k4^d[0lXHsX9M42T_P@)U/SdBWbZdsR"oZ3RuDR!ZVa]%Ki4hkXR>(kJV=
%!1B;>X<Z+FVAtg%O*'mKJW,KkBSY7KK;"<ij-thmg<CS$X^DFQC/3sm(mY?9Wa_`b@t62)7]j^?kU[1gZtAECmgPH5L+7l?>t+`W
%;.Z-(e9eNZ`V!AJ2FZ`'AJ,=?i(;d)X?@(7S+r'?PRg@lKe#Q6cmj"/j1U!'!4mjpf]WcsJ)R@"+Io]cOD2ZN#3^^GHPh!'P\'n%
%P'MAck/Pp_@#P-qY4-/%R*K[)F%$(pWIRW%-UR:'6GU0UhEQ*;XQ?I@K&s0#-@ft0^eDZr@qY@;SKYX`WEf@S"hMFlT2Tm?JYQHK
%P?/d>B3ELNhj2/r-6i\@.$_SS]R@XFK"MRJ@]Eo6NE2hUKT5#FK'_TZ_6URtpiMRjeTJ4%AB=3<D)5=i\H)F1I^0]UU4H@tkbkW]
%k[m)b\;K3s##-5;e20@2e&HJ!n)X2HLlGXc]@QhUQlm(K,\fT?.9WLaj<ZAbrjG78bdOE+E:DH,[L-(jR%Z:>L9^F'/WiA:?l<mp
%X`a4+Jh*7L$7(TShro[A4eH:ZG/>nVN5dXRB!jWcZUkE8g0HI!X0H>iJ9[Z?%D:@8YRs)Wo2,(a)l%<OQE0\lg_*K!OGb:@dDNH5
%BJ!5?Y)=N)3<<sJ#NcYrp:k.>RO/RGhVYj[+?Bg29/deGEGn3,QY?M6+CN@>6pM]$R"TboFL.&f3RN[+=e%+?rblB_^iIC:G_f>U
%G+HXdC1H`HeE9*sF:0bHWN[?-1>,ulbm$@]F)*gR6Sh?@Y+X)[_a[/!e#,]Iak,=:"KiV%D?)UjATA3;P2tT@3gh7D>u;"&qZF13
%_D+"5`O9<@+d#D<(o>7@o]<lur41Di/cW^lIGasp5L-PA%hK[EnYNr4UEKjs6kKLrU%MNo(`WNH@-dl^2N78dYSUcFO-K/9(mcV-
%5).J^`:qY?GWute70,pa+`PA:ZGX6Se&#[-b^qoE0c1_22oN2@Kl)rF=+rmd$qd"fE]4Z\eLgkEfL'DgYSY3YPD$&U<7.bMfCshN
%m#P3\!6t/dMY,Y-RN_=C.RX1-Al(]Iq![<"K59a$l//Y=q--"tG<;S6]j![dI(T"Lr2Z1MH?maZgbF"LAcETbdU4YTT*jMTfCcZ+
%e\:_FGUq%-U]5j_r:FW/J+Kjms8:.1^\Yha?iT6PIg,Nj(`D<4rq>TSs8JLkJ,b;]55j^.5QBF.o:KB>q:.E2+RS&Mr@^]u"6iU2
%q;iDG:I"^/0BU_:?N9fNfAA^hr2W'^iAZ74qW70qqn$d2nAj/j5+1uJ0E9pJU;Z*@ks#.4O%S!<-.U>VqW=9N?Bt#0_]Pl*Dl,n\
%jG'obD"$LD/O)!6#6"O?CqsT>?T&n-nOQJa#eYT/[!;J%O%]u64+M5Ka(2q*n!t<'OQs!uh=O"8/U``0j/n0UIqLf;./Y,Y8"C8?
%<r&d0lV5.^F\7o.leP<)iIBa6IJ\_JiI7od[pS%bh5@ht08NVRr"\&<g[o0`/#H.@:]:%FH#+Fk;Afa\(@tZ'LbeX#l1GWogm_dP
%AI!1d#,[Xb!>`ZgU,r5\/-hL<T[-$hD6Vakn]i72n'j=(*Ut-hr7TE"_LD3:rp.>r_f%a9i\+YfrSnu,^u,(%07Nf[k?i`/qj/t>
%3renL?i8B>:LF%Y&(jXkr8[HG:VZl)b<LFHe^n.lrTSN5rA,!qM@;`HbuaqkQbWO=bKHOXoZbup>j6]cIGsFghgG7mlgOjm(%LqN
%0>Df/o"TYLlq.6L].\VSD-U/Jo@oFVq!-tAYCH(gII9^QHm7[eq7"-<2d]q2IJJY:^9+JTrpn+5If&dSJ,J,0r`\ETdDg)tnFG[*
%IJHc*?-M4(c/8Ku^]*1&rdX+hmj8~>
%AI9_PrivateDataEnd
